<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="spf4j-zel"><sessioninfo id="ZMacBookPro.local-71880d68" start="1585303320639" dump="1585303327515"/><sessioninfo id="ZMacBookPro.local-2862864a" start="1585303436996" dump="1585303439060"/><sessioninfo id="ZMacBookPro.local-c3e89995" start="1585303439552" dump="1585303441849"/><sessioninfo id="ZMacBookPro.local-ed80adf5" start="1585303442333" dump="1585303443158"/><sessioninfo id="ZMacBookPro.local-e73103f4" start="1585303443658" dump="1585303447601"/><sessioninfo id="ZMacBookPro.local-37952bcf" start="1585303448106" dump="1585303449161"/><sessioninfo id="ZMacBookPro.local-de583e2c" start="1585303449658" dump="1585303450444"/><sessioninfo id="ZMacBookPro.local-cd1b80a5" start="1585303450938" dump="1585303451760"/><sessioninfo id="ZMacBookPro.local-309c5530" start="1585303452241" dump="1585303453090"/><sessioninfo id="ZMacBookPro.local-2605534b" start="1585303453581" dump="1585303454508"/><sessioninfo id="ZMacBookPro.local-68406137" start="1585303454982" dump="1585303457595"/><sessioninfo id="ZMacBookPro.local-15c037a4" start="1585303458101" dump="1585303459068"/><sessioninfo id="ZMacBookPro.local-1a906366" start="1585303459550" dump="1585303460709"/><sessioninfo id="ZMacBookPro.local-a016092a" start="1585303461199" dump="1585303462075"/><sessioninfo id="ZMacBookPro.local-f81c888a" start="1585303462575" dump="1585303463520"/><sessioninfo id="ZMacBookPro.local-a1dfb0e0" start="1585303464021" dump="1585303465020"/><sessioninfo id="ZMacBookPro.local-670d06b9" start="1585303465510" dump="1585303478668"/><sessioninfo id="ZMacBookPro.local-767d1e43" start="1585303479167" dump="1585303479886"/><sessioninfo id="ZMacBookPro.local-b6a36136" start="1585303480372" dump="1585303481177"/><sessioninfo id="ZMacBookPro.local-64e9ea5d" start="1585303481664" dump="1585303482408"/><sessioninfo id="ZMacBookPro.local-ef54a789" start="1585303482894" dump="1585303483657"/><sessioninfo id="ZMacBookPro.local-d060b5cc" start="1585303484150" dump="1585303484906"/><sessioninfo id="ZMacBookPro.local-9da9a0e6" start="1585303485391" dump="1585303486591"/><sessioninfo id="ZMacBookPro.local-38214b45" start="1585303487073" dump="1585303489297"/><sessioninfo id="ZMacBookPro.local-9208c612" start="1585303489788" dump="1585303490604"/><sessioninfo id="ZMacBookPro.local-dd974b11" start="1585303491090" dump="1585303491827"/><sessioninfo id="ZMacBookPro.local-1ce20678" start="1585303492323" dump="1585303493144"/><sessioninfo id="ZMacBookPro.local-5a8c5827" start="1585303494721" dump="1585303495345"/><sessioninfo id="ZMacBookPro.local-afaef4b1" start="1585303493627" dump="1585303495486"/><sessioninfo id="ZMacBookPro.local-d9599b10" start="1585303495983" dump="1585303496857"/><sessioninfo id="ZMacBookPro.local-18027031" start="1585303497345" dump="1585303500814"/><sessioninfo id="ZMacBookPro.local-35b57da8" start="1585303501313" dump="1585303502121"/><sessioninfo id="ZMacBookPro.local-61bdf3c9" start="1585303502612" dump="1585303508590"/><sessioninfo id="ZMacBookPro.local-f0471a92" start="1585303509079" dump="1585303509795"/><sessioninfo id="ZMacBookPro.local-b93d7a61" start="1585303510272" dump="1585303516284"/><sessioninfo id="ZMacBookPro.local-bad61969" start="1585303516800" dump="1585303517727"/><sessioninfo id="ZMacBookPro.local-566f9891" start="1585303518260" dump="1585303519131"/><sessioninfo id="ZMacBookPro.local-e2c095b7" start="1585303519625" dump="1585303520347"/><sessioninfo id="ZMacBookPro.local-73b08e52" start="1585303520834" dump="1585303537412"/><sessioninfo id="ZMacBookPro.local-1e2ea7be" start="1585303537901" dump="1585303538588"/><sessioninfo id="ZMacBookPro.local-989c7354" start="1585303539068" dump="1585303539833"/><sessioninfo id="ZMacBookPro.local-941eab0" start="1585303540319" dump="1585303543919"/><sessioninfo id="ZMacBookPro.local-3196908e" start="1585303544392" dump="1585303552342"/><sessioninfo id="ZMacBookPro.local-7bfa3517" start="1585303554200" dump="1585303560984"/><sessioninfo id="ZMacBookPro.local-b74b2e1c" start="1585303561219" dump="1585303567626"/><sessioninfo id="ZMacBookPro.local-ae28038a" start="1585303595341" dump="1585303596282"/><sessioninfo id="ZMacBookPro.local-ea8281fc" start="1585303596498" dump="1585303597390"/><sessioninfo id="ZMacBookPro.local-3f59e365" start="1585303552826" dump="1585303649769"/><sessioninfo id="ZMacBookPro.local-66c9c83c" start="1585303650257" dump="1585303651258"/><sessioninfo id="ZMacBookPro.local-65e63fe6" start="1585303651736" dump="1585303657521"/><sessioninfo id="ZMacBookPro.local-3d72770c" start="1585303657983" dump="1585303667008"/><sessioninfo id="ZMacBookPro.local-6caaf45b" start="1585303667468" dump="1585303668536"/><sessioninfo id="ZMacBookPro.local-f56bcb6e" start="1585303669007" dump="1585303669764"/><sessioninfo id="ZMacBookPro.local-c8ef6db8" start="1585303670230" dump="1585303731434"/><sessioninfo id="ZMacBookPro.local-1f085a0e" start="1585303731922" dump="1585303739113"/><sessioninfo id="ZMacBookPro.local-d808c9f6" start="1585303739605" dump="1585303743725"/><sessioninfo id="ZMacBookPro.local-80e5316c" start="1585303744223" dump="1585303757814"/><sessioninfo id="ZMacBookPro.local-be4b8d23" start="1585303745497" dump="1585303757910"/><sessioninfo id="ZMacBookPro.local-93e3fad0" start="1585303758453" dump="1585303765225"/><sessioninfo id="ZMacBookPro.local-db958a9a" start="1585303765724" dump="1585303766424"/><sessioninfo id="ZMacBookPro.local-c0a67b14" start="1585303766898" dump="1585303767645"/><sessioninfo id="ZMacBookPro.local-cae2a46a" start="1585303768135" dump="1585303781198"/><sessioninfo id="ZMacBookPro.local-f47507a5" start="1585303781707" dump="1585303782703"/><sessioninfo id="ZMacBookPro.local-4920c2df" start="1585303783181" dump="1585303784059"/><sessioninfo id="ZMacBookPro.local-bd016830" start="1585303784530" dump="1585303785221"/><sessioninfo id="ZMacBookPro.local-50d7e1e7" start="1585303785701" dump="1585303787441"/><sessioninfo id="ZMacBookPro.local-96e9ddbb" start="1585303787926" dump="1585303788613"/><sessioninfo id="ZMacBookPro.local-bfb4dff4" start="1585303789084" dump="1585303791936"/><sessioninfo id="ZMacBookPro.local-2c393a63" start="1585303792420" dump="1585303796384"/><sessioninfo id="ZMacBookPro.local-ee22fd99" start="1585303796868" dump="1585303797759"/><sessioninfo id="ZMacBookPro.local-1391ade9" start="1585303798249" dump="1585303799155"/><sessioninfo id="ZMacBookPro.local-3dc703e7" start="1585303799640" dump="1585303800410"/><sessioninfo id="ZMacBookPro.local-74a39d44" start="1585303800890" dump="1585303801661"/><sessioninfo id="ZMacBookPro.local-c7beb7eb" start="1585303802135" dump="1585303802857"/><sessioninfo id="ZMacBookPro.local-dec9b240" start="1585303803336" dump="1585303804267"/><sessioninfo id="ZMacBookPro.local-e80edea6" start="1585303804753" dump="1585303805469"/><sessioninfo id="ZMacBookPro.local-90869c81" start="1585303805949" dump="1585303817144"/><sessioninfo id="ZMacBookPro.local-5499ec4" start="1585303817646" dump="1585303818521"/><sessioninfo id="ZMacBookPro.local-ff73f5f0" start="1585303819020" dump="1585303819809"/><sessioninfo id="ZMacBookPro.local-b161119f" start="1585303820287" dump="1585303821156"/><sessioninfo id="ZMacBookPro.local-90b94db6" start="1585303821648" dump="1585303822656"/><sessioninfo id="ZMacBookPro.local-5f5463c1" start="1585303823138" dump="1585303823916"/><sessioninfo id="ZMacBookPro.local-ffe6bcbe" start="1585303824390" dump="1585303827308"/><sessioninfo id="ZMacBookPro.local-8745401f" start="1585303827801" dump="1585303830707"/><sessioninfo id="ZMacBookPro.local-a4d54316" start="1585303831197" dump="1585303831983"/><sessioninfo id="ZMacBookPro.local-22c95a07" start="1585303832472" dump="1585303868476"/><sessioninfo id="ZMacBookPro.local-2da71abd" start="1585303868965" dump="1585303869684"/><sessioninfo id="ZMacBookPro.local-5d2920b4" start="1585303870159" dump="1585303871163"/><sessioninfo id="ZMacBookPro.local-ba0eb1bd" start="1585303871653" dump="1585303872378"/><sessioninfo id="ZMacBookPro.local-23ef5c3b" start="1585303872854" dump="1585303873719"/><sessioninfo id="ZMacBookPro.local-4d8f282a" start="1585303874209" dump="1585303894657"/><sessioninfo id="ZMacBookPro.local-fb06270e" start="1585303895175" dump="1585303906161"/><sessioninfo id="ZMacBookPro.local-5bad9ba8" start="1585303906646" dump="1585303907322"/><sessioninfo id="ZMacBookPro.local-509aca19" start="1585303907812" dump="1585303908594"/><sessioninfo id="ZMacBookPro.local-b07e0520" start="1585303909065" dump="1585303909757"/><sessioninfo id="ZMacBookPro.local-e4a01c27" start="1585303910236" dump="1585303910943"/><sessioninfo id="ZMacBookPro.local-19ddaa8c" start="1585303911427" dump="1585303912220"/><sessioninfo id="ZMacBookPro.local-fd3c54cb" start="1585303912714" dump="1585303913520"/><sessioninfo id="ZMacBookPro.local-72bf2bac" start="1585303914003" dump="1585303914897"/><sessioninfo id="ZMacBookPro.local-2d8bdb5d" start="1585303915400" dump="1585303916191"/><sessioninfo id="ZMacBookPro.local-62a6e9dc" start="1585303916671" dump="1585303917574"/><sessioninfo id="ZMacBookPro.local-8337d9b7" start="1585303918040" dump="1585303918878"/><sessioninfo id="ZMacBookPro.local-215d9af7" start="1585303919370" dump="1585303920107"/><sessioninfo id="ZMacBookPro.local-3d9880e2" start="1585303920585" dump="1585303921652"/><sessioninfo id="ZMacBookPro.local-d116d98e" start="1585303922141" dump="1585303922949"/><sessioninfo id="ZMacBookPro.local-40391afc" start="1585303923429" dump="1585303924184"/><sessioninfo id="ZMacBookPro.local-537eab7d" start="1585303924667" dump="1585303925464"/><sessioninfo id="ZMacBookPro.local-fc2e6707" start="1585303925957" dump="1585303926848"/><sessioninfo id="ZMacBookPro.local-538da14e" start="1585303927326" dump="1585303928260"/><sessioninfo id="ZMacBookPro.local-89cb1622" start="1585303928745" dump="1585303929503"/><sessioninfo id="ZMacBookPro.local-d6b5205b" start="1585303931036" dump="1585303931145"/><sessioninfo id="ZMacBookPro.local-b51dcb54" start="1585303931347" dump="1585303931769"/><sessioninfo id="ZMacBookPro.local-ffc1f09" start="1585303931967" dump="1585303941868"/><sessioninfo id="ZMacBookPro.local-6f96a609" start="1585303941993" dump="1585303942887"/><sessioninfo id="ZMacBookPro.local-4ee644f0" start="1585303929981" dump="1585303942935"/><sessioninfo id="ZMacBookPro.local-7c4fb11e" start="1585303943417" dump="1585303944178"/><sessioninfo id="ZMacBookPro.local-961cf2c0" start="1585303944654" dump="1585303945383"/><sessioninfo id="ZMacBookPro.local-7f79777d" start="1585304009473" dump="1585304010799"/><sessioninfo id="ZMacBookPro.local-c9306a85" start="1585304151147" dump="1585304184541"/><group name="spf4j-core"><package name="org/spf4j/perf/impl"><class name="org/spf4j/perf/impl/NopMeasurementRecorder" sourcefilename="NopMeasurementRecorder.java"><method name="record" desc="(J)V" line="50"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recordAt" desc="(JJ)V" line="55"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/MeasurementsInfoImpl" sourcefilename="MeasurementsInfoImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Lorg/spf4j/tsdb2/avro/MeasurementType;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultAggs" desc="(I)[Lorg/spf4j/tsdb2/avro/Aggregation;" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Lorg/spf4j/tsdb2/avro/Aggregation;Lorg/spf4j/tsdb2/avro/MeasurementType;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementType" desc="()Lorg/spf4j/tsdb2/avro/MeasurementType;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasuredEntity" desc="()Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementNames" desc="()[Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfMeasurements" desc="()I" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementUnits" desc="()[Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementName" desc="(I)Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementUnit" desc="(I)Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAggregations" desc="()[Lorg/spf4j/tsdb2/avro/Aggregation;" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMeasurementAggregation" desc="(I)Lorg/spf4j/tsdb2/avro/Aggregation;" line="160"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="141"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/NopMeasurementStore" sourcefilename="NopMeasurementStore.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="54"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="59"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="64"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/RecorderFactory" sourcefilename="RecorderFactory.java"><method name="getMeasurementStore" desc="()Lorg/spf4j/perf/MeasurementStore;" line="97"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildStoreFromConfig" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="112"><counter type="INSTRUCTION" missed="20" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScalableQuantizedRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;IIIII)Lorg/spf4j/perf/MeasurementRecorder;" line="171"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createScalableQuantizedRecorder2" desc="(Ljava/lang/Object;Ljava/lang/String;IIIII)Lorg/spf4j/perf/CloseableMeasurementRecorder;" line="182"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScalableCountingRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorder;" line="191"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createScalableMinMaxAvgRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorder;" line="199"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createScalableMinMaxAvgRecorder2" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/CloseableMeasurementRecorder;" line="207"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScalableQuantizedRecorderSource" desc="(Ljava/lang/Object;Ljava/lang/String;IIIII)Lorg/spf4j/perf/MeasurementRecorderSource;" line="217"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createScalableQuantizedRecorderSource2" desc="(Ljava/lang/Object;Ljava/lang/String;IIIII)Lorg/spf4j/perf/CloseableMeasurementRecorderSource;" line="229"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScalableCountingRecorderSource" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorderSource;" line="239"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createScalableCountingRecorderSource2" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/CloseableMeasurementRecorderSource;" line="248"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScalableMinMaxAvgRecorderSource" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorderSource;" line="257"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/spf4j/perf/MultiMeasurementRecorder;" line="266"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Lorg/spf4j/tsdb2/avro/MeasurementType;)Lorg/spf4j/perf/MultiMeasurementRecorder;" line="277"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/spf4j/perf/MeasurementRecorder;" line="287"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;Lorg/spf4j/tsdb2/avro/MeasurementType;)Lorg/spf4j/perf/MeasurementRecorder;" line="294"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorder;" line="301"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;ILorg/spf4j/tsdb2/avro/MeasurementType;)Lorg/spf4j/perf/MeasurementRecorder;" line="309"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDirectRecorderSource" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/spf4j/perf/MeasurementRecorderSource;" line="317"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDirectGraphiteUdpRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorder;" line="323"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDirectGraphiteTcpRecorder" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;I)Lorg/spf4j/perf/MeasurementRecorder;" line="332"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="271" covered="180"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="51" covered="38"/><counter type="COMPLEXITY" missed="18" covered="10"/><counter type="METHOD" missed="14" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorderSource" sourcefilename="ScalableMeasurementRecorderSource.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/MeasurementAccumulator;ILorg/spf4j/perf/MeasurementStore;Z)V" line="90"><counter type="INSTRUCTION" missed="17" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeOnShutdown" desc="()Ljava/lang/Runnable;" line="119"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecorder" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementRecorder;" line="132"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntitiesMeasurements" desc="()Ljava/util/Map;" line="146"><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntitiesMeasurementsAndReset" desc="()Ljava/util/Map;" line="175"><counter type="INSTRUCTION" missed="24" covered="80"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="7" covered="24"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerJmx" desc="()V" line="218"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="228"><counter type="INSTRUCTION" missed="10" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementsAsString" desc="()Ljava/lang/String;" line="247"><counter type="INSTRUCTION" missed="6" covered="58"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurements" desc="()Ljavax/management/openmbean/CompositeDataSupport;" line="269"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="360"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="237" covered="356"/><counter type="BRANCH" missed="17" covered="21"/><counter type="LINE" missed="50" covered="93"/><counter type="COMPLEXITY" missed="17" covered="14"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/DirectRecorderSource$CreateDirectRecorder" sourcefilename="DirectRecorderSource.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILorg/spf4j/perf/MeasurementStore;Lorg/spf4j/tsdb2/avro/MeasurementType;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementRecorder;" line="107"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorderSource$2" sourcefilename="ScalableMeasurementRecorderSource.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/impl/ScalableMeasurementRecorderSource;Z)V" line="119"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorderSource$1" sourcefilename="ScalableMeasurementRecorderSource.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/impl/ScalableMeasurementRecorderSource;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/util/Map;" line="100"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorder" sourcefilename="ScalableMeasurementRecorder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/MeasurementAccumulator;ILorg/spf4j/perf/MeasurementStore;Z)V" line="79"><counter type="INSTRUCTION" missed="23" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeOnShutdown" desc="()Ljava/lang/Runnable;" line="112"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="record" desc="(J)V" line="125"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[J" line="130"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementsAsString" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lorg/spf4j/perf/MeasurementAccumulator;)Lorg/spf4j/perf/MeasurementAccumulator;" line="168"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createClone" desc="()Lorg/spf4j/perf/MeasurementAccumulator;" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerJmx" desc="()V" line="178"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="187"><counter type="INSTRUCTION" missed="10" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLike" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementAccumulator;" line="212"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInfo" desc="()Lorg/spf4j/perf/MeasurementsInfo;" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()Lorg/spf4j/perf/MeasurementAccumulator;" line="222"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThenReset" desc="()[J" line="227"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="93" covered="250"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="21" covered="65"/><counter type="COMPLEXITY" missed="15" covered="14"/><counter type="METHOD" missed="7" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/DirectRecorderSource" sourcefilename="DirectRecorderSource.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILorg/spf4j/perf/MeasurementStore;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILorg/spf4j/perf/MeasurementStore;Lorg/spf4j/tsdb2/avro/MeasurementType;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecorder" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementRecorder;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="33"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorder$Persister" sourcefilename="ScalableMeasurementRecorder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/impl/ScalableMeasurementRecorder;Lorg/spf4j/perf/MeasurementStore;JLorg/spf4j/perf/MeasurementAccumulator;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="266"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="persist" desc="(Z)V" line="270"><counter type="INSTRUCTION" missed="24" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="48"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorderSource$Persister" sourcefilename="ScalableMeasurementRecorderSource.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/impl/ScalableMeasurementRecorderSource;Lorg/spf4j/perf/MeasurementStore;ILorg/spf4j/perf/MeasurementAccumulator;)V" line="315"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="328"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="persist" desc="(Z)V" line="332"><counter type="INSTRUCTION" missed="24" covered="73"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="96"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorder$2" sourcefilename="ScalableMeasurementRecorder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/impl/ScalableMeasurementRecorder;Z)V" line="112"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ScalableMeasurementRecorder$1" sourcefilename="ScalableMeasurementRecorder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/impl/ScalableMeasurementRecorder;Lorg/spf4j/perf/MeasurementAccumulator;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lorg/spf4j/perf/MeasurementAccumulator;" line="89"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/Quanta" sourcefilename="Quanta.java"><method name="&lt;init&gt;" desc="(JJ)V" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntervalEnd" desc="()J" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntervalStart" desc="()J" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosestToZero" desc="()J" line="82"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lorg/spf4j/perf/impl/Quanta;)I" line="105"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="122"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="129"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="212" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/NopMeasurementRecorderSource" sourcefilename="NopMeasurementRecorderSource.java"><method name="getRecorder" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementRecorder;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="NopMeasurementRecorderSource.java"><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ScalableMeasurementRecorderSource.java"><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="1" cb="1"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="13" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="1" cb="1"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="1" cb="1"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="1" cb="1"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="1" cb="1"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="2" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="9" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="1" cb="1"/><line nr="230" mi="0" ci="3" mb="1" cb="1"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="6" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="11" mb="0" cb="2"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="1" cb="1"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="11" ci="0" mb="2" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="2" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="9" ci="0" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="13" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="1" cb="1"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="13" mb="0" cb="2"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="6" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="2"/><line nr="342" mi="0" ci="7" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="1" cb="1"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="2" cb="0"/><line nr="352" mi="9" ci="0" mb="0" cb="0"/><line nr="353" mi="13" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="42" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="272" covered="480"/><counter type="BRANCH" missed="21" covered="27"/><counter type="LINE" missed="55" covered="123"/><counter type="COMPLEXITY" missed="22" covered="21"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="DirectRecorderSource.java"><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="15" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="18" mb="0" cb="0"/><line nr="114" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="72"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ScalableMeasurementRecorder.java"><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="1" cb="1"/><line nr="81" mi="12" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="16" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="1" cb="1"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="13" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="1" cb="1"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="9" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="1" cb="1"/><line nr="189" mi="0" ci="3" mb="1" cb="1"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="17" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="1" cb="1"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="2"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="1" cb="1"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="2"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="1" cb="1"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="2"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="277" mi="2" ci="1" mb="2" cb="0"/><line nr="278" mi="9" ci="0" mb="0" cb="0"/><line nr="279" mi="13" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="329"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="25" covered="87"/><counter type="COMPLEXITY" missed="19" covered="20"/><counter type="METHOD" missed="9" covered="14"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="MeasurementsInfoImpl.java"><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="1" cb="1"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="7" ci="5" mb="3" cb="1"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="7" mb="3" cb="1"/><line nr="119" mi="0" ci="2" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="18" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="141"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NopMeasurementStore.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NopMeasurementRecorder.java"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Quanta.java"><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="12" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="2" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="11" ci="0" mb="2" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="13" ci="0" mb="0" cb="0"/><line nr="124" mi="13" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="2" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="212" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RecorderFactory.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="2" cb="2"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="1" cb="3"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="13" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="1" cb="1"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="17" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="17" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="13" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="13" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="13" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="17" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="17" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="13" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="13" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="13" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="14" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="14" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="9" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="10" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="9" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="10" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="323" mi="13" ci="0" mb="0" cb="0"/><line nr="325" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="13" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="271" covered="180"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="51" covered="38"/><counter type="COMPLEXITY" missed="18" covered="10"/><counter type="METHOD" missed="14" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="939" covered="1208"/><counter type="BRANCH" missed="73" covered="61"/><counter type="LINE" missed="195" covered="299"/><counter type="COMPLEXITY" missed="100" covered="73"/><counter type="METHOD" missed="49" covered="57"/><counter type="CLASS" missed="5" covered="11"/></package><package name="org/spf4j/io/tcp/proxy"><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$RoomToReadHook" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/BlockingQueue;Lorg/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$ReadInterest;Ljava/nio/channels/Selector;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="210"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyClientHandler" sourcefilename="ProxyClientHandler.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/net/HostAndPort;Lorg/spf4j/io/tcp/proxy/SnifferFactory;Lorg/spf4j/io/tcp/proxy/SnifferFactory;II)V" line="79"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/nio/channels/Selector;Ljava/nio/channels/SocketChannel;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/BlockingQueue;Lorg/spf4j/ds/UpdateablePriorityQueue;)V" line="91"><counter type="INSTRUCTION" missed="20" covered="90"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="112"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/Sniffer" sourcefilename="Sniffer.java"><method name="received" desc="(Ljava/io/IOException;)Ljava/io/IOException;" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$ReadInterest" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Ljava/nio/channels/SelectionKey;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="155"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/TransferBuffer$Operation" sourcefilename="TransferBuffer.java"><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$WriteInterest" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Ljava/nio/channels/SelectionKey;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="169"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$DataAvailableToWriteHook" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/BlockingQueue;Lorg/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$WriteInterest;Ljava/nio/channels/Selector;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="189"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$ReadFromChannel" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/tcp/proxy/TransferBuffer;Ljava/nio/channels/SocketChannel;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="228"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/tcp/proxy/TransferBuffer;Lorg/spf4j/io/tcp/proxy/TransferBuffer;Lorg/spf4j/io/tcp/proxy/SnifferFactory;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/Selector;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/BlockingQueue;Lorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialInterestRegistration" desc="()Ljava/nio/channels/SelectionKey;" line="101"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canRunAsync" desc="()Z" line="112"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAsync" desc="(Ljava/nio/channels/SelectionKey;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/nio/channels/SelectionKey;)V" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="253"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="168"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="37"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/TransferBuffer" sourcefilename="TransferBuffer.java"><method name="&lt;init&gt;" desc="(I)V" line="70"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/channels/SocketChannel;)I" line="81"><counter type="INSTRUCTION" missed="51" covered="58"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="17" covered="17"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/nio/channels/SocketChannel;)I" line="132"><counter type="INSTRUCTION" missed="47" covered="53"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="16" covered="19"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transfer" desc="(Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I" line="183"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIsDataInBufferHook" desc="(Ljava/lang/Runnable;)V" line="201"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsRoomInBufferHook" desc="(Ljava/lang/Runnable;)V" line="205"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIncomingSniffer" desc="(Lorg/spf4j/io/tcp/proxy/Sniffer;)V" line="209"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="164" covered="152"/><counter type="BRANCH" missed="28" covered="20"/><counter type="LINE" missed="45" covered="52"/><counter type="COMPLEXITY" missed="20" covered="13"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyBufferTransferHandler$WriteToChannel" sourcefilename="ProxyBufferTransferHandler.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/tcp/proxy/TransferBuffer;Ljava/nio/channels/SocketChannel;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="246"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/proxy/ProxyClientHandler$CloseChannelsOnTimeout" sourcefilename="ProxyClientHandler.java"><method name="&lt;init&gt;" desc="(Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="132"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TransferBuffer.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="4"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="2" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="3" ci="4" mb="3" cb="1"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="1" cb="1"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="2" cb="2"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="3" ci="2" mb="3" cb="1"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="12" ci="0" mb="6" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="2" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="2" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="164" covered="176"/><counter type="BRANCH" missed="28" covered="20"/><counter type="LINE" missed="45" covered="54"/><counter type="COMPLEXITY" missed="20" covered="14"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ProxyClientHandler.java"><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="134"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="33"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ProxyBufferTransferHandler.java"><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="1" cb="3"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="1" cb="1"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="1" cb="1"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="294"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="77"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="Sniffer.java"><line nr="61" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="254" covered="604"/><counter type="BRANCH" missed="33" covered="33"/><counter type="LINE" missed="54" covered="164"/><counter type="COMPLEXITY" missed="28" covered="41"/><counter type="METHOD" missed="6" covered="30"/><counter type="CLASS" missed="1" covered="11"/></package><package name="org/spf4j/tsdb2"><class name="org/spf4j/tsdb2/TSDBQuery" sourcefilename="TSDBQuery.java"><method name="getMeasurementType" desc="(Lorg/apache/avro/Schema;)Lorg/spf4j/tsdb2/avro/MeasurementType;" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllTables" desc="(Ljava/io/File;)Lcom/google/common/collect/ListMultimap;" line="100"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTables" desc="(Ljava/io/File;Ljava/util/Set;)Lcom/google/common/collect/ListMultimap;" line="116"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllTablesWithDataRanges" desc="(Ljava/io/File;)Lcom/google/common/collect/ListMultimap;" line="173"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableDef" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;" line="207"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSeries" desc="(Ljava/io/File;[JJJ)Lorg/spf4j/tsdb2/TimeSeries;" line="224"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSeries" desc="(Ljava/io/File;[JJJLjava/util/function/BiConsumer;)V" line="236"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSeriesData" desc="(Ljava/io/File;Ljava/lang/String;JJ)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="272"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSeriesData" desc="(Ljava/io/File;JJLjava/util/Collection;Lorg/apache/avro/Schema;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="285"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSeriesData" desc="(Ljava/io/File;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="303"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRecord" desc="(Lorg/apache/avro/Schema;)Lcom/google/common/base/Function;" line="314"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIds" desc="(Ljava/util/Collection;)[J" line="403"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvTable" desc="(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)V" line="413"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeAsCsv" desc="(Ljava/lang/Appendable;Ljava/io/File;Ljava/lang/String;)V" line="422"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeCsvTables" desc="(Ljava/io/File;Ljava/util/Set;Ljava/io/File;)V" line="445"><counter type="INSTRUCTION" missed="145" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnDefIfExists" desc="(Lorg/spf4j/tsdb2/avro/TableDef;Ljava/lang/String;)Lorg/spf4j/tsdb2/avro/ColumnDef;" line="482"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnDef" desc="(Lorg/spf4j/tsdb2/avro/TableDef;Ljava/lang/String;)Lorg/spf4j/tsdb2/avro/ColumnDef;" line="492"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnIndex" desc="(Lorg/spf4j/tsdb2/avro/TableDef;Ljava/lang/String;)I" line="501"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnNames" desc="(Lorg/spf4j/tsdb2/avro/TableDef;)[Ljava/lang/String;" line="512"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnUnitsOfMeasurement" desc="(Lorg/spf4j/tsdb2/avro/TableDef;)[Ljava/lang/String;" line="522"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toRecord$2" desc="(Lorg/apache/avro/Schema;Lorg/spf4j/tsdb2/avro/Observation;)Lorg/spf4j/perf/TimeSeriesRecord;" line="315"><counter type="INSTRUCTION" missed="25" covered="51"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTimeSeriesData$1" desc="(JJLjava/util/Collection;Lorg/spf4j/tsdb2/avro/Observation;)Z" line="290"><counter type="INSTRUCTION" missed="1" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTimeSeries$0" desc="(Lgnu/trove/list/TLongList;Ljava/util/List;Ljava/lang/Long;[J)V" line="227"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="608" covered="340"/><counter type="BRANCH" missed="62" covered="29"/><counter type="LINE" missed="131" covered="69"/><counter type="COMPLEXITY" missed="48" covered="21"/><counter type="METHOD" missed="12" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBQuery$DataScan" sourcefilename="TSDBQuery.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/tsdb2/TSDBReader;)V" line="340"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="346"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBQuery$DataScan$1" sourcefilename="TSDBQuery.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/tsdb2/TSDBQuery$DataScan;)V" line="346"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBlock" desc="()V" line="358"><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="375"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lorg/spf4j/tsdb2/avro/Observation;" line="388"><counter type="INSTRUCTION" missed="7" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="77"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBReader$1" sourcefilename="TSDBReader.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/tsdb2/TSDBReader;Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;)V" line="213"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Void;" line="217"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBQuery$TableDefEx" sourcefilename="TSDBQuery.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/tsdb2/avro/TableDef;JJ)V" line="138"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableDef" desc="()Lorg/spf4j/tsdb2/avro/TableDef;" line="145"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartTime" desc="()J" line="149"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEndTime" desc="()J" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStartTime" desc="(J)V" line="157"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEndTime" desc="(J)V" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/tsdb2/TimeSeries" sourcefilename="TimeSeries.java"><method name="&lt;init&gt;" desc="([J[[J)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeStamps" desc="()[J" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()[[J" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBWriter" sourcefilename="TSDBWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;ILjava/lang/String;Z)V" line="84"><counter type="INSTRUCTION" missed="58" covered="127"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateType" desc="(Ljava/io/InputStream;)V" line="140"><counter type="INSTRUCTION" missed="13" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTableDef" desc="(Lorg/spf4j/tsdb2/avro/TableDef;)J" line="148"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeDataRow" desc="(JJ[J)V" line="159"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="170"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="()Ljava/io/File;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(J[BI)V" line="180"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOutputStream" desc="(JLjava/io/OutputStream;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="202"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateEOFPtrPointer" desc="()V" line="216"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeader" desc="()Lorg/spf4j/tsdb2/avro/Header;" line="223"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="228"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="77" covered="349"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="13" covered="81"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBReader$EventSensitivity" sourcefilename="TSDBReader.java"><method name="&lt;clinit&gt;" desc="()V" line="223"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TableDefs" sourcefilename="TableDefs.java"><method name="from" desc="(Lorg/spf4j/perf/MeasurementsInfo;IJ)Lorg/spf4j/tsdb2/avro/TableDef;" line="65"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSchema" desc="(Lorg/spf4j/tsdb2/avro/TableDef;)Lorg/apache/avro/Schema;" line="80"><counter type="INSTRUCTION" missed="40" covered="107"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="6" covered="22"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRecord" desc="(Lorg/apache/avro/Schema;JLorg/spf4j/tsdb2/avro/DataRow;)Lorg/spf4j/perf/TimeSeriesRecord;" line="119"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRecord" desc="(Lorg/apache/avro/Schema;Lorg/spf4j/tsdb2/avro/Observation;)Lorg/spf4j/perf/TimeSeriesRecord;" line="142"><counter type="INSTRUCTION" missed="23" covered="52"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementType" desc="(Lorg/spf4j/tsdb2/avro/TableDef;)Lorg/spf4j/tsdb2/avro/MeasurementType;" line="164"><counter type="INSTRUCTION" missed="12" covered="41"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="155" covered="260"/><counter type="BRANCH" missed="15" covered="18"/><counter type="LINE" missed="27" covered="57"/><counter type="COMPLEXITY" missed="13" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/tsdb2/TSDBReader" sourcefilename="TSDBReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;IJ)V" line="100"><counter type="INSTRUCTION" missed="3" covered="67"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetStream" desc="(J)V" line="120"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reReadSize" desc="()Z" line="133"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()Lorg/spf4j/base/Either;" line="149"><counter type="INSTRUCTION" missed="38" covered="39"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="177"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()J" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeader" desc="()Lorg/spf4j/tsdb2/avro/Header;" line="189"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopWatching" desc="()V" line="193"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bgWatch" desc="(Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;)Ljava/util/concurrent/Future;" line="199"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bgWatch" desc="(Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;" line="205"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bgWatch" desc="(Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;J)Ljava/util/concurrent/Future;" line="213"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="watch" desc="(Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;)V" line="229"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="watch" desc="(Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;JLjava/util/concurrent/TimeUnit;)V" line="235"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="watch" desc="(Lorg/spf4j/base/Handler;Lorg/spf4j/tsdb2/TSDBReader$EventSensitivity;J)V" line="244"><counter type="INSTRUCTION" missed="38" covered="103"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="11" covered="24"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAll" desc="(Lorg/spf4j/base/Handler;J)V" line="305"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAll" desc="(Ljava/util/function/Consumer;)V" line="313"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="320"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="347"/><counter type="BRANCH" missed="15" covered="27"/><counter type="LINE" missed="26" covered="81"/><counter type="COMPLEXITY" missed="19" covered="22"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TableDefs.java"><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="2" cb="1"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="13" ci="0" mb="2" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="3" cb="0"/><line nr="128" mi="10" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="12" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="13" mb="0" cb="2"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="2" cb="1"/><line nr="150" mi="10" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="12" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="11" mb="0" cb="2"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="4" ci="4" mb="3" cb="1"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="1" cb="1"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="1" cb="1"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="1" cb="1"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="155" covered="260"/><counter type="BRANCH" missed="15" covered="18"/><counter type="LINE" missed="27" covered="57"/><counter type="COMPLEXITY" missed="13" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TSDBReader.java"><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="1" cb="1"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="14" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="17" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="1" cb="1"/><line nr="167" mi="16" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="10" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="21" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="16" mb="0" cb="0"/><line nr="224" mi="0" ci="18" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="1" cb="1"/><line nr="246" mi="13" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="3" cb="1"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="12" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="20" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="1" cb="1"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="2"/><line nr="277" mi="0" ci="3" mb="0" cb="2"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="1" cb="1"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="2" cb="2"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="1" cb="1"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="2"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="2"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="5" ci="0" mb="2" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="402"/><counter type="BRANCH" missed="15" covered="27"/><counter type="LINE" missed="26" covered="85"/><counter type="COMPLEXITY" missed="19" covered="25"/><counter type="METHOD" missed="6" covered="16"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="TimeSeries.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="17" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TSDBQuery.java"><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="22" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="8" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="2" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="11" ci="0" mb="2" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="12" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="2" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="2" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="2"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="1" cb="1"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="12" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="11" mb="0" cb="2"/><line nr="243" mi="0" ci="16" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="1" cb="1"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="8" mb="2" cb="2"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="1" cb="1"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="11" mb="2" cb="2"/><line nr="292" mi="1" ci="6" mb="1" cb="1"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="6" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="10" mb="0" cb="2"/><line nr="320" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="2" cb="1"/><line nr="323" mi="12" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="8" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="12" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="10" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="7" mb="0" cb="2"/><line nr="359" mi="0" ci="3" mb="0" cb="2"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="2"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="1" cb="1"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="1" cb="1"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="14" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="10" mb="0" cb="2"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="7" ci="0" mb="0" cb="0"/><line nr="414" mi="8" ci="0" mb="0" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="7" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="0" cb="0"/><line nr="426" mi="14" ci="0" mb="2" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="8" ci="0" mb="2" cb="0"/><line nr="434" mi="8" ci="0" mb="0" cb="0"/><line nr="435" mi="18" ci="0" mb="2" cb="0"/><line nr="436" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="2" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="7" ci="0" mb="0" cb="0"/><line nr="450" mi="8" ci="0" mb="0" cb="0"/><line nr="451" mi="6" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="11" ci="0" mb="2" cb="0"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="459" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="12" ci="0" mb="2" cb="0"/><line nr="463" mi="9" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="8" ci="0" mb="2" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="8" ci="0" mb="0" cb="0"/><line nr="470" mi="18" ci="0" mb="2" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="3" ci="0" mb="0" cb="0"/><line nr="476" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="11" ci="0" mb="2" cb="0"/><line nr="483" mi="5" ci="0" mb="2" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="1" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="11" ci="0" mb="2" cb="0"/><line nr="493" mi="5" ci="0" mb="2" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="16" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="11" ci="0" mb="2" cb="0"/><line nr="503" mi="5" ci="0" mb="2" cb="0"/><line nr="504" mi="2" ci="0" mb="0" cb="0"/><line nr="506" mi="1" ci="0" mb="0" cb="0"/><line nr="507" mi="1" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="0" mb="0" cb="0"/><line nr="515" mi="10" ci="0" mb="2" cb="0"/><line nr="516" mi="6" ci="0" mb="0" cb="0"/><line nr="517" mi="1" ci="0" mb="0" cb="0"/><line nr="518" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="525" mi="10" ci="0" mb="2" cb="0"/><line nr="526" mi="6" ci="0" mb="0" cb="0"/><line nr="527" mi="1" ci="0" mb="0" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="672" covered="428"/><counter type="BRANCH" missed="64" covered="39"/><counter type="LINE" missed="148" covered="93"/><counter type="COMPLEXITY" missed="57" covered="31"/><counter type="METHOD" missed="19" covered="17"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="TSDBWriter.java"><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="1" cb="1"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="12" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="1" cb="1"/><line nr="143" mi="13" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="11" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="2"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="2"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="349"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="13" covered="81"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1085" covered="1451"/><counter type="BRANCH" missed="100" covered="96"/><counter type="LINE" missed="221" covered="321"/><counter type="COMPLEXITY" missed="97" covered="85"/><counter type="METHOD" missed="30" covered="51"/><counter type="CLASS" missed="1" covered="9"/></package><package name="org/spf4j/perf/io"><class name="org/spf4j/perf/io/MeasuredInputStream" sourcefilename="MeasuredInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;Lorg/spf4j/perf/MeasurementRecorderSource;)V" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="58"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="65"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="102"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/io/MeasuredOutputStream" sourcefilename="MeasuredOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Ljava/lang/String;Lorg/spf4j/perf/MeasurementRecorderSource;)V" line="52"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="60"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="66"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="72"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/io/OpenFilesSampler" sourcefilename="OpenFilesSampler.java"><method name="start" desc="(J)V" line="86"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(JZ)V" line="94"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWarnLsofDetail" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWarnLsofTime" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(JJJZ)V" line="118"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="()V" line="130"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStarted" desc="()Z" line="139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLsof" desc="()Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxNrOpenFiles" desc="()J" line="150"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrOpenFiles" desc="()J" line="155"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWarnThreshold" desc="()J" line="160"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorThreshold" desc="()J" line="168"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/io/OpenFilesSampler$1" sourcefilename="OpenFilesSampler.java"><method name="&lt;init&gt;" desc="(Z)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/io/OpenFilesSampler$AccumulatorRunnable" sourcefilename="OpenFilesSampler.java"><method name="&lt;init&gt;" desc="(JZJI)V" line="183"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="194"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorThreshold" desc="()J" line="220"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShutdownOnError" desc="()Z" line="224"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWarnThreshold" desc="()J" line="228"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MeasuredOutputStream.java"><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OpenFilesSampler.java"><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="9" ci="0" mb="0" cb="0"/><line nr="121" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="2" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="2" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="2" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="12" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="2" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="2" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="2" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="254" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="68" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="MeasuredInputStream.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="444" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="112" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="38" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="org/spf4j/jmx/mappers"><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$ListMXBeanType" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/ParameterizedType;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="368"><counter type="INSTRUCTION" missed="46" covered="67"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="397"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="402"><counter type="INSTRUCTION" missed="36" covered="37"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="427"><counter type="INSTRUCTION" missed="32" covered="55"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="361"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="119" covered="165"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="20" covered="35"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$EnumMXBeanType" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="189"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="194"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="202"><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="21"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/MapEntryOpenTypeMapping" sourcefilename="MapEntryOpenTypeMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/ParameterizedType;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="105" covered="50"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="11" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="19" covered="39"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeFromMapEntry" desc="(Ljava/lang/reflect/ParameterizedType;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)Ljavax/management/openmbean/CompositeType;" line="120"><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappedType" desc="()Ljava/lang/Class;" line="147"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="171" covered="195"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="21" covered="33"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/MXBeanMappings" sourcefilename="MXBeanMappings.java"><method name="convert" desc="(Lcom/sun/jmx/mbeanserver/MXBeanMapping;)Lorg/spf4j/jmx/JMXBeanMapping;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Lorg/spf4j/jmx/JMXBeanMapping;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;" line="78"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeOpenClass" desc="(Ljava/lang/reflect/Type;Ljavax/management/openmbean/OpenType;)Ljava/lang/Class;" line="92"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="14"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$GenericArrayMXBeanType" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/GenericArrayType;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="317"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="349"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$ArrayMXBeanType" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="228"><counter type="INSTRUCTION" missed="28" covered="74"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="257"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="269"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="291"><counter type="INSTRUCTION" missed="49" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="91" covered="129"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="18" covered="29"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/SpecificRecordOpenTypeMapping" sourcefilename="SpecificRecordOpenTypeMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="52" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="9" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapToken" desc="(Lcom/google/common/reflect/TypeToken;Lcom/google/common/reflect/TypeToken;)Lcom/google/common/reflect/TypeToken;" line="110"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listToken" desc="(Lcom/google/common/reflect/TypeToken;)Lcom/google/common/reflect/TypeToken;" line="116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGenericType" desc="(Lorg/apache/avro/Schema;)Ljava/lang/reflect/Type;" line="123"><counter type="INSTRUCTION" missed="52" covered="21"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromSpecificRecord" desc="(Lorg/apache/avro/specific/SpecificRecordBase;)Ljavax/management/openmbean/CompositeData;" line="157"><counter type="INSTRUCTION" missed="12" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeFromSpecificRecord" desc="(Ljava/lang/Class;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)Ljavax/management/openmbean/CompositeType;" line="184"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeFromSpecificRecord" desc="(Lorg/apache/avro/generic/GenericRecord;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)Ljavax/management/openmbean/CompositeType;" line="193"><counter type="INSTRUCTION" missed="6" covered="62"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappedType" desc="()Ljava/lang/Class;" line="215"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="220"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="159" covered="238"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="29" covered="58"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$MapMXBeanType" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/Type;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="473"><counter type="INSTRUCTION" missed="44" covered="115"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="4" covered="25"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="519"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="524"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="545"><counter type="INSTRUCTION" missed="19" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="464"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="68" covered="233"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="9" covered="49"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/management/openmbean/OpenType;Ljava/lang/Class;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultHandler" desc="(Ljava/lang/reflect/Type;Lorg/spf4j/jmx/JMXBeanMappingSupplier;)Lorg/spf4j/jmx/JMXBeanMapping;" line="100"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappedType" desc="()Ljava/lang/Class;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="82"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/MXBeanMappings$2" sourcefilename="MXBeanMappings.java"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/Type;Ljavax/management/openmbean/OpenType;Lorg/spf4j/jmx/JMXBeanMapping;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/MXBeanMappings$1" sourcefilename="MXBeanMappings.java"><method name="&lt;init&gt;" desc="(Lcom/sun/jmx/mbeanserver/MXBeanMapping;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappedType" desc="()Ljava/lang/Class;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jOpenTypeMapper$1" sourcefilename="Spf4jOpenTypeMapper.java"><method name="&lt;init&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/util/Set;" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jOpenTypeMapper$3" sourcefilename="Spf4jOpenTypeMapper.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/jmx/mappers/Spf4jOpenTypeMapper;Ljava/lang/Class;Ljavax/management/openmbean/OpenType;)V" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jmx/mappers/Spf4jOpenTypeMapper$2" sourcefilename="Spf4jOpenTypeMapper.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/jmx/mappers/Spf4jOpenTypeMapper;Ljava/lang/Class;Ljavax/management/openmbean/OpenType;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jOpenTypeMapper" sourcefilename="Spf4jOpenTypeMapper.java"><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="183"><counter type="INSTRUCTION" missed="6" covered="107"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCache" desc="()Lorg/spf4j/reflect/CachingTypeMapSupplierWrapper;" line="222"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="227"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="165"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="154"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="146"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="139"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="132"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="125"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="123"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Class;Lorg/spf4j/base/Pair;Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="118"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="509"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="7" covered="67"/><counter type="COMPLEXITY" missed="9" covered="20"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$1" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/jmx/JMXBeanMappingSupplier;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mappingForType" desc="(Ljava/lang/reflect/Type;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;" line="105"><counter type="INSTRUCTION" missed="24" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/SpecificRecordOpenTypeMapping$3" sourcefilename="SpecificRecordOpenTypeMapping.java"><method name="&lt;init&gt;" desc="()V" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jmx/mappers/SpecificRecordOpenTypeMapping$4" sourcefilename="SpecificRecordOpenTypeMapping.java"><method name="&lt;init&gt;" desc="()V" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/SpecificRecordOpenTypeMapping$5" sourcefilename="SpecificRecordOpenTypeMapping.java"><method name="&lt;init&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/mappers/SpecificRecordOpenTypeMapping$1" sourcefilename="SpecificRecordOpenTypeMapping.java"><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jmx/mappers/SpecificRecordOpenTypeMapping$2" sourcefilename="SpecificRecordOpenTypeMapping.java"><method name="&lt;init&gt;" desc="()V" line="111"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jmx/mappers/Spf4jJMXBeanMapping$BasicMXBeanType" sourcefilename="Spf4jJMXBeanMapping.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljavax/management/openmbean/OpenType;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="167"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Spf4jOpenTypeMapper.java"><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="11" mb="0" cb="0"/><line nr="97" mi="0" ci="15" mb="0" cb="0"/><line nr="98" mi="0" ci="15" mb="0" cb="0"/><line nr="99" mi="0" ci="15" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="15" mb="0" cb="0"/><line nr="102" mi="0" ci="15" mb="0" cb="0"/><line nr="103" mi="0" ci="15" mb="0" cb="0"/><line nr="104" mi="0" ci="15" mb="0" cb="0"/><line nr="105" mi="0" ci="15" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="0"/><line nr="107" mi="0" ci="11" mb="0" cb="0"/><line nr="108" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="16" mb="0" cb="2"/><line nr="117" mi="0" ci="18" mb="0" cb="2"/><line nr="118" mi="0" ci="15" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="13" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="4"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="21" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="15" ci="6" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="2"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="1" cb="1"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="2" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="8" mb="0" cb="4"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="14" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="534"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="9" covered="70"/><counter type="COMPLEXITY" missed="12" covered="25"/><counter type="METHOD" missed="6" covered="17"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="MapEntryOpenTypeMapping.java"><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="19" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="1" cb="1"/><line nr="87" mi="20" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="14" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="19" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="17" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="12" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="1" cb="1"/><line nr="127" mi="12" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="1" cb="1"/><line nr="134" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="195"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="21" covered="33"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MXBeanMappings.java"><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="17" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="4" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="50"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Spf4jJMXBeanMapping.java"><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="14" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="1" cb="1"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="1" cb="1"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="15" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="13" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="9" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="13" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="9" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="16" mb="0" cb="2"/><line nr="277" mi="0" ci="2" mb="1" cb="1"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="1" cb="1"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="10" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="16" ci="0" mb="2" cb="0"/><line nr="300" mi="2" ci="0" mb="2" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="7" ci="0" mb="2" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="7" ci="0" mb="4" cb="0"/><line nr="331" mi="7" ci="0" mb="0" cb="0"/><line nr="333" mi="11" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="13" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="9" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="345" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="6" mb="1" cb="1"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="4" ci="6" mb="2" cb="2"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="1" cb="1"/><line nr="378" mi="14" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="14" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="13" ci="0" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="9" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="13" ci="0" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="1" cb="1"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="9" mb="0" cb="2"/><line nr="408" mi="0" ci="8" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="5" ci="0" mb="0" cb="0"/><line nr="414" mi="9" ci="0" mb="2" cb="0"/><line nr="415" mi="7" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="10" ci="0" mb="0" cb="0"/><line nr="418" mi="1" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="4" mb="1" cb="1"/><line nr="430" mi="0" ci="4" mb="0" cb="2"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="1" cb="1"/><line nr="433" mi="7" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="7" mb="0" cb="0"/><line nr="439" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="1" ci="0" mb="0" cb="0"/><line nr="441" mi="13" ci="0" mb="0" cb="0"/><line nr="442" mi="3" ci="0" mb="0" cb="0"/><line nr="443" mi="2" ci="0" mb="0" cb="0"/><line nr="444" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="0" ci="16" mb="0" cb="2"/><line nr="447" mi="0" ci="7" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="2" ci="6" mb="1" cb="1"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="2"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="7" mb="0" cb="0"/><line nr="481" mi="0" ci="8" mb="2" cb="2"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="12" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="6" mb="2" cb="2"/><line nr="488" mi="0" ci="7" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="1" cb="1"/><line nr="490" mi="14" ci="0" mb="0" cb="0"/><line nr="492" mi="0" ci="7" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="0" cb="2"/><line nr="494" mi="0" ci="14" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="499" mi="0" ci="6" mb="0" cb="0"/><line nr="500" mi="0" ci="6" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="9" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="13" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="3" ci="0" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="526" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="529" mi="0" ci="11" mb="0" cb="2"/><line nr="530" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="6" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="13" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="1" mb="0" cb="0"/><line nr="538" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="2"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="551" mi="0" ci="5" mb="0" cb="0"/><line nr="552" mi="1" ci="0" mb="0" cb="0"/><line nr="553" mi="13" ci="0" mb="0" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="555" mi="2" ci="0" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="0" ci="11" mb="0" cb="2"/><line nr="559" mi="0" ci="7" mb="0" cb="0"/><line nr="560" mi="0" ci="7" mb="0" cb="0"/><line nr="561" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="430" covered="659"/><counter type="BRANCH" missed="29" covered="41"/><counter type="LINE" missed="80" covered="145"/><counter type="COMPLEXITY" missed="29" covered="39"/><counter type="METHOD" missed="6" covered="27"/><counter type="CLASS" missed="1" covered="7"/></sourcefile><sourcefile name="SpecificRecordOpenTypeMapping.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="16" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="11" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="2" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="4" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="11" ci="0" mb="2" cb="0"/><line nr="137" mi="14" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="10" mb="0" cb="2"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="12" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="168" covered="244"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="29" covered="58"/><counter type="COMPLEXITY" missed="11" covered="16"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="3" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="872" covered="1682"/><counter type="BRANCH" missed="54" covered="78"/><counter type="LINE" missed="147" covered="313"/><counter type="COMPLEXITY" missed="64" covered="95"/><counter type="METHOD" missed="21" covered="71"/><counter type="CLASS" missed="5" covered="17"/></package><package name="org/spf4j/base/avro"><class name="org/spf4j/base/avro/AvroCloseableIterable" sourcefilename="AvroCloseableIterable.java"><method name="from" desc="(Ljava/lang/Iterable;Ljava/io/Closeable;Lorg/apache/avro/Schema;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/avro/Converters" sourcefilename="Converters.java"><method name="convert" desc="(Ljava/lang/StackTraceElement;)Lorg/spf4j/base/avro/StackTraceElement;" line="60"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="([Ljava/lang/StackTraceElement;)Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="([Ljava/lang/Throwable;Ljava/util/Set;)Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Ljava/lang/Throwable;)Lorg/spf4j/base/avro/Throwable;" line="92"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Ljava/lang/Throwable;Ljava/util/Set;)Lorg/spf4j/base/avro/Throwable;" line="97"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Ljava/lang/String;Lorg/spf4j/base/avro/Throwable;)Lorg/spf4j/base/avro/RemoteException;" line="120"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;" line="126"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/base/StackSamples;IILjava/util/function/Consumer;)I" line="138"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Lorg/spf4j/base/StackSamples;)Ljava/util/List;" line="195"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$convert$0" desc="(Ljava/util/Deque;ILorg/spf4j/base/avro/Method;Lorg/spf4j/base/StackSamples;)Z" line="150"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="244" covered="72"/><counter type="BRANCH" missed="25" covered="3"/><counter type="LINE" missed="46" covered="19"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/avro/AvroCloseableIterable$1" sourcefilename="AvroCloseableIterable.java"><method name="&lt;init&gt;" desc="(Ljava/io/Closeable;Lorg/apache/avro/Schema;Ljava/lang/Iterable;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="55"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementSchema" desc="()Lorg/apache/avro/Schema;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="21"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/avro/MediaTypes" sourcefilename="MediaTypes.java"><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/avro/Converters$TraversalNode" sourcefilename="Converters.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/base/StackSamples;I)V" line="168"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethod" desc="()Lorg/spf4j/base/avro/Method;" line="175"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNode" desc="()Lorg/spf4j/base/StackSamples;" line="179"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentId" desc="()I" line="183"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="188"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="21"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/avro/RemoteException" sourcefilename="RemoteException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/spf4j/base/avro/Throwable;)V" line="44"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemoteCause" desc="()Lorg/spf4j/base/avro/Throwable;" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillInStackTrace" desc="()Ljava/lang/Throwable;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/avro/AThrowables" sourcefilename="AThrowables.java"><method name="writeTo" desc="(Lorg/spf4j/base/avro/RemoteException;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeMessageString" desc="(Ljava/lang/Appendable;Lorg/spf4j/base/avro/RemoteException;)V" line="62"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Lorg/spf4j/base/avro/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeThrowableDetails" desc="(Lorg/spf4j/base/avro/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="84"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Ljava/util/List;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="109"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Lorg/spf4j/base/avro/StackTraceElement;Lorg/spf4j/base/avro/StackTraceElement;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="124"><counter type="INSTRUCTION" missed="255" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printEnclosedStackTrace" desc="(Lorg/spf4j/base/avro/Throwable;Ljava/lang/Appendable;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="212"><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commonFrames" desc="(Ljava/util/List;Ljava/util/List;)I" line="256"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeMessageString" desc="(Ljava/lang/Appendable;Lorg/spf4j/base/avro/Throwable;)V" line="267"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="618" covered="0"/><counter type="BRANCH" missed="80" covered="0"/><counter type="LINE" missed="143" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/avro/AvroContainer" sourcefilename="AvroContainer.java"><method name="getElementSchema" desc="()Lorg/apache/avro/Schema;" line="32"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RemoteException.java"><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="10" ci="0" mb="2" cb="0"/><line nr="47" mi="11" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="10" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MediaTypes.java"><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AvroCloseableIterable.java"><line nr="50" mi="0" ci="19" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Converters.java"><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="17" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="16" ci="0" mb="2" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="16" ci="0" mb="2" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="2" cb="0"/><line nr="98" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="12" ci="0" mb="2" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="12" ci="0" mb="2" cb="0"/><line nr="114" mi="8" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="2" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="1" cb="1"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="22" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="2" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="11" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="93"/><counter type="BRANCH" missed="25" covered="3"/><counter type="LINE" missed="47" covered="27"/><counter type="COMPLEXITY" missed="22" covered="8"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AThrowables.java"><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="4" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="10" ci="0" mb="2" cb="0"/><line nr="96" mi="16" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="2" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="2" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="2" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="7" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="4" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="2" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="4" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="4" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="4" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="2" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="2" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="9" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="9" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="2" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="2" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="2" cb="0"/><line nr="228" mi="6" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="6" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="2" cb="0"/><line nr="235" mi="11" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="11" ci="0" mb="2" cb="0"/><line nr="241" mi="16" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="2" cb="0"/><line nr="248" mi="9" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="13" ci="0" mb="6" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="2" cb="0"/><line nr="270" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="618" covered="0"/><counter type="BRANCH" missed="80" covered="0"/><counter type="LINE" missed="143" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AvroContainer.java"><line nr="32" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1066" covered="121"/><counter type="BRANCH" missed="115" covered="3"/><counter type="LINE" missed="227" covered="32"/><counter type="COMPLEXITY" missed="83" covered="12"/><counter type="METHOD" missed="25" covered="11"/><counter type="CLASS" missed="4" covered="4"/></package><package name="org/spf4j/recyclable"><class name="org/spf4j/recyclable/RecyclerFactory$1" sourcefilename="RecyclerFactory.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/spf4j/recyclable/Lease;" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/BlockingDisposable" sourcefilename="BlockingDisposable.java"><method name="dispose" desc="()V" line="45"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="(J)V" line="52"><counter type="INSTRUCTION" missed="18" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/SmartRecyclingSupplier" sourcefilename="SmartRecyclingSupplier.java"><method name="get" desc="(Lorg/spf4j/recyclable/ObjectBorower;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/spf4j/recyclable/ObjectBorower;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGet" desc="(Lorg/spf4j/recyclable/ObjectBorower;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/ObjectBorower$Action" sourcefilename="ObjectBorower.java"><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/RecyclerFactory" sourcefilename="RecyclerFactory.java"><method name="toLeaseSupplier" desc="(Lorg/spf4j/recyclable/RecyclingSupplier;)Lorg/spf4j/recyclable/LeaseSupplier;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/ObjectReturnException" sourcefilename="ObjectReturnException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/Template$1" sourcefilename="Template.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/HandlerNano;Lorg/spf4j/recyclable/RecyclingSupplier;Lorg/spf4j/base/ExecutionContext;Ljava/lang/Class;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/ObjectCreationException" sourcefilename="ObjectCreationException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/Disposable" sourcefilename="Disposable.java"><method name="close" desc="()V" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/ObjectBorrowException" sourcefilename="ObjectBorrowException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/Template" sourcefilename="Template.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier;Lorg/spf4j/failsafe/RetryPolicy;Ljava/lang/Class;)V" line="53"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doOnSupplied" desc="(Lorg/spf4j/base/HandlerNano;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doOnSupplied" desc="(Lorg/spf4j/base/HandlerNano;JLjava/util/concurrent/TimeUnit;Lorg/spf4j/recyclable/RecyclingSupplier;Lorg/spf4j/failsafe/RetryPolicy;Ljava/lang/Class;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doOnSupplied" desc="(Lorg/spf4j/base/HandlerNano;Lorg/spf4j/recyclable/RecyclingSupplier;JLjava/lang/Class;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="25" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="11" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="51"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="18" covered="13"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/SupplierException" sourcefilename="SupplierException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/RecyclingSupplier" sourcefilename="RecyclingSupplier.java"><method name="get" desc="()Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGet" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/ObjectDisposeException" sourcefilename="ObjectDisposeException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Template.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="29" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="1" cb="1"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="77"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="20" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RecyclerFactory.java"><line nr="46" mi="11" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="SupplierException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlockingDisposable.java"><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="1" cb="1"/><line nr="53" mi="18" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectDisposeException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SmartRecyclingSupplier.java"><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="16" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectCreationException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectReturnException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectBorower.java"><line nr="46" mi="0" ci="24" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RecyclingSupplier.java"><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="16" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectBorrowException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Disposable.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="224" covered="177"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="72" covered="31"/><counter type="COMPLEXITY" missed="32" covered="14"/><counter type="METHOD" missed="29" covered="13"/><counter type="CLASS" missed="8" covered="6"/></package><package name="org/spf4j/base"><class name="org/spf4j/base/Json$2" sourcefilename="Json.java"><method name="&lt;init&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serialize" desc="(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Json$1" sourcefilename="Json.java"><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lorg/spf4j/base/JsonWriteable;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="80"><counter type="INSTRUCTION" missed="13" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$RetryDecision" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/Callables$RetryDecision$Type;JLjava/lang/Exception;Ljava/util/concurrent/Callable;)V" line="441"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abort" desc="(Ljava/lang/Exception;)Lorg/spf4j/base/Callables$RetryDecision;" line="449"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retry" desc="(JLjava/util/concurrent/Callable;)Lorg/spf4j/base/Callables$RetryDecision;" line="453"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abort" desc="()Lorg/spf4j/base/Callables$RetryDecision;" line="457"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecisionType" desc="()Lorg/spf4j/base/Callables$RetryDecision$Type;" line="461"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelayMillis" desc="()J" line="465"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getException" desc="()Ljava/lang/Exception;" line="469"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewCallable" desc="()Ljava/util/concurrent/Callable;" line="474"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="426"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Wrapper" sourcefilename="Wrapper.java"><method name="getTopWrapped" desc="()Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/MutableHolder" sourcefilename="MutableHolder.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Object;)Lorg/spf4j/base/MutableHolder;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Comparable;)Lorg/spf4j/base/MutableHolder$ComparableHolder;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="88"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Runtime$ShutdownRunnable" sourcefilename="Runtime.java"><method name="&lt;init&gt;" desc="(ZZ)V" line="716"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="722"><counter type="INSTRUCTION" missed="102" covered="178"/><counter type="BRANCH" missed="23" covered="19"/><counter type="LINE" missed="32" covered="39"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="185"/><counter type="BRANCH" missed="23" covered="19"/><counter type="LINE" missed="32" covered="42"/><counter type="COMPLEXITY" missed="13" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/TimeSource$SystemTimeProvider" sourcefilename="TimeSource.java"><method name="getAsLong" desc="()J" line="101"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ReferenceType" sourcefilename="ReferenceType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/function/Function;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/Object;)Ljava/lang/ref/Reference;" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Object;)Ljava/lang/ref/Reference;" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Object;)Ljava/lang/ref/Reference;" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="45"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Iterables" sourcefilename="Iterables.java"><method name="forAll" desc="(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Ljava/lang/RuntimeException;" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forAll2" desc="(Ljava/lang/Iterable;Ljava/util/function/Consumer;)V" line="72"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CheckedRunnable" sourcefilename="CheckedRunnable.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Z)V" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExecutionContext" sourcefilename="ExecutionContext.java"><method name="getRoot" desc="()Lorg/spf4j/base/ExecutionContext;" line="127"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootParent" desc="()Lorg/spf4j/base/ExecutionContext;" line="140"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNotClosedParent" desc="()Lorg/spf4j/base/ExecutionContext;" line="153"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextMinLogLevel" desc="()Lorg/spf4j/log/Level;" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBackendMinLogLevel" desc="()Lorg/spf4j/log/Level;" line="205"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBackendMinLogLevel" desc="(Lorg/spf4j/log/Level;)Lorg/spf4j/log/Level;" line="214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeToDeadline" desc="(Ljava/util/concurrent/TimeUnit;)J" line="228"><counter type="INSTRUCTION" missed="17" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUncheckedTimeToDeadline" desc="(Ljava/util/concurrent/TimeUnit;)J" line="237"><counter type="INSTRUCTION" missed="17" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeRelativeToDeadline" desc="(Ljava/util/concurrent/TimeUnit;)J" line="246"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMillisToDeadline" desc="()J" line="251"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSecondsToDeadline" desc="()I" line="256"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)V" line="317"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)V" line="322"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulateComponent" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)V" line="327"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putToRootParent" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)Ljava/lang/Object;" line="340"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addToRootParent" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)Ljava/util/List;" line="359"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startChild" desc="(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="371"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startChild" desc="(Ljava/lang/String;)Lorg/spf4j/base/ExecutionContext;" line="375"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detachedChild" desc="(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="380"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detachedChild" desc="(Ljava/lang/String;)Lorg/spf4j/base/ExecutionContext;" line="384"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDebugDetail" desc="(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/spf4j/base/avro/DebugDetail;" line="406"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDebugDetail" desc="(Ljava/lang/String;Ljava/lang/Throwable;Z)Lorg/spf4j/base/avro/DebugDetail;" line="411"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getDebugDetail$3" desc="(Ljava/util/List;Lorg/spf4j/log/Slf4jLogRecord;)V" line="415"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addToRootParent$2" desc="(Ljava/lang/Object;Lorg/spf4j/base/ExecutionContext$Tag;Ljava/util/List;)Ljava/util/List;" line="361"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accumulateComponent$1" desc="(Ljava/lang/Object;Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)Ljava/lang/Object;" line="327"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accumulate$0" desc="(Ljava/lang/Object;Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)Ljava/lang/Object;" line="322"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="227" covered="90"/><counter type="BRANCH" missed="21" covered="7"/><counter type="LINE" missed="47" covered="23"/><counter type="COMPLEXITY" missed="28" covered="12"/><counter type="METHOD" missed="15" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Reflections$3" sourcefilename="Reflections.java"><method name="&lt;init&gt;" desc="()V" line="532"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Lorg/spf4j/base/Reflections$MethodDesc;)Ljava/lang/invoke/MethodHandle;" line="535"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Reflections$2" sourcefilename="Reflections.java"><method name="&lt;init&gt;" desc="()V" line="505"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Lorg/spf4j/base/Reflections$MethodDesc;)Ljava/util/Optional;" line="508"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Reflections$1" sourcefilename="Reflections.java"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/Method;)V" line="271"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()Ljava/lang/Void;" line="274"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CallablesNano$NanoTimeoutCallable" sourcefilename="CallablesNano.java"><method name="&lt;init&gt;" desc="(J)V" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CharSequenceTranslator" sourcefilename="CharSequenceTranslator.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="82"><counter type="INSTRUCTION" missed="13" covered="50"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hex" desc="(I)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="70"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/MutableInteger" sourcefilename="MutableInteger.java"><method name="&lt;init&gt;" desc="(I)V" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()I" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(I)V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="61"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/TLScratch" sourcefilename="TLScratch.java"><method name="getBytesTmp" desc="(I)[B" line="60"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCharsTmp" desc="(I)[C" line="86"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="97"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/SerializablePair$PairProxy" sourcefilename="SerializablePair.java"><method name="readResolve" desc="()Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ParameterizedException" sourcefilename="ParameterizedException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/io/Serializable;)V" line="48"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArgs" desc="()[Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessageFormat" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$TimeoutRetryPredicate" sourcefilename="Callables.java"><method name="&lt;clinit&gt;" desc="()V" line="523"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ContextValue" sourcefilename="ContextValue.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/ExecutionContext;Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/spf4j/base/ExecutionContext;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$DefaultAdvancedRetryPredicateImpl" sourcefilename="Callables.java"><method name="apply" desc="(Ljava/lang/Exception;)Lorg/spf4j/base/Callables$AdvancedAction;" line="780"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/RemoteException" sourcefilename="RemoteException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/Serializable;)V" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/Serializable;Ljava/lang/Throwable;)V" line="58"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOrigin" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemoteDetail" desc="()Ljava/io/Serializable;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemoteClass" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Json" sourcefilename="Json.java"><method name="loadServices" desc="(Lcom/fasterxml/jackson/databind/module/SimpleModule;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jsonWritableSerializer" desc="()Lcom/fasterxml/jackson/databind/JsonSerializer;" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStringJsonWritableSerializer" desc="()Lcom/fasterxml/jackson/databind/JsonSerializer;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="62"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables" sourcefilename="Callables.java"><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;IILjava/lang/Class;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;II)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;IILorg/spf4j/base/Callables$AdvancedRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;IILorg/spf4j/base/Callables$AdvancedRetryPredicate;)Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;IILorg/spf4j/base/Callables$TimeoutRetryPredicate;Lorg/spf4j/base/Callables$AdvancedRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="183"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootClass" desc="(Ljava/lang/Exception;)Ljava/lang/Class;" line="238"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;Lorg/spf4j/base/Callables$TimeoutRetryPredicate;Lorg/spf4j/base/Callables$TimeoutRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="348"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$TimeoutCallable;Lorg/spf4j/base/Callables$TimeoutRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="511"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/Callables$CheckedCallable;Lorg/spf4j/base/Callables$RetryPredicate;Lorg/spf4j/base/Callables$RetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="621"><counter type="INSTRUCTION" missed="36" covered="114"/><counter type="BRANCH" missed="9" covered="23"/><counter type="LINE" missed="9" covered="43"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="synchronize" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" line="691"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withName" desc="(Ljava/util/concurrent/Callable;Ljava/lang/String;)Ljava/util/concurrent/Callable;" line="704"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overflowSafeAdd" desc="(JJ)J" line="727"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="memorized" desc="(Ljava/util/concurrent/Callable;)Lorg/spf4j/base/MemorizedCallable;" line="742"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constant" desc="(Ljava/lang/Object;)Ljava/util/concurrent/Callable;" line="746"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;" line="750"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$1" desc="(Ljava/lang/Runnable;)Ljava/lang/Void;" line="751"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$executeWithRetry$0" desc="()J" line="187"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="112" covered="210"/><counter type="BRANCH" missed="12" covered="28"/><counter type="LINE" missed="22" covered="59"/><counter type="COMPLEXITY" missed="21" covered="17"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContext$Relation" sourcefilename="ExecutionContext.java"><method name="&lt;clinit&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/UncheckedExecutionException" sourcefilename="UncheckedExecutionException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Strings$3" sourcefilename="Strings.java"><method name="&lt;init&gt;" desc="()V" line="184"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/reflect/Field;" line="189"><counter type="INSTRUCTION" missed="15" covered="10"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="13"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Strings$4" sourcefilename="Strings.java"><method name="&lt;init&gt;" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/reflect/Constructor;" line="219"><counter type="INSTRUCTION" missed="40" covered="19"/><counter type="LINE" missed="10" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="22"/><counter type="LINE" missed="10" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Strings$1" sourcefilename="Strings.java"><method name="&lt;init&gt;" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/nio/charset/CharsetDecoder;" line="109"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Strings$2" sourcefilename="Strings.java"><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/nio/charset/CharsetEncoder;" line="118"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/CloseableIterator" sourcefilename="CloseableIterator.java"><method name="from" desc="(Ljava/util/Iterator;)Lorg/spf4j/base/CloseableIterator;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/util/Iterator;Ljava/lang/AutoCloseable;)Lorg/spf4j/base/CloseableIterator;" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStreamRemaining" desc="()Ljava/util/stream/Stream;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStreamRemaining" desc="(Z)Ljava/util/stream/Stream;" line="94"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toStreamRemaining$1" desc="()V" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$0" desc="()V" line="54"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/TimeSource" sourcefilename="TimeSource.java"><method name="nanoTime" desc="()J" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nanoTimeSupplier" desc="()Ljava/util/function/LongSupplier;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadlineNanos" desc="(JLjava/util/concurrent/TimeUnit;)J" line="67"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadlineNanos" desc="(JJLjava/util/concurrent/TimeUnit;)J" line="74"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeToDeadlineStrict" desc="(JLjava/util/concurrent/TimeUnit;)J" line="83"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeToDeadline" desc="(JLjava/util/concurrent/TimeUnit;)J" line="91"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()J" line="33"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="12" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="55"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="9" covered="15"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/PackageInfo" sourcefilename="PackageInfo.java"><method name="errorNoPackageDetail" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="67"><counter type="INSTRUCTION" missed="7" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageInfoDirect" desc="(Ljava/lang/String;)Lorg/spf4j/base/avro/PackageInfo;" line="77"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageInfoDirect" desc="(Ljava/lang/Class;)Lorg/spf4j/base/avro/PackageInfo;" line="87"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageInfo" desc="(Ljava/lang/String;)Lorg/spf4j/base/avro/PackageInfo;" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJarSourceUrl" desc="(Ljava/lang/Class;)Ljava/net/URL;" line="109"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="81"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingSupplier" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="658"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="667"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="674"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/function/Supplier;" line="679"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CharSequences$1" sourcefilename="CharSequences.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Appendable;Lorg/spf4j/base/IntAppender;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="281"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="286"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="303"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="76"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContext$Tag" sourcefilename="ExecutionContext.java"><method name="isInherited" desc="(Lorg/spf4j/base/ExecutionContext$Relation;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushOnClose" desc="()Z" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulateComponent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/EqualsPredicate" sourcefilename="EqualsPredicate.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="test" desc="(Ljava/lang/Object;)Z" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/NameValue" sourcefilename="NameValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/String;Ljava/io/Serializable;)Lorg/spf4j/base/NameValue;" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/IntMath$XorShift32ThreadSafe$ThreadLocalRandom" sourcefilename="IntMath.java"><method name="initialValue" desc="()Lorg/spf4j/base/IntMath$XorShift32;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CloneFailedException" sourcefilename="CloneFailedException.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExecutionContexts$1" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lorg/spf4j/ds/SimpleStack;" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$AdvancedRetryPredicate$1" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="()V" line="411"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Lorg/spf4j/base/Callables$AdvancedAction;" line="414"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/JNA" sourcefilename="JNA.java"><method name="haveJnaPlatform" desc="()Z" line="46"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="haveJnaPlatformClib" desc="()Z" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$ThreadLocalContextAttacherImpl$AttachedImpl" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Thread;Lorg/spf4j/ds/SimpleStack;Lorg/spf4j/base/ExecutionContext;I)V" line="781"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detach" desc="()V" line="790"><counter type="INSTRUCTION" missed="38" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTopOfStack" desc="()Z" line="802"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attachedThread" desc="()Ljava/lang/Thread;" line="806"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="41"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Closeables" sourcefilename="Closeables.java"><method name="closeAll" desc="([Ljava/lang/AutoCloseable;)Ljava/lang/Exception;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeAll" desc="(Ljava/lang/Exception;[Ljava/lang/AutoCloseable;)Ljava/lang/Exception;" line="60"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeAll" desc="([Ljava/io/Closeable;)Ljava/io/IOException;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeAll" desc="(Ljava/lang/Exception;[Ljava/io/Closeable;)Ljava/io/IOException;" line="86"><counter type="INSTRUCTION" missed="20" covered="26"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeAll" desc="([Ljava/io/Closeable;II)Ljava/io/IOException;" line="109"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeAll" desc="(Ljava/lang/Iterable;)Ljava/lang/Exception;" line="127"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeAll" desc="(Ljava/lang/Exception;Ljava/lang/Iterable;)Ljava/lang/Exception;" line="134"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeSelectorChannels" desc="(Ljava/nio/channels/Selector;)Ljava/io/IOException;" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeSelectorChannels" desc="(Ljava/io/IOException;Ljava/nio/channels/Selector;)Ljava/io/IOException;" line="157"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="78"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="36" covered="22"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/EscapeJsonStringAppendableWrapper" sourcefilename="EscapeJsonStringAppendableWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="51"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntMath$XorShift32ThreadSafe" sourcefilename="IntMath.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextInt" desc="()I" line="97"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CloseableIterable" sourcefilename="CloseableIterable.java"><method name="from" desc="(Lorg/spf4j/base/CloseableIterator;)Lorg/spf4j/base/CloseableIterable;" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/lang/Iterable;)Lorg/spf4j/base/CloseableIterable;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/lang/Iterable;Ljava/lang/AutoCloseable;)Lorg/spf4j/base/CloseableIterable;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStream" desc="()Ljava/util/stream/Stream;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStream" desc="(Z)Ljava/util/stream/Stream;" line="82"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toStream$1" desc="()V" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$0" desc="()V" line="52"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Runtime$Version" sourcefilename="Runtime.java"><method name="fromSpecVersion" desc="(Ljava/lang/String;)Lorg/spf4j/base/Runtime$Version;" line="159"><counter type="INSTRUCTION" missed="23" covered="15"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="149"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingFunction" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="532"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="541"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="548"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/function/Function;" line="553"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CoreTextMediaType" sourcefilename="CoreTextMediaType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubType" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="51"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingNamedCallable" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="491"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="500"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="507"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/concurrent/Callable;" line="512"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExitException" sourcefilename="ExitException.java"><method name="&lt;init&gt;" desc="(I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExitCode" desc="()I" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Arrays" sourcefilename="Arrays.java"><method name="getColumnAsDoubles" desc="([[JI)[D" line="71"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumn" desc="([[DI)[D" line="79"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDoubleArray" desc="([J)[D" line="87"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toObjectArray" desc="([J)[Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="([D[D)[D" line="103"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deepEquals" desc="([Ljava/lang/Object;[Ljava/lang/Object;I)Z" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deepEquals" desc="([Ljava/lang/Object;[Ljava/lang/Object;II)Z" line="115"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="([B[BIII)Z" line="130"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="search" desc="([CC)I" line="140"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveOfRange" desc="([Ljava/lang/Object;II)[Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preppend" desc="([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preppend" desc="([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;" line="181"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;" line="191"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concat" desc="([[Ljava/lang/Object;)[Ljava/lang/Object;" line="201"><counter type="INSTRUCTION" missed="13" covered="65"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="([[B)[B" line="219"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="([Ljava/lang/Object;Ljava/lang/Object;)I" line="237"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fill" desc="([BIIB)V" line="251"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fill" desc="([Ljava/lang/Object;IILjava/lang/Object;)V" line="305"><counter type="INSTRUCTION" missed="32" covered="103"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fill" desc="([CIIC)V" line="344"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fill" desc="([IIII)V" line="383"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fill" desc="([JIIJ)V" line="422"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fill" desc="([DIID)V" line="461"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1105" covered="253"/><counter type="BRANCH" missed="157" covered="29"/><counter type="LINE" missed="204" covered="52"/><counter type="COMPLEXITY" missed="99" covered="18"/><counter type="METHOD" missed="17" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/DateTimeFormats" sourcefilename="DateTimeFormats.java"><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$RetryData" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(IJJ)V" line="205"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDelay" desc="()J" line="218"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Methods" sourcefilename="Methods.java"><method name="writeHtml" desc="(Lorg/spf4j/base/avro/Method;Ljava/io/Writer;)V" line="61"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethod" desc="(Ljava/lang/StackTraceElement;)Lorg/spf4j/base/avro/Method;" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethod" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/base/avro/Method;" line="76"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Lorg/spf4j/base/avro/Method;Ljava/lang/Appendable;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Lorg/spf4j/base/avro/Method;Ljava/lang/StringBuilder;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharSequence" desc="(Lorg/spf4j/base/avro/Method;)Ljava/lang/CharSequence;" line="102"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Lorg/spf4j/base/avro/Method;)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/CharSequence;)Lorg/spf4j/base/avro/Method;" line="112"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/CharSequence;II)Lorg/spf4j/base/avro/Method;" line="116"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="127"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/AlmostSafe" sourcefilename="AlmostSafe.java"><method name="lambda$static$0" desc="()Lsun/misc/Unsafe;" line="57"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/CallablesNano$TimeoutNanoRetryPredicate$1" sourcefilename="CallablesNano.java"><method name="&lt;init&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDecision" desc="(Ljava/lang/Object;JLjava/util/concurrent/Callable;)Lorg/spf4j/base/Callables$RetryDecision;" line="155"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Either$Right" sourcefilename="Either.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeft" desc="()Z" line="119"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRight" desc="()Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/CallablesNano" sourcefilename="CallablesNano.java"><method name="executeWithRetry" desc="(Lorg/spf4j/base/CallablesNano$NanoTimeoutCallable;IJLjava/lang/Class;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/CallablesNano$NanoTimeoutCallable;IJLorg/spf4j/base/Callables$AdvancedRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/CallablesNano$NanoTimeoutCallable;IJLorg/spf4j/base/CallablesNano$TimeoutNanoRetryPredicate;Lorg/spf4j/base/Callables$AdvancedRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDeadlineNanos" desc="(J)J" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/CallablesNano$NanoTimeoutCallable;Lorg/spf4j/base/CallablesNano$TimeoutNanoRetryPredicate;Lorg/spf4j/base/CallablesNano$TimeoutNanoRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeWithRetry" desc="(Lorg/spf4j/base/CallablesNano$NanoTimeoutCallable;Lorg/spf4j/base/CallablesNano$TimeoutNanoRetryPredicate;Ljava/lang/Class;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$executeWithRetry$0" desc="()J" line="108"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Timing" sourcefilename="Timing.java"><method name="updateTiming" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNanoTimeToEpochMillis" desc="(J)J" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNanoTimeToInstant" desc="(J)Ljava/time/Instant;" line="92"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromEpochMillisToNanoTime" desc="(J)J" line="98"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentTiming" desc="()Lorg/spf4j/base/Timing;" line="106"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopUpdate" desc="()V" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Ljava/util/concurrent/ScheduledFuture;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="106"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/BasicExecutionContext" sourcefilename="BasicExecutionContext.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)V" line="92"><counter type="INSTRUCTION" missed="8" covered="85"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadlineNanos" desc="()J" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartTimeNanos" desc="()J" line="145"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/lang/Object;)Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/spf4j/base/ExecutionContext$Tag;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextAndValue" desc="(Lorg/spf4j/base/ExecutionContext$Tag;)Lorg/spf4j/base/ContextValue;" line="178"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocal" desc="(Lorg/spf4j/base/ExecutionContext$Tag;)Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Lorg/spf4j/base/ExecutionContext$Tag;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="204"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Lorg/spf4j/base/ExecutionContext;" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="220"><counter type="INSTRUCTION" missed="120" covered="69"/><counter type="BRANCH" missed="23" covered="13"/><counter type="LINE" missed="24" covered="19"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detach" desc="()V" line="283"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttached" desc="()Z" line="288"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attach" desc="()V" line="293"><counter type="INSTRUCTION" missed="13" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="305"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeJsonTo" desc="(Ljava/lang/Appendable;)V" line="316"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addLog" desc="(Lorg/spf4j/log/Slf4jLogRecord;)V" line="332"><counter type="INSTRUCTION" missed="13" covered="22"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCloseable" desc="(Ljava/lang/AutoCloseable;)V" line="352"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLogs" desc="(Ljava/util/Collection;)V" line="360"><counter type="INSTRUCTION" missed="19" covered="38"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="streamLogs" desc="(Ljava/util/function/Consumer;)V" line="386"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextMinLogLevel" desc="(Ljava/lang/String;)Lorg/spf4j/log/Level;" line="400"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBackendMinLogLevel" desc="(Ljava/lang/String;)Lorg/spf4j/log/Level;" line="410"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBackendMinLogLevel" desc="(Ljava/lang/String;Lorg/spf4j/log/Level;)Lorg/spf4j/log/Level;" line="420"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/CharSequence;" line="427"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextChildId" desc="()J" line="432"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="([Ljava/lang/StackTraceElement;)V" line="443"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAndClearStackSamples" desc="()Lorg/spf4j/base/StackSamples;" line="454"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStackSamples" desc="()Lorg/spf4j/base/StackSamples;" line="464"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClosed" desc="()Z" line="469"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelationToSource" desc="()Lorg/spf4j/base/ExecutionContext$Relation;" line="474"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/spf4j/base/StackSamples;)V" line="484"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="295" covered="392"/><counter type="BRANCH" missed="59" covered="43"/><counter type="LINE" missed="69" covered="107"/><counter type="COMPLEXITY" missed="48" covered="35"/><counter type="METHOD" missed="8" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingBiConsumer" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/BiConsumer;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="701"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="710"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="717"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapped" desc="()Ljava/util/function/BiConsumer;" line="722"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Iterables$1" sourcefilename="Iterables.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Consumer;Lorg/spf4j/base/MutableHolder;)V" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="56"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExecutionContexts$ThreadLocalContextAttacherImpl" sourcefilename="ExecutionContexts.java"><method name="attach" desc="(Lorg/spf4j/base/ExecutionContext;)Lorg/spf4j/base/ThreadLocalContextAttacher$Attached;" line="766"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/TimeoutDeadline" sourcefilename="TimeoutDeadline.java"><method name="&lt;init&gt;" desc="(JJ)V" line="48"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(JJ)Lorg/spf4j/base/TimeoutDeadline;" line="55"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeoutNanos" desc="()J" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeadlineNanos" desc="()J" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="73"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="80"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$RetryPredicate" sourcefilename="Callables.java"><method name="&lt;clinit&gt;" desc="()V" line="494"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingConsumer" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Consumer;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="617"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="626"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="633"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/function/Consumer;" line="638"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/NullAbleOptional" sourcefilename="NullAbleOptional.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="empty" desc="()Lorg/spf4j/base/NullAbleOptional;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Object;)Lorg/spf4j/base/NullAbleOptional;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingBiFunction" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/BiFunction;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="575"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="584"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="591"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/function/BiFunction;" line="596"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/MutableHolder$ComparableHolder" sourcefilename="MutableHolder.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Comparable;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Comparable;)Lorg/spf4j/base/MutableHolder$ComparableHolder;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lorg/spf4j/base/MutableHolder$ComparableHolder;)I" line="121"><counter type="INSTRUCTION" missed="8" covered="16"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="25"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Either$Left" sourcefilename="Either.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeft" desc="()Z" line="96"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Threads$OracleJdkThreadInfoSupplier" sourcefilename="Threads.java"><method name="getThreads" desc="()[Ljava/lang/Thread;" line="114"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStackTraces" desc="([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;" line="127"><counter type="INSTRUCTION" missed="9" covered="8"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="54"/><counter type="LINE" missed="12" covered="16"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/AggregateTranslator" sourcefilename="AggregateTranslator.java"><method name="&lt;init&gt;" desc="([Lorg/spf4j/base/CharSequenceTranslator;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="67"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$RetryDecision$Type" sourcefilename="Callables.java"><method name="&lt;clinit&gt;" desc="()V" line="428"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ComparablePair" sourcefilename="ComparablePair.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/spf4j/base/ComparablePair;" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lorg/spf4j/base/ComparablePair;)I" line="61"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="7"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntAppender$SimplePrefixNumberAppender" sourcefilename="IntAppender.java"><method name="append" desc="(ILjava/lang/Appendable;)V" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Reflections" sourcefilename="Reflections.java"><method name="initPrimitiveMap" desc="()V" line="148"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterTypes" desc="(Ljava/lang/reflect/Method;)[Ljava/lang/Class;" line="181"><counter type="INSTRUCTION" missed="12" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterTypes" desc="(Ljava/lang/reflect/Constructor;)[Ljava/lang/Class;" line="196"><counter type="INSTRUCTION" missed="12" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveToWrapper" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="210"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveToWrapper" desc="(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;" line="219"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrapperToPrimitive" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="227"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWrappableOrWrapper" desc="(Ljava/lang/Class;)Z" line="235"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAnnotationAttribute" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;" line="240"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeclaredMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="266"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="299"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstructor" desc="(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" line="315"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompatibleMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="340"><counter type="INSTRUCTION" missed="5" covered="108"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompatibleMethodHandle" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;" line="389"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" line="404"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canAssign" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="430"><counter type="INSTRUCTION" missed="8" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompatibleMethodCached" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="527"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompatibleMethodHandleCached" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;" line="542"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getManifest" desc="(Ljava/net/URL;)Ljava/util/jar/Manifest;" line="556"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementStatic" desc="(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;" line="570"><counter type="INSTRUCTION" missed="16" covered="55"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implement" desc="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" line="586"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLoadedClass" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;" line="607"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forName" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="623"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forName" desc="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;" line="639"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImplementedGenericInterfaces" desc="(Ljava/lang/Class;)Ljava/util/List;" line="648"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInheritedAnnotation" desc="(Ljava/lang/Class;Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/annotation/Annotation;" line="665"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOverriddenAnnotation" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/annotation/Annotation;" line="675"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOverriddenMethodAnnotationFrom" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;" line="700"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$implement$5" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="600"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$implementStatic$4" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="581"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConstructor$3" desc="(Ljava/lang/reflect/Constructor;)Ljava/lang/Void;" line="318"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="()Ljava/lang/reflect/Method;" line="131"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="()Ljava/lang/reflect/Field;" line="98"><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()Ljava/lang/reflect/Field;" line="86"><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="22" covered="59"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="17"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="615" covered="461"/><counter type="BRANCH" missed="71" covered="49"/><counter type="LINE" missed="136" covered="106"/><counter type="COMPLEXITY" missed="59" covered="35"/><counter type="METHOD" missed="18" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Threads" sourcefilename="Threads.java"><method name="getThreads" desc="()[Ljava/lang/Thread;" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomFirst" desc="(I[Ljava/lang/Thread;)I" line="153"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStackTraces" desc="([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dumpTo" desc="(Ljava/lang/Appendable;)V" line="175"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpToPrintStream" desc="(Ljava/io/PrintStream;)V" line="188"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="18" covered="12"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="65"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="21" covered="19"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ArrayWriter" sourcefilename="ArrayWriter.java"><method name="accept" desc="(Ljava/lang/Object;)V" line="34"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="42"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="46"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/SysExits" sourcefilename="SysExits.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="207"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitCode" desc="()I" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOk" desc="()Z" line="216"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isError" desc="()Z" line="220"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCode" desc="(I)Lorg/spf4j/base/SysExits;" line="229"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="12" covered="630"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="61"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="650"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="68"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/TimeoutRunnable" sourcefilename="TimeoutRunnable.java"><method name="&lt;init&gt;" desc="(JZ)V" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(J)V" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeadlineMillis" desc="()J" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Void;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Runtime$1" sourcefilename="Runtime.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/Runtime$ProcOutputHandler;)V" line="470"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStdOut" desc="(Ljava/io/InputStream;)Ljava/lang/Void;" line="474"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStdErr" desc="(Ljava/io/InputStream;)Ljava/lang/Void;" line="489"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/ExecutionContexts" sourcefilename="ExecutionContexts.java"><method name="initTLAttacher" desc="()Lorg/spf4j/base/ThreadLocalContextAttacher;" line="87"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initFactory" desc="()Lorg/spf4j/base/ExecutionContextFactory;" line="102"><counter type="INSTRUCTION" missed="31" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultThreadLocalAttacher" desc="()Lorg/spf4j/base/ThreadLocalContextAttacher;" line="127"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="threadLocalAttacher" desc="()Lorg/spf4j/base/ThreadLocalContextAttacher;" line="131"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="genId" desc="()Ljava/lang/CharSequence;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextFactory" desc="()Lorg/spf4j/base/ExecutionContextFactory;" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()Lorg/spf4j/base/ExecutionContext;" line="144"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inCurrentThread" desc="(Lorg/spf4j/base/ExecutionContext;)Z" line="148"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearCurrentThread" desc="()V" line="152"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(JJ)Lorg/spf4j/base/ExecutionContext;" line="162"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="173"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;)Lorg/spf4j/base/ExecutionContext;" line="177"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lorg/spf4j/base/ExecutionContext;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Lorg/spf4j/base/ExecutionContext;)Lorg/spf4j/base/ExecutionContext;" line="189"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lorg/spf4j/base/ExecutionContext;JJ)Lorg/spf4j/base/ExecutionContext;" line="195"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;JJ)Lorg/spf4j/base/ExecutionContext;" line="199"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Ljava/lang/String;J)Lorg/spf4j/base/ExecutionContext;" line="203"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;)Lorg/spf4j/base/ExecutionContext;" line="208"><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="220"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDetached" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/ExecutionContext;" line="226"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;J)Lorg/spf4j/base/ExecutionContext;" line="232"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;JJ)Lorg/spf4j/base/ExecutionContext;" line="237"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;JJ)Lorg/spf4j/base/ExecutionContext;" line="242"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)Lorg/spf4j/base/ExecutionContext;" line="248"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDetached" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;JJ)Lorg/spf4j/base/ExecutionContext;" line="256"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDetached" desc="(Ljava/lang/String;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)Lorg/spf4j/base/ExecutionContext;" line="261"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDetached" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)Lorg/spf4j/base/ExecutionContext;" line="267"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextDeadlineNanos" desc="()J" line="271"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextDeadlineNanos" desc="(J)J" line="280"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeRelativeToDeadline" desc="(Ljava/util/concurrent/TimeUnit;)J" line="290"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeToDeadline" desc="(Ljava/util/concurrent/TimeUnit;)J" line="295"><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeToDeadlineUnchecked" desc="(Ljava/util/concurrent/TimeUnit;)J" line="304"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeToDeadlineInt" desc="(Ljava/util/concurrent/TimeUnit;)I" line="313"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMillisToDeadline" desc="()J" line="323"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecondsToDeadline" desc="()I" line="328"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeDeadline" desc="(JLjava/util/concurrent/TimeUnit;)J" line="337"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTimeout" desc="(JLjava/util/concurrent/TimeUnit;)J" line="341"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeDeadline" desc="(Lorg/spf4j/base/ExecutionContext;Ljava/util/concurrent/TimeUnit;J)J" line="350"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeDeadline" desc="(Lorg/spf4j/base/ExecutionContext;JLjava/util/concurrent/TimeUnit;)J" line="355"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeDeadline" desc="(JLorg/spf4j/base/ExecutionContext;Ljava/util/concurrent/TimeUnit;J)J" line="366"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTimeoutDeadline" desc="(Lorg/spf4j/base/ExecutionContext;Ljava/util/concurrent/TimeUnit;J)Lorg/spf4j/base/TimeoutDeadline;" line="384"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingCallable" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" line="408"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingCallable" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/base/ExecutionContext;)Ljava/util/concurrent/Callable;" line="413"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingCallables" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="418"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingCallables" desc="(Ljava/util/Collection;Lorg/spf4j/base/ExecutionContext;)Ljava/util/Collection;" line="425"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deadlinedPropagatingCallables" desc="(Ljava/util/Collection;Lorg/spf4j/base/ExecutionContext;J)Ljava/util/Collection;" line="433"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deadlinedPropagatingCallable" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/base/ExecutionContext;J)Ljava/util/concurrent/Callable;" line="440"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingRunnable" desc="(Ljava/lang/Runnable;)Ljava/lang/Runnable;" line="444"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propagatingRunnable" desc="(Ljava/lang/Runnable;Lorg/spf4j/base/ExecutionContext;)Ljava/lang/Runnable;" line="449"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propagatingRunnable" desc="(Ljava/lang/Runnable;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/lang/Runnable;" line="454"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingCallable" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/util/concurrent/Callable;" line="477"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingFunction" desc="(Ljava/util/function/Function;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/util/function/Function;" line="519"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingBiFunction" desc="(Ljava/util/function/BiFunction;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/util/function/BiFunction;" line="561"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingConsumer" desc="(Ljava/util/function/Consumer;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/util/function/Consumer;" line="604"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingSupplier" desc="(Ljava/util/function/Supplier;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/util/function/Supplier;" line="645"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propagatingBiConsumer" desc="(Ljava/util/function/BiConsumer;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)Ljava/util/function/BiConsumer;" line="688"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deadlinedPropagatingCallables$3" desc="(Ljava/util/Collection;)Ljava/util/ArrayList;" line="435"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deadlinedPropagatingCallables$2" desc="(Lorg/spf4j/base/ExecutionContext;JLjava/util/concurrent/Callable;)Lorg/spf4j/base/ExecutionContexts$PropagatingNamedCallable;" line="434"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$propagatingCallables$1" desc="(Ljava/util/Collection;)Ljava/util/ArrayList;" line="427"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$propagatingCallables$0" desc="(Lorg/spf4j/base/ExecutionContext;Ljava/util/concurrent/Callable;)Lorg/spf4j/base/ExecutionContexts$PropagatingCallable;" line="426"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="347" covered="330"/><counter type="BRANCH" missed="20" covered="20"/><counter type="LINE" missed="62" covered="73"/><counter type="COMPLEXITY" missed="43" covered="40"/><counter type="METHOD" missed="30" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/InstrumentationHelper" sourcefilename="InstrumentationHelper.java"><method name="premain" desc="(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObjectSize" desc="(Ljava/lang/Object;)J" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/AbstractRunnable" sourcefilename="AbstractRunnable.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="88"><counter type="INSTRUCTION" missed="25" covered="31"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="62"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Env" sourcefilename="Env.java"><method name="getValue" desc="(Ljava/lang/String;I)I" line="32"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/String;Z)Z" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Pair" sourcefilename="Pair.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/spf4j/base/Pair;" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/String;)Lorg/spf4j/base/Pair;" line="78"><counter type="INSTRUCTION" missed="14" covered="42"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="()Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecond" desc="()Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="114"><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="129"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Appendable;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="()Ljava/util/List;" line="151"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asMap" desc="([Lorg/spf4j/base/Pair;)Ljava/util/Map;" line="155"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="164"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="207"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="9" covered="40"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/AppendableUtils$1" sourcefilename="AppendableUtils.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()[C" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$AdvancedRetryPredicate" sourcefilename="Callables.java"><method name="apply" desc="(Ljava/lang/Object;J)Lorg/spf4j/base/Callables$AdvancedAction;" line="406"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="411"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Throwables$1" sourcefilename="Throwables.java"><method name="&lt;init&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Throwable;)Z" line="126"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Throwables$3" sourcefilename="Throwables.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/Object;" line="280"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Throwables$2" sourcefilename="Throwables.java"><method name="&lt;init&gt;" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Throwable;)Z" line="153"><counter type="INSTRUCTION" missed="4" covered="36"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$test$0" desc="(Ljava/lang/Throwable;)Z" line="170"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="67"/><counter type="BRANCH" missed="10" covered="16"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$TimeoutRetryPredicate$1" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="()V" line="523"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="(Ljava/lang/Object;JLjava/util/concurrent/Callable;)Lorg/spf4j/base/Callables$RetryDecision;" line="527"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$ConstCallable" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="760"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="766"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="771"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Reflections$MethodDesc" sourcefilename="Reflections.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V" line="453"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClasz" desc="()Ljava/lang/Class;" line="460"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="464"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParamTypes" desc="()[Ljava/lang/Class;" line="468"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="473"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="478"><counter type="INSTRUCTION" missed="8" covered="26"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="497"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="57"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Version" sourcefilename="Version.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/CharSequence;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPart" desc="(Ljava/lang/String;Ljava/util/Collection;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lorg/spf4j/base/Version;)I" line="111"><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="140"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="145"><counter type="INSTRUCTION" missed="7" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImage" desc="()Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComponents" desc="()[Ljava/lang/Comparable;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComponent" desc="(I)Ljava/lang/Comparable;" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMajor" desc="()I" line="171"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinor" desc="()I" line="176"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPatch" desc="()I" line="181"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrComponents" desc="()I" line="185"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readObject" desc="(Ljava/io/ObjectInputStream;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="260"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="13" covered="24"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Throwables$TrimmedException" sourcefilename="Throwables.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="308"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillInStackTrace" desc="()Ljava/lang/Throwable;" line="313"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingCallable" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/base/ExecutionContext;)V" line="462"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="469"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/SerializablePair" sourcefilename="SerializablePair.java"><method name="&lt;init&gt;" desc="(Ljava/io/Serializable;Ljava/io/Serializable;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/io/Serializable;Ljava/io/Serializable;)Lorg/spf4j/base/SerializablePair;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeReplace" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ArrayBuilder" sourcefilename="ArrayBuilder.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Class;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureCapacity" desc="(I)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expandCapacity" desc="(I)V" line="73"><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArray" desc="()[Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="71"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Threads$SlowThreadInfoSupplierImpl" sourcefilename="Threads.java"><method name="getThreads" desc="()[Ljava/lang/Thread;" line="201"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStackTraces" desc="([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;" line="207"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Runtime$LazyMain" sourcefilename="Runtime.java"><method name="getMainClass" desc="()Ljava/lang/Class;" line="677"><counter type="INSTRUCTION" missed="23" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="673"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Objects" sourcefilename="Objects.java"><method name="clone" desc="(Ljava/io/Serializable;)Ljava/io/Serializable;" line="52"><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/XCollectors" sourcefilename="XCollectors.java"><method name="last" desc="(I)Ljava/util/stream/Collector;" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="last" desc="(ILjava/lang/Object;)Ljava/util/stream/Collector;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="last" desc="(Ljava/util/function/Supplier;ILjava/lang/Object;)Ljava/util/stream/Collector;" line="75"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="limitDequeue" desc="(Ljava/util/Deque;ILjava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filtering" desc="(Ljava/util/function/Predicate;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;" line="107"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castingIdentity" desc="()Ljava/util/function/Function;" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filtering$4" desc="(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$last$3" desc="(ILjava/lang/Object;Ljava/util/Deque;Ljava/lang/Object;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$last$2" desc="()Ljava/util/ArrayDeque;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$last$1" desc="(Ljava/util/ArrayDeque;Ljava/util/ArrayDeque;)Ljava/util/ArrayDeque;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$last$0" desc="(ILjava/util/ArrayDeque;Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="105"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$TimeoutRetryPredicate2RetryPredicate" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(JLorg/spf4j/base/Callables$TimeoutRetryPredicate;)V" line="545"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/base/Callables$RetryDecision;" line="553"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/JsonWriteable" sourcefilename="JsonWriteable.java"><method name="writeJsonTo" desc="(Ljava/lang/StringBuilder;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Appendable;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Either" sourcefilename="Either.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRight" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="65"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="(Ljava/lang/Object;)Lorg/spf4j/base/Either;" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="(Ljava/lang/Object;)Lorg/spf4j/base/Either;" line="138"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processResult" desc="(Lorg/spf4j/base/Either;)Ljava/lang/Object;" line="144"><counter type="INSTRUCTION" missed="8" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="54"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="9" covered="13"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Throwables" sourcefilename="Throwables.java"><method name="isRetryable" desc="(Ljava/lang/Throwable;)Z" line="194"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIsRetryablePredicate" desc="()Ljava/util/function/Predicate;" line="198"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIsRetryablePredicate" desc="(Ljava/util/function/Predicate;)V" line="202"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrSuppressedExceptions" desc="(Ljava/lang/Throwable;)I" line="208"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrRecursiveSuppressedExceptions" desc="(Ljava/lang/Throwable;)I" line="221"><counter type="INSTRUCTION" missed="8" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOldestSuppressedRecursive" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="239"><counter type="INSTRUCTION" missed="8" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOldestSuppressed" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="258"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chain0" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)V" line="270"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCause" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)V" line="276"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chain" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="302"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chain" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;I)Ljava/lang/Throwable;" line="319"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRootCause" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)V" line="334"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRootCause" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;I)V" line="338"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone0" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="350"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimCausalChain" desc="(Ljava/lang/Throwable;I)V" line="359"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suppress" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="386"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suppressLimited" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)V" line="399"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suppressLimited" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;I)V" line="405"><counter type="INSTRUCTION" missed="12" covered="33"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suppress" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;I)Ljava/lang/Throwable;" line="426"><counter type="INSTRUCTION" missed="20" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuppressed" desc="(Ljava/lang/Throwable;)[Ljava/lang/Throwable;" line="456"><counter type="INSTRUCTION" missed="15" covered="71"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="491"><counter type="INSTRUCTION" missed="18" covered="216"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="4" covered="55"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/lang/Throwable;)Ljava/lang/String;" line="590"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/Throwable;Lorg/spf4j/base/Throwables$PackageDetail;)Ljava/lang/String;" line="594"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/Throwable;Lorg/spf4j/base/Throwables$PackageDetail;Z)Ljava/lang/String;" line="598"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringBuilder" desc="(Ljava/lang/Throwable;Lorg/spf4j/base/Throwables$PackageDetail;)Ljava/lang/StringBuilder;" line="603"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringBuilder" desc="(Ljava/lang/Throwable;Lorg/spf4j/base/Throwables$PackageDetail;Z)Ljava/lang/StringBuilder;" line="608"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Ljava/lang/Throwable;Ljava/io/PrintStream;Lorg/spf4j/base/Throwables$PackageDetail;)V" line="619"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Throwable;Ljava/io/PrintStream;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="625"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;)V" line="635"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;Ljava/lang/String;)V" line="640"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="645"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="650"><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeThrowableDetail" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="662"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeMessageString" desc="(Ljava/lang/Appendable;Ljava/lang/Throwable;)V" line="683"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="([Ljava/lang/StackTraceElement;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="693"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="([Ljava/lang/StackTraceElement;Ljava/lang/Appendable;Lorg/spf4j/base/Throwables$PackageDetail;ZLjava/lang/String;)V" line="699"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commonFrames" desc="([Ljava/lang/StackTraceElement;[Ljava/lang/StackTraceElement;)I" line="710"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printEnclosedStackTrace" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;[Ljava/lang/StackTraceElement;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/spf4j/base/Throwables$PackageDetail;Z)V" line="727"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonRecoverable" desc="(Ljava/lang/Throwable;)Z" line="775"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsNonRecoverable" desc="(Ljava/lang/Throwable;)Z" line="784"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Throwable;Ljava/util/function/Predicate;)Z" line="795"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z" line="807"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="first" desc="(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;" line="820"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="first" desc="(Ljava/lang/Throwable;Ljava/util/function/Predicate;)Ljava/lang/Throwable;" line="833"><counter type="INSTRUCTION" missed="1" covered="93"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstCause" desc="(Ljava/lang/Throwable;Ljava/util/function/Predicate;)Ljava/lang/Throwable;" line="877"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonRecoverablePredicate" desc="()Ljava/util/function/Predicate;" line="889"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNonRecoverablePredicate" desc="(Ljava/util/function/Predicate;)V" line="897"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeAbreviatedClassName" desc="(Ljava/lang/String;Ljava/lang/Appendable;)V" line="901"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwException" desc="(Ljava/lang/Exception;)V" line="921"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$first$3" desc="(Ljava/lang/Class;Ljava/lang/Throwable;)Z" line="820"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$contains$2" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z" line="807"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="()Ljava/lang/reflect/Field;" line="104"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()Ljava/lang/reflect/Field;" line="93"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="276" covered="1118"/><counter type="BRANCH" missed="36" covered="132"/><counter type="LINE" missed="80" covered="273"/><counter type="COMPLEXITY" missed="44" covered="94"/><counter type="METHOD" missed="15" covered="39"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntMath$XorShift32" sourcefilename="IntMath.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="72"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/UncheckedTimeoutException" sourcefilename="UncheckedTimeoutException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/SuppressedThrowable" sourcefilename="SuppressedThrowable.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillInStackTrace" desc="()Ljava/lang/Throwable;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CharSequences$SubSequence" sourcefilename="CharSequences.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;II)V" line="213"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="221"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="charAt" desc="(I)C" line="226"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="231"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="44" covered="16"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="28"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/CallablesNano$TimeoutNanoRetryPredicate" sourcefilename="CallablesNano.java"><method name="&lt;clinit&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/PackageInfo$1" sourcefilename="PackageInfo.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/String;)Lorg/spf4j/base/avro/PackageInfo;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/CloseableIterator$1" sourcefilename="CloseableIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/AutoCloseable;Ljava/util/Iterator;)V" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CloseableIterable$1" sourcefilename="CloseableIterable.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/CloseableIterator;)V" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CloseableIterable$2" sourcefilename="CloseableIterable.java"><method name="&lt;init&gt;" desc="(Ljava/lang/AutoCloseable;Ljava/lang/Iterable;)V" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="62"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$RetryPredicate$1" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="()V" line="494"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDecision" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/base/Callables$RetryDecision;" line="497"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Runtime" sourcefilename="Runtime.java"><method name="getAppVersion" desc="()Lorg/spf4j/base/Version;" line="175"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAppVersionString" desc="()Ljava/lang/String;" line="179"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplicationInfo" desc="()Lorg/spf4j/base/avro/ApplicationInfo;" line="230"><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShuttingDown" desc="()Z" line="287"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;)V" line="299"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="304"><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorNoPackageDetail" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="310"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="goDownWithError" desc="(Lorg/spf4j/base/SysExits;)V" line="316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="goDownWithError" desc="(Ljava/lang/Throwable;Lorg/spf4j/base/SysExits;)V" line="320"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="goDownWithError" desc="(Ljava/lang/Throwable;I)V" line="327"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMacOsx" desc="()Z" line="350"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWindows" desc="()Z" line="360"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTestFramework" desc="()Z" line="364"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="haveJnaPlatform" desc="()Z" line="384"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="haveJnaPlatformClib" desc="()Z" line="393"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrOpenFiles" desc="()I" line="405"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLsofOutput" desc="()Ljava/lang/CharSequence;" line="415"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="([Ljava/lang/String;J)Ljava/lang/CharSequence;" line="439"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="killProcess" desc="(Ljava/lang/Process;JJ)I" line="449"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="([Ljava/lang/String;Lorg/spf4j/base/Runtime$ProcOutputHandler;J)I" line="458"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="([Ljava/lang/String;Lorg/spf4j/base/Runtime$ProcOutputHandler;JJ)I" line="469"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueHookAtBeginning" desc="(Ljava/lang/Runnable;)V" line="505"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="queueHookAtEnd" desc="(Ljava/lang/Runnable;)V" line="511"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="queueHook" desc="(ILjava/lang/Runnable;)V" line="515"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeQueuedShutdownHook" desc="(Ljava/lang/Runnable;)Z" line="527"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeadline" desc="()J" line="546"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="millisToDeadline" desc="()J" line="555"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gc" desc="(J)Z" line="566"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jrun" desc="(Ljava/lang/Class;J[Ljava/lang/String;)Ljava/lang/CharSequence;" line="576"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jrun" desc="(Ljava/lang/Class;Ljava/lang/String;J[Ljava/lang/String;)Ljava/lang/CharSequence;" line="582"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJvmArgsNoJMXNoDebug" desc="()[Ljava/lang/String;" line="587"><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCurrentDir" desc="(Ljava/lang/String;)V" line="601"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentDir" desc="()Ljava/lang/String;" line="608"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jrun" desc="(Ljava/lang/Class;Ljava/lang/String;J[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/CharSequence;" line="614"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jrunAndLog" desc="(Ljava/lang/Class;J[Ljava/lang/String;)V" line="625"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jrunAndLog" desc="(Ljava/lang/Class;Ljava/lang/String;J[Ljava/lang/String;)V" line="631"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jrunAndLog" desc="(Ljava/lang/Class;Ljava/lang/String;J[Ljava/lang/String;[Ljava/lang/String;)V" line="638"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMainThread" desc="()Ljava/lang/Thread;" line="652"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMainClass" desc="()Ljava/lang/Class;" line="668"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="32" covered="135"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="6" covered="35"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="520" covered="369"/><counter type="BRANCH" missed="56" covered="12"/><counter type="LINE" missed="113" covered="88"/><counter type="COMPLEXITY" missed="52" covered="22"/><counter type="METHOD" missed="20" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Strings" sourcefilename="Strings.java"><method name="distance" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="131"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unescape" desc="(Ljava/lang/String;)Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/String;[C)Z" line="140"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/CharSequence;[C)Z" line="153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withFirstCharLower" desc="(Ljava/lang/String;)Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeReplaceWhitespaces" desc="(Ljava/lang/String;CLjava/lang/Appendable;)V" line="174"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="steal" desc="(Ljava/lang/String;)[C" line="257"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="([C)Ljava/lang/String;" line="277"><counter type="INSTRUCTION" missed="23" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUtf8Encoder" desc="()Ljava/nio/charset/CharsetEncoder;" line="295"><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUtf8Decoder" desc="()Ljava/nio/charset/CharsetDecoder;" line="306"><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUTF8CharsetEncoder" desc="()Ljava/nio/charset/CharsetEncoder;" line="316"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUTF8CharsetDecoder" desc="()Ljava/nio/charset/CharsetDecoder;" line="320"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/nio/charset/CharsetEncoder;[CII)[B" line="325"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getmaxNrBytes" desc="(Ljava/nio/charset/CharsetEncoder;I)I" line="334"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/nio/charset/CharsetEncoder;[CII[B)I" line="339"><counter type="INSTRUCTION" missed="44" covered="13"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="14" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/nio/charset/CharsetDecoder;[BII)Ljava/lang/String;" line="366"><counter type="INSTRUCTION" missed="48" covered="31"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="14" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromUtf8" desc="([B)Ljava/lang/String;" line="406"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromUtf8" desc="([BII)Ljava/lang/String;" line="410"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toUtf8" desc="(Ljava/lang/String;)[B" line="425"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="434"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="439"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashcode" desc="(Ljava/lang/CharSequence;)I" line="444"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subSequence" desc="(Ljava/lang/CharSequence;II)Ljava/lang/CharSequence;" line="449"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="454"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeJsonString" desc="(Ljava/lang/String;Ljava/lang/StringBuilder;)V" line="465"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeJsonString" desc="(Ljava/lang/String;Ljava/lang/Appendable;)V" line="471"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendJsonStringEscapedChar" desc="(CLjava/lang/StringBuilder;)V" line="476"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendJsonStringEscapedChar" desc="(CLjava/lang/Appendable;)V" line="481"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendUnsignedString" desc="(Ljava/lang/StringBuilder;JI)V" line="486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendUnsignedString" desc="(Ljava/lang/StringBuilder;II)V" line="491"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendUnsignedStringPadded" desc="(Ljava/lang/StringBuilder;III)V" line="497"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendUnsignedStringPadded" desc="(Ljava/lang/Appendable;III)V" line="503"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendSpaces" desc="(Ljava/lang/Appendable;I)V" line="508"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendSpaces" desc="(Ljava/lang/StringBuilder;I)V" line="513"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="regionMatches" desc="(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z" line="522"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="truncate" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="526"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commonPrefix" desc="([Ljava/lang/CharSequence;)Ljava/lang/String;" line="535"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="19" covered="204"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="301" covered="440"/><counter type="BRANCH" missed="33" covered="21"/><counter type="LINE" missed="87" covered="69"/><counter type="COMPLEXITY" missed="41" covered="24"/><counter type="METHOD" missed="17" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Reflections$2$1" sourcefilename="Reflections.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/Reflections$2;Ljava/lang/reflect/Method;)V" line="512"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/Object;" line="515"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/JavaUtils" sourcefilename="JavaUtils.java"><method name="isJavaIdentifier" desc="(Ljava/lang/CharSequence;)Z" line="46"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/MemorizedCallable" sourcefilename="MemorizedCallable.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIfMemorized" desc="()Lorg/spf4j/base/NullAbleOptional;" line="77"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;)V" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="50"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntMath" sourcefilename="IntMath.java"><method name="closestPowerOf2" desc="(I)I" line="45"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closestPowerOf2Number" desc="(I)I" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$FibonacciBackoffRetryPredicate" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/Callables$AdvancedRetryPredicate;IJJLjava/util/function/Function;JLjava/util/function/LongSupplier;Ljava/util/concurrent/TimeUnit;)V" line="270"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRetryData" desc="(Ljava/lang/Object;Lorg/spf4j/base/Callables$AdvancedAction;)Lorg/spf4j/base/Callables$RetryData;" line="284"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRetryData" desc="(Lorg/spf4j/base/Callables$AdvancedAction;)Lorg/spf4j/base/Callables$RetryData;" line="294"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/base/Callables$RetryDecision;" line="303"><counter type="INSTRUCTION" missed="46" covered="92"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="165"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="6" covered="36"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Holder" sourcefilename="Holder.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Object;)Lorg/spf4j/base/Holder;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/CharSequences" sourcefilename="CharSequences.java"><method name="distance" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="68"><counter type="INSTRUCTION" missed="4" covered="137"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(CC)I" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="119"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/CharSequence;ILjava/lang/CharSequence;I)I" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/CharSequence;IILjava/lang/CharSequence;II)I" line="141"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsNullables" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="158"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="168"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashcode" desc="(Ljava/lang/CharSequence;)I" line="183"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subSequence" desc="(Ljava/lang/CharSequence;II)Ljava/lang/CharSequence;" line="198"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="254"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineNumbered" desc="(ILjava/lang/Appendable;)Ljava/lang/Appendable;" line="270"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineNumbered" desc="(ILjava/lang/Appendable;Lorg/spf4j/base/IntAppender;)Ljava/lang/Appendable;" line="275"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLineNumbered" desc="(ILjava/lang/CharSequence;)Ljava/lang/CharSequence;" line="313"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLineNumbered" desc="(ILjava/lang/CharSequence;Lorg/spf4j/base/IntAppender;)Ljava/lang/CharSequence;" line="317"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseInt" desc="(Ljava/lang/CharSequence;)I" line="333"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseInt" desc="(Ljava/lang/CharSequence;I)I" line="343"><counter type="INSTRUCTION" missed="194" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseUnsignedInt" desc="(Ljava/lang/CharSequence;II)I" line="408"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseUnsignedInt" desc="(Ljava/lang/CharSequence;III)I" line="423"><counter type="INSTRUCTION" missed="60" covered="67"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseUnsignedLong" desc="(Ljava/lang/CharSequence;II)J" line="457"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseUnsignedLong" desc="(Ljava/lang/CharSequence;IIIZ)J" line="463"><counter type="INSTRUCTION" missed="67" covered="91"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseLong" desc="(Ljava/lang/CharSequence;)J" line="503"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseLong" desc="(Ljava/lang/CharSequence;I)J" line="513"><counter type="INSTRUCTION" missed="200" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAnyChar" desc="(Ljava/lang/CharSequence;[C)Z" line="568"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAnyChar" desc="(Ljava/lang/CharSequence;II[C)Z" line="574"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidFileName" desc="(Ljava/lang/CharSequence;)Z" line="584"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validatedFileName" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="588"><counter type="INSTRUCTION" missed="12" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regionMatches" desc="(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z" line="599"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="regionMatchesIgnoreCase" desc="(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z" line="620"><counter type="INSTRUCTION" missed="3" covered="66"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="663"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaRegexpStr" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="695"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/CharSequence;IIC)I" line="723"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/CharSequence;IILjava/util/function/IntPredicate;)I" line="732"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/CharSequence;II[C)I" line="741"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsIgnoreCase" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z" line="753"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOfIgnoreCase" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="757"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOfIgnoreCase" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I" line="770"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countIgnoreCase" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="784"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reader" desc="(Ljava/lang/CharSequence;)Ljava/io/Reader;" line="802"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="841" covered="702"/><counter type="BRANCH" missed="128" covered="90"/><counter type="LINE" missed="158" covered="153"/><counter type="COMPLEXITY" missed="91" covered="58"/><counter type="METHOD" missed="14" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/NullAbleOptional$1" sourcefilename="NullAbleOptional.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPresent" desc="()Z" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/NullAbleOptional$2" sourcefilename="NullAbleOptional.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPresent" desc="()Z" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$SimpleAction" sourcefilename="Callables.java"><method name="&lt;clinit&gt;" desc="()V" line="582"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Runnables" sourcefilename="Runnables.java"><method name="runAll" desc="([Ljava/lang/Runnable;)Ljava/lang/RuntimeException;" line="46"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/XCollectors$CollectorImpl" sourcefilename="XCollectors.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;Ljava/util/Set;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/Set;)V" line="147"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accumulator" desc="()Ljava/util/function/BiConsumer;" line="152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supplier" desc="()Ljava/util/function/Supplier;" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combiner" desc="()Ljava/util/function/BinaryOperator;" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finisher" desc="()Ljava/util/function/Function;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="characteristics" desc="()Ljava/util/Set;" line="172"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="33"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Comparables" sourcefilename="Comparables.java"><method name="min" desc="([Ljava/lang/Object;)Ljava/lang/Comparable;" line="46"><counter type="INSTRUCTION" missed="13" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="([Ljava/lang/Object;)Ljava/lang/Comparable;" line="60"><counter type="INSTRUCTION" missed="13" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)I" line="74"><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareArrays" desc="([Ljava/lang/Comparable;[Ljava/lang/Comparable;)I" line="82"><counter type="INSTRUCTION" missed="15" covered="46"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareArrays" desc="([Ljava/lang/Comparable;[Ljava/lang/Comparable;II)I" line="105"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="140"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="7" covered="38"/><counter type="COMPLEXITY" missed="12" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/LookupTranslator" sourcefilename="LookupTranslator.java"><method name="&lt;init&gt;" desc="([[Ljava/lang/CharSequence;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="95"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="120"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="128"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="110"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="17" covered="26"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$TimeoutCallable" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(I)V" line="363"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="367"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="374"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadline" desc="()J" line="383"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$AdvancedAction" sourcefilename="Callables.java"><method name="&lt;clinit&gt;" desc="()V" line="391"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$PropagatingRunnable" sourcefilename="ExecutionContexts.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Runnable;Lorg/spf4j/base/ExecutionContext;Ljava/lang/String;J)V" line="737"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="746"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapped" desc="()Ljava/lang/Runnable;" line="753"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="758"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntMath$XorShift128" sourcefilename="IntMath.java"><method name="&lt;init&gt;" desc="()V" line="111"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="120"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/UnicodeUnescaper" sourcefilename="UnicodeUnescaper.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="61"><counter type="INSTRUCTION" missed="92" covered="22"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="15" covered="3"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="92" covered="25"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="15" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Base64" sourcefilename="Base64.java"><method name="initDecodeMap" desc="()[B" line="56"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="guessLength2" desc="(Ljava/lang/CharSequence;II)I" line="97"><counter type="INSTRUCTION" missed="16" covered="38"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="guessLength" desc="([CII)I" line="123"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeBase64" desc="(Ljava/lang/CharSequence;)[B" line="149"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeBase64" desc="(Ljava/lang/String;)[B" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeBase64" desc="(Ljava/lang/String;II)[B" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeBase64V2" desc="(Ljava/lang/String;II)[B" line="161"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeBase64" desc="(Ljava/lang/CharSequence;II)[B" line="174"><counter type="INSTRUCTION" missed="11" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeBase64V2" desc="(Ljava/lang/CharSequence;II)[B" line="188"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeInto" desc="(Ljava/lang/CharSequence;II[BI)I" line="203"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeInto2" desc="(Ljava/lang/CharSequence;II[BI)I" line="208"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeBase64" desc="([CII)[B" line="237"><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initEncodeMap" desc="()[C" line="280"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(I)C" line="298"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeByte" desc="(I)B" line="302"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBase64" desc="([B)Ljava/lang/String;" line="306"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeBase64" desc="([BII)Ljava/lang/String;" line="310"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeBase64V2" desc="([BII)Ljava/lang/CharSequence;" line="324"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBase64" desc="([BIILjava/lang/Appendable;)V" line="332"><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBase64" desc="([BII[CI)I" line="376"><counter type="INSTRUCTION" missed="33" covered="135"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeBase64" desc="([BII[BI)I" line="423"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="637" covered="486"/><counter type="BRANCH" missed="44" covered="33"/><counter type="LINE" missed="97" covered="77"/><counter type="COMPLEXITY" missed="36" covered="26"/><counter type="METHOD" missed="9" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntMath$XorShift32ThreadSafe$Singleton" sourcefilename="IntMath.java"><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$1" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Lorg/spf4j/base/Callables$SimpleAction;" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$3" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="691"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="695"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Callables$2" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Exception;)Z" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Throwables$PackageDetail" sourcefilename="Throwables.java"><method name="&lt;clinit&gt;" desc="()V" line="573"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Callables$4" sourcefilename="Callables.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/concurrent/Callable;)V" line="704"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="708"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="720"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/base/Runtime$Jmx" sourcefilename="Runtime.java"><method name="&lt;init&gt;" desc="()V" line="697"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPackageInfo" desc="(Ljava/lang/String;)Lorg/spf4j/base/avro/PackageInfo;" line="701"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restart" desc="()V" line="706"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/ExecutionContexts$BasicExecutionContextFactory" sourcefilename="ExecutionContexts.java"><method name="start" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)Lorg/spf4j/base/ExecutionContext;" line="402"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/OctalUnescaper" sourcefilename="OctalUnescaper.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="62"><counter type="INSTRUCTION" missed="69" covered="24"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOctalDigit" desc="(C)Z" line="91"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZeroToThree" desc="(C)Z" line="100"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="35"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="12" covered="5"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/XCollectors$1" sourcefilename="XCollectors.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/Deque;Ljava/util/Deque;)Ljava/util/Deque;" line="84"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/NoExitSecurityManager" sourcefilename="NoExitSecurityManager.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkPermission" desc="(Ljava/security/Permission;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkPermission" desc="(Ljava/security/Permission;Ljava/lang/Object;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkExit" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Slf4jMessageFormatter" sourcefilename="Slf4jMessageFormatter.java"><method name="exHandle" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Ljava/lang/Throwable;)V" line="73"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Appendable;Ljava/lang/String;[Ljava/lang/Object;)I" line="112"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;Ljava/lang/String;[Ljava/lang/Object;)I" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Appendable;Ljava/lang/String;Lorg/spf4j/io/ObjectAppenderSupplier;[Ljava/lang/Object;)I" line="143"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(ILjava/lang/Appendable;Ljava/lang/String;Lorg/spf4j/io/ObjectAppenderSupplier;[Ljava/lang/Object;)I" line="159"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Lorg/spf4j/base/Slf4jMessageFormatter$ErrorHandler;ILjava/lang/Appendable;Ljava/lang/String;Lorg/spf4j/io/ObjectAppenderSupplier;[Ljava/lang/Object;)I" line="179"><counter type="INSTRUCTION" missed="23" covered="76"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEscapedDelimeter" desc="(Ljava/lang/String;I)Z" line="216"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDoubleEscaped" desc="(Ljava/lang/String;I)Z" line="223"><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deeplyAppendParameter" desc="(Lorg/spf4j/base/Slf4jMessageFormatter$ErrorHandler;Ljava/lang/Appendable;Ljava/lang/Object;Ljava/util/Set;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="230"><counter type="INSTRUCTION" missed="30" covered="68"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="safeObjectAppend" desc="(Lorg/spf4j/base/Slf4jMessageFormatter$ErrorHandler;Ljava/lang/Appendable;Ljava/lang/Object;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="265"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objectArrayAppend" desc="(Lorg/spf4j/base/Slf4jMessageFormatter$ErrorHandler;Ljava/lang/Appendable;[Ljava/lang/Object;Ljava/util/Set;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="booleanArrayAppend" desc="(Ljava/lang/Appendable;[Z)V" line="295"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byteArrayAppend" desc="(Ljava/lang/Appendable;[B)V" line="308"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charArrayAppend" desc="(Ljava/lang/Appendable;[C)V" line="321"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortArrayAppend" desc="(Ljava/lang/Appendable;[S)V" line="334"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intArrayAppend" desc="(Ljava/lang/Appendable;[I)V" line="347"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longArrayAppend" desc="(Ljava/lang/Appendable;[J)V" line="360"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatArrayAppend" desc="(Ljava/lang/Appendable;[F)V" line="373"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleArrayAppend" desc="(Ljava/lang/Appendable;[D)V" line="386"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="345" covered="372"/><counter type="BRANCH" missed="34" covered="42"/><counter type="LINE" missed="74" covered="88"/><counter type="COMPLEXITY" missed="30" covered="28"/><counter type="METHOD" missed="8" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/AppendableUtils" sourcefilename="AppendableUtils.java"><method name="escapeJsonString" desc="(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeJsonString" desc="(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V" line="85"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendJsonStringEscapedChar" desc="(CLjava/lang/StringBuilder;)V" line="93"><counter type="INSTRUCTION" missed="15" covered="39"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendJsonStringEscapedChar" desc="(CLjava/lang/Appendable;)V" line="125"><counter type="INSTRUCTION" missed="10" covered="44"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendUnsignedStringPadded" desc="(Ljava/lang/StringBuilder;III)V" line="158"><counter type="INSTRUCTION" missed="16" covered="65"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendUnsignedStringPadded" desc="(Ljava/lang/Appendable;III)V" line="182"><counter type="INSTRUCTION" missed="16" covered="68"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendUnsignedString" desc="(Ljava/lang/StringBuilder;JI)V" line="204"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendUnsignedString" desc="(Ljava/lang/StringBuilder;II)V" line="217"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSpaces" desc="(Ljava/lang/Appendable;I)V" line="230"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendSpaces" desc="(Ljava/lang/StringBuilder;I)V" line="236"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="99" covered="475"/><counter type="BRANCH" missed="13" covered="29"/><counter type="LINE" missed="23" covered="83"/><counter type="COMPLEXITY" missed="13" covered="24"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/IntAppender$CommentNumberAppender" sourcefilename="IntAppender.java"><method name="append" desc="(ILjava/lang/Appendable;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/base/Writeable" sourcefilename="Writeable.java"><method name="writeTo" desc="(Ljava/lang/StringBuilder;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UncheckedExecutionException.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Arrays.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="2" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="2" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="2" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="4" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="7" ci="0" mb="2" cb="0"/><line nr="122" mi="8" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="9" mb="1" cb="1"/><line nr="131" mi="7" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="14" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="10" ci="0" mb="2" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="11" ci="0" mb="2" cb="0"/><line nr="172" mi="9" ci="0" mb="0" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="12" ci="0" mb="2" cb="0"/><line nr="184" mi="10" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="8" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="1" cb="1"/><line nr="202" mi="13" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="16" mb="0" cb="2"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="16" mb="0" cb="2"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="2" cb="0"/><line nr="220" mi="13" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="16" ci="0" mb="2" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="16" ci="0" mb="2" cb="0"/><line nr="230" mi="7" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="1" cb="1"/><line nr="239" mi="0" ci="6" mb="0" cb="2"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="2" cb="0"/><line nr="253" mi="6" ci="0" mb="4" cb="0"/><line nr="254" mi="16" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="8" ci="0" mb="2" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="7" ci="0" mb="2" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="10" ci="0" mb="2" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="2" cb="0"/><line nr="270" mi="3" ci="0" mb="2" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="2" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="2" cb="0"/><line nr="284" mi="16" ci="0" mb="0" cb="0"/><line nr="286" mi="1" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="2"/><line nr="307" mi="0" ci="6" mb="2" cb="2"/><line nr="308" mi="16" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="2"/><line nr="311" mi="0" ci="8" mb="0" cb="2"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="2"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="10" mb="0" cb="2"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="2"/><line nr="324" mi="0" ci="3" mb="1" cb="1"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="7" ci="0" mb="2" cb="0"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="333" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="1" cb="1"/><line nr="338" mi="0" ci="16" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="2" cb="0"/><line nr="346" mi="6" ci="0" mb="4" cb="0"/><line nr="347" mi="16" ci="0" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="2" cb="0"/><line nr="350" mi="8" ci="0" mb="2" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="7" ci="0" mb="2" cb="0"/><line nr="356" mi="4" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="10" ci="0" mb="2" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="3" ci="0" mb="2" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="7" ci="0" mb="2" cb="0"/><line nr="366" mi="4" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="369" mi="7" ci="0" mb="0" cb="0"/><line nr="372" mi="6" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="2" cb="0"/><line nr="377" mi="16" ci="0" mb="0" cb="0"/><line nr="379" mi="1" ci="0" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="2" ci="0" mb="2" cb="0"/><line nr="385" mi="6" ci="0" mb="4" cb="0"/><line nr="386" mi="16" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="2" cb="0"/><line nr="389" mi="8" ci="0" mb="2" cb="0"/><line nr="390" mi="4" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="7" ci="0" mb="2" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="10" ci="0" mb="2" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="2" cb="0"/><line nr="402" mi="3" ci="0" mb="2" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="2" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="407" mi="1" ci="0" mb="0" cb="0"/><line nr="408" mi="7" ci="0" mb="0" cb="0"/><line nr="411" mi="6" ci="0" mb="0" cb="0"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="415" mi="2" ci="0" mb="2" cb="0"/><line nr="416" mi="16" ci="0" mb="0" cb="0"/><line nr="418" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="2" cb="0"/><line nr="424" mi="6" ci="0" mb="4" cb="0"/><line nr="425" mi="16" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="2" cb="0"/><line nr="428" mi="8" ci="0" mb="2" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="7" ci="0" mb="2" cb="0"/><line nr="434" mi="4" ci="0" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="10" ci="0" mb="2" cb="0"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="2" cb="0"/><line nr="441" mi="3" ci="0" mb="2" cb="0"/><line nr="442" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="7" ci="0" mb="2" cb="0"/><line nr="444" mi="4" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="7" ci="0" mb="0" cb="0"/><line nr="450" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="1" ci="0" mb="0" cb="0"/><line nr="454" mi="2" ci="0" mb="2" cb="0"/><line nr="455" mi="16" ci="0" mb="0" cb="0"/><line nr="457" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="462" mi="2" ci="0" mb="2" cb="0"/><line nr="463" mi="6" ci="0" mb="4" cb="0"/><line nr="464" mi="16" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="2" cb="0"/><line nr="467" mi="8" ci="0" mb="2" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="7" ci="0" mb="2" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="475" mi="4" ci="0" mb="0" cb="0"/><line nr="476" mi="10" ci="0" mb="2" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="479" mi="3" ci="0" mb="2" cb="0"/><line nr="480" mi="3" ci="0" mb="2" cb="0"/><line nr="481" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="7" ci="0" mb="2" cb="0"/><line nr="483" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="7" ci="0" mb="0" cb="0"/><line nr="489" mi="6" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="493" mi="2" ci="0" mb="2" cb="0"/><line nr="494" mi="16" ci="0" mb="0" cb="0"/><line nr="496" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1105" covered="253"/><counter type="BRANCH" missed="157" covered="29"/><counter type="LINE" missed="204" covered="52"/><counter type="COMPLEXITY" missed="99" covered="18"/><counter type="METHOD" missed="17" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameValue.java"><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ParameterizedException.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EqualsPredicate.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionContext.java"><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="9" ci="0" mb="4" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="1" cb="1"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="1" cb="3"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="1" cb="1"/><line nr="230" mi="17" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="1" cb="1"/><line nr="239" mi="17" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="1" cb="1"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="11" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="11" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="6" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="2" cb="0"/><line nr="362" mi="5" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="2" cb="0"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="2" cb="0"/><line nr="421" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="16" ci="0" mb="0" cb="0"/><line nr="424" mi="9" ci="0" mb="2" cb="0"/><line nr="425" mi="3" ci="0" mb="0" cb="0"/><line nr="428" mi="16" ci="0" mb="0" cb="0"/><line nr="429" mi="9" ci="0" mb="2" cb="0"/><line nr="430" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="231" covered="120"/><counter type="BRANCH" missed="21" covered="7"/><counter type="LINE" missed="48" covered="28"/><counter type="COMPLEXITY" missed="29" covered="16"/><counter type="METHOD" missed="16" covered="15"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Writeable.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Runnables.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="16" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AlmostSafe.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EscapeJsonStringAppendableWrapper.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="4" mb="1" cb="1"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Env.java"><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="2" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="2" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AggregateTranslator.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="17" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaUtils.java"><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeoutRunnable.java"><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SuppressedThrowable.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ArrayWriter.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MutableInteger.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="2" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PackageInfo.java"><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="1" cb="1"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="15" mb="0" cb="4"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="87"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="JsonWriteable.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoExitSecurityManager.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Callables.java"><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="2" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="2" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="24" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="2"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="2"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="1" cb="1"/><line nr="295" mi="9" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="10" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="2"/><line nr="305" mi="0" ci="16" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="2"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="2" cb="2"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="2"/><line nr="323" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="1" cb="1"/><line nr="326" mi="11" ci="0" mb="0" cb="0"/><line nr="327" mi="10" ci="0" mb="0" cb="0"/><line nr="328" mi="9" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="12" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="14" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="1" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="20" mb="0" cb="0"/><line nr="393" mi="0" ci="6" mb="0" cb="0"/><line nr="394" mi="0" ci="6" mb="0" cb="0"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="0" ci="9" mb="0" cb="0"/><line nr="428" mi="0" ci="12" mb="0" cb="0"/><line nr="429" mi="0" ci="12" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="8" mb="0" cb="0"/><line nr="453" mi="0" ci="8" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="8" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="0" cb="0"/><line nr="511" mi="6" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="8" mb="0" cb="0"/><line nr="527" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="8" mb="0" cb="0"/><line nr="582" mi="12" ci="0" mb="0" cb="0"/><line nr="584" mi="12" ci="0" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="622" mi="0" ci="2" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="1" ci="0" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="2" mb="0" cb="0"/><line nr="630" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="634" mi="0" ci="5" mb="0" cb="2"/><line nr="635" mi="0" ci="11" mb="0" cb="4"/><line nr="637" mi="0" ci="6" mb="1" cb="1"/><line nr="639" mi="0" ci="2" mb="1" cb="1"/><line nr="640" mi="4" ci="0" mb="0" cb="0"/><line nr="642" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="4" mb="0" cb="2"/><line nr="644" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="3" mb="0" cb="0"/><line nr="647" mi="0" ci="2" mb="0" cb="0"/><line nr="648" mi="0" ci="2" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="2" ci="0" mb="0" cb="0"/><line nr="653" mi="0" ci="1" mb="0" cb="0"/><line nr="654" mi="0" ci="2" mb="0" cb="0"/><line nr="655" mi="0" ci="2" mb="1" cb="1"/><line nr="656" mi="0" ci="3" mb="0" cb="0"/><line nr="658" mi="0" ci="2" mb="0" cb="0"/><line nr="659" mi="0" ci="1" mb="0" cb="0"/><line nr="660" mi="0" ci="1" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="1" cb="1"/><line nr="662" mi="16" ci="0" mb="0" cb="0"/><line nr="664" mi="0" ci="4" mb="1" cb="1"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="2"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="668" mi="0" ci="2" mb="1" cb="1"/><line nr="669" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="2" mb="0" cb="2"/><line nr="675" mi="0" ci="3" mb="1" cb="1"/><line nr="676" mi="3" ci="0" mb="0" cb="0"/><line nr="677" mi="0" ci="3" mb="0" cb="2"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="679" mi="0" ci="2" mb="1" cb="1"/><line nr="680" mi="2" ci="0" mb="0" cb="0"/><line nr="681" mi="0" ci="5" mb="1" cb="1"/><line nr="682" mi="0" ci="2" mb="0" cb="0"/><line nr="684" mi="5" ci="0" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="691" mi="11" ci="0" mb="0" cb="0"/><line nr="695" mi="4" ci="0" mb="0" cb="0"/><line nr="704" mi="15" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="0" cb="0"/><line nr="709" mi="3" ci="0" mb="0" cb="0"/><line nr="711" mi="15" ci="0" mb="0" cb="0"/><line nr="712" mi="6" ci="0" mb="0" cb="0"/><line nr="714" mi="3" ci="0" mb="0" cb="0"/><line nr="720" mi="3" ci="0" mb="0" cb="0"/><line nr="727" mi="0" ci="4" mb="1" cb="1"/><line nr="728" mi="12" ci="0" mb="0" cb="0"/><line nr="730" mi="0" ci="4" mb="1" cb="1"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="733" mi="0" ci="4" mb="0" cb="0"/><line nr="734" mi="0" ci="12" mb="1" cb="3"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="0"/><line nr="742" mi="0" ci="5" mb="0" cb="0"/><line nr="746" mi="5" ci="0" mb="0" cb="0"/><line nr="750" mi="3" ci="0" mb="0" cb="0"/><line nr="751" mi="2" ci="0" mb="0" cb="0"/><line nr="752" mi="2" ci="0" mb="0" cb="0"/><line nr="760" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="3" ci="0" mb="0" cb="0"/><line nr="762" mi="1" ci="0" mb="0" cb="0"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="771" mi="12" ci="0" mb="0" cb="0"/><line nr="780" mi="0" ci="3" mb="0" cb="2"/><line nr="781" mi="0" ci="6" mb="0" cb="0"/><line nr="782" mi="0" ci="1" mb="0" cb="0"/><line nr="783" mi="0" ci="2" mb="0" cb="0"/><line nr="785" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="296" covered="634"/><counter type="BRANCH" missed="20" covered="48"/><counter type="LINE" missed="50" covered="154"/><counter type="COMPLEXITY" missed="43" covered="57"/><counter type="METHOD" missed="25" covered="40"/><counter type="CLASS" missed="6" covered="15"/></sourcefile><sourcefile name="Objects.java"><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SysExits.java"><line nr="45" mi="0" ci="219" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="16" mb="0" cb="2"/><line nr="198" mi="0" ci="6" mb="1" cb="1"/><line nr="199" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="7" ci="0" mb="2" cb="0"/><line nr="220" mi="7" ci="0" mb="2" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="1" cb="1"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="650"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="68"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnicodeUnescaper.java"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="1" cb="5"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="4" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="4" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="13" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="25"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="15" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Reflections.java"><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="1" cb="1"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="2"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="1" cb="1"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="1" cb="1"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="7" ci="0" mb="4" cb="0"/><line nr="220" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="2" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="12" ci="0" mb="4" cb="0"/><line nr="240" mi="18" ci="0" mb="2" cb="0"/><line nr="241" mi="5" ci="0" mb="2" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="14" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="17" ci="0" mb="2" cb="0"/><line nr="268" mi="6" ci="0" mb="2" cb="0"/><line nr="269" mi="3" ci="0" mb="2" cb="0"/><line nr="270" mi="3" ci="0" mb="2" cb="0"/><line nr="271" mi="12" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="17" mb="0" cb="2"/><line nr="301" mi="0" ci="6" mb="0" cb="2"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="17" mb="0" cb="2"/><line nr="316" mi="0" ci="5" mb="0" cb="2"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="16" mb="1" cb="1"/><line nr="343" mi="0" ci="5" mb="0" cb="2"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="2"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="2"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="1" cb="3"/><line nr="359" mi="0" ci="3" mb="1" cb="1"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="2"/><line nr="363" mi="0" ci="6" mb="1" cb="1"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="8" mb="0" cb="4"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="2"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="2"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="2" cb="0"/><line nr="391" mi="2" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="395" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="5" ci="0" mb="0" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="2" ci="0" mb="2" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="408" mi="9" ci="0" mb="2" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="2" cb="0"/><line nr="411" mi="5" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="5" ci="0" mb="0" cb="0"/><line nr="414" mi="7" ci="0" mb="2" cb="0"/><line nr="415" mi="8" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="6" ci="0" mb="0" cb="0"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="425" mi="6" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="431" mi="0" ci="4" mb="0" cb="2"/><line nr="432" mi="0" ci="3" mb="0" cb="2"/><line nr="433" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="1" cb="1"/><line nr="436" mi="8" ci="0" mb="0" cb="0"/><line nr="438" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="10" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="1" cb="1"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="1" cb="1"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="1" cb="1"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="6" mb="1" cb="1"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="489" mi="0" ci="6" mb="0" cb="0"/><line nr="491" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="20" ci="0" mb="0" cb="0"/><line nr="498" mi="5" ci="0" mb="0" cb="0"/><line nr="503" mi="0" ci="8" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="8" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="1" cb="1"/><line nr="510" mi="2" ci="0" mb="0" cb="0"/><line nr="512" mi="0" ci="16" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="13" mb="0" cb="0"/><line nr="530" mi="0" ci="9" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="8" ci="0" mb="0" cb="0"/><line nr="542" mi="10" ci="0" mb="0" cb="0"/><line nr="556" mi="8" ci="0" mb="0" cb="0"/><line nr="557" mi="5" ci="0" mb="0" cb="0"/><line nr="570" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="16" mb="0" cb="2"/><line nr="573" mi="0" ci="7" mb="0" cb="0"/><line nr="574" mi="0" ci="6" mb="2" cb="2"/><line nr="575" mi="16" ci="0" mb="0" cb="0"/><line nr="577" mi="0" ci="5" mb="0" cb="0"/><line nr="580" mi="0" ci="12" mb="0" cb="0"/><line nr="581" mi="0" ci="8" mb="0" cb="0"/><line nr="586" mi="3" ci="0" mb="0" cb="0"/><line nr="587" mi="6" ci="0" mb="0" cb="0"/><line nr="588" mi="3" ci="0" mb="0" cb="0"/><line nr="589" mi="16" ci="0" mb="2" cb="0"/><line nr="590" mi="7" ci="0" mb="0" cb="0"/><line nr="591" mi="2" ci="0" mb="2" cb="0"/><line nr="592" mi="16" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="13" ci="0" mb="0" cb="0"/><line nr="600" mi="8" ci="0" mb="0" cb="0"/><line nr="607" mi="5" ci="0" mb="0" cb="0"/><line nr="608" mi="1" ci="0" mb="0" cb="0"/><line nr="609" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="1" ci="0" mb="0" cb="0"/><line nr="611" mi="5" ci="0" mb="0" cb="0"/><line nr="623" mi="5" ci="0" mb="0" cb="0"/><line nr="624" mi="2" ci="0" mb="2" cb="0"/><line nr="625" mi="3" ci="0" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="639" mi="5" ci="0" mb="0" cb="0"/><line nr="640" mi="2" ci="0" mb="2" cb="0"/><line nr="641" mi="5" ci="0" mb="0" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="648" mi="3" ci="0" mb="0" cb="0"/><line nr="649" mi="3" ci="0" mb="0" cb="0"/><line nr="650" mi="2" ci="0" mb="2" cb="0"/><line nr="651" mi="3" ci="0" mb="0" cb="0"/><line nr="653" mi="6" ci="0" mb="0" cb="0"/><line nr="654" mi="16" ci="0" mb="2" cb="0"/><line nr="655" mi="4" ci="0" mb="0" cb="0"/><line nr="657" mi="5" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="0" cb="0"/><line nr="665" mi="4" ci="0" mb="0" cb="0"/><line nr="666" mi="5" ci="0" mb="4" cb="0"/><line nr="667" mi="5" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="675" mi="3" ci="0" mb="0" cb="0"/><line nr="676" mi="3" ci="0" mb="0" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="678" mi="3" ci="0" mb="0" cb="0"/><line nr="679" mi="2" ci="0" mb="2" cb="0"/><line nr="680" mi="4" ci="0" mb="0" cb="0"/><line nr="681" mi="2" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="2" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="686" mi="17" ci="0" mb="2" cb="0"/><line nr="687" mi="6" ci="0" mb="0" cb="0"/><line nr="688" mi="2" ci="0" mb="2" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="693" mi="2" ci="0" mb="0" cb="0"/><line nr="700" mi="5" ci="0" mb="0" cb="0"/><line nr="701" mi="2" ci="0" mb="2" cb="0"/><line nr="702" mi="2" ci="0" mb="0" cb="0"/><line nr="704" mi="4" ci="0" mb="0" cb="0"/><line nr="705" mi="2" ci="0" mb="2" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="670" covered="559"/><counter type="BRANCH" missed="76" covered="54"/><counter type="LINE" missed="146" covered="129"/><counter type="COMPLEXITY" missed="68" covered="46"/><counter type="METHOD" missed="22" covered="27"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="Throwables.java"><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="1" cb="5"/><line nr="128" mi="0" ci="5" mb="1" cb="1"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="4"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="1" cb="1"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="2" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="2" cb="4"/><line nr="173" mi="0" ci="7" mb="1" cb="3"/><line nr="175" mi="2" ci="2" mb="1" cb="1"/><line nr="176" mi="2" ci="3" mb="2" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="2"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="1" cb="1"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="1" cb="1"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="0" cb="2"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="2" cb="2"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="4" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="16" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="1" cb="1"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="1" cb="1"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="13" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="2"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="1" cb="1"/><line nr="365" mi="0" ci="18" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="2"/><line nr="406" mi="0" ci="10" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="2"/><line nr="413" mi="0" ci="3" mb="1" cb="1"/><line nr="414" mi="12" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="4" mb="1" cb="1"/><line nr="432" mi="2" ci="0" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="2"/><line nr="436" mi="0" ci="3" mb="1" cb="1"/><line nr="437" mi="12" ci="0" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="2"/><line nr="458" mi="0" ci="7" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="2"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="1" cb="1"/><line nr="465" mi="0" ci="5" mb="0" cb="2"/><line nr="466" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="6" ci="11" mb="1" cb="1"/><line nr="475" mi="4" ci="0" mb="2" cb="0"/><line nr="476" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="7" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="7" mb="0" cb="2"/><line nr="493" mi="0" ci="2" mb="1" cb="1"/><line nr="494" mi="0" ci="4" mb="0" cb="2"/><line nr="495" mi="0" ci="5" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="500" mi="4" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="10" mb="1" cb="5"/><line nr="507" mi="0" ci="1" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="2"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="0" ci="2" mb="0" cb="2"/><line nr="514" mi="0" ci="5" mb="0" cb="0"/><line nr="515" mi="0" ci="2" mb="0" cb="2"/><line nr="516" mi="0" ci="8" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="519" mi="0" ci="8" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="2"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="6" mb="1" cb="3"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="526" mi="0" ci="1" mb="0" cb="0"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="529" mi="0" ci="9" mb="1" cb="5"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="8" mb="0" cb="4"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="4" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="2"/><line nr="538" mi="0" ci="3" mb="1" cb="1"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="4" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="1" cb="1"/><line nr="542" mi="0" ci="5" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="0" cb="2"/><line nr="544" mi="0" ci="7" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="1" cb="1"/><line nr="546" mi="5" ci="0" mb="0" cb="0"/><line nr="548" mi="0" ci="9" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="551" mi="0" ci="9" mb="0" cb="0"/><line nr="553" mi="0" ci="1" mb="0" cb="0"/><line nr="554" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="557" mi="5" ci="0" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="2"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="4" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="0"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="573" mi="0" ci="16" mb="0" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="6" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="590" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="5" ci="0" mb="0" cb="0"/><line nr="599" mi="3" ci="0" mb="0" cb="0"/><line nr="603" mi="5" ci="0" mb="0" cb="0"/><line nr="608" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="5" ci="0" mb="0" cb="0"/><line nr="611" mi="1" ci="0" mb="0" cb="0"/><line nr="612" mi="5" ci="0" mb="0" cb="0"/><line nr="613" mi="1" ci="0" mb="0" cb="0"/><line nr="614" mi="2" ci="0" mb="0" cb="0"/><line nr="619" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="1" ci="0" mb="0" cb="0"/><line nr="630" mi="5" ci="0" mb="0" cb="0"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="632" mi="0" ci="1" mb="0" cb="0"/><line nr="635" mi="0" ci="5" mb="0" cb="0"/><line nr="636" mi="0" ci="1" mb="0" cb="0"/><line nr="640" mi="6" ci="0" mb="0" cb="0"/><line nr="641" mi="1" ci="0" mb="0" cb="0"/><line nr="645" mi="0" ci="6" mb="0" cb="0"/><line nr="646" mi="0" ci="1" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="1" cb="1"/><line nr="651" mi="7" ci="0" mb="0" cb="0"/><line nr="652" mi="1" ci="0" mb="0" cb="0"/><line nr="654" mi="0" ci="4" mb="0" cb="0"/><line nr="655" mi="0" ci="3" mb="0" cb="0"/><line nr="656" mi="0" ci="4" mb="0" cb="0"/><line nr="657" mi="0" ci="6" mb="0" cb="0"/><line nr="658" mi="0" ci="1" mb="0" cb="0"/><line nr="662" mi="0" ci="3" mb="0" cb="0"/><line nr="663" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="5" mb="0" cb="4"/><line nr="667" mi="0" ci="1" mb="0" cb="0"/><line nr="669" mi="0" ci="4" mb="0" cb="0"/><line nr="670" mi="0" ci="4" mb="0" cb="0"/><line nr="672" mi="0" ci="16" mb="0" cb="2"/><line nr="673" mi="0" ci="16" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="2"/><line nr="678" mi="0" ci="9" mb="0" cb="0"/><line nr="680" mi="0" ci="1" mb="0" cb="0"/><line nr="683" mi="0" ci="6" mb="0" cb="0"/><line nr="684" mi="0" ci="3" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="2"/><line nr="686" mi="0" ci="6" mb="0" cb="0"/><line nr="688" mi="0" ci="1" mb="0" cb="0"/><line nr="693" mi="6" ci="0" mb="0" cb="0"/><line nr="694" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="0" ci="2" mb="0" cb="0"/><line nr="700" mi="0" ci="16" mb="0" cb="2"/><line nr="701" mi="0" ci="4" mb="0" cb="0"/><line nr="702" mi="0" ci="4" mb="0" cb="0"/><line nr="703" mi="0" ci="6" mb="0" cb="0"/><line nr="704" mi="0" ci="4" mb="0" cb="0"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="710" mi="0" ci="5" mb="0" cb="0"/><line nr="711" mi="0" ci="2" mb="0" cb="0"/><line nr="712" mi="0" ci="5" mb="0" cb="0"/><line nr="713" mi="0" ci="12" mb="1" cb="5"/><line nr="714" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><line nr="717" mi="0" ci="4" mb="0" cb="0"/><line nr="727" mi="0" ci="4" mb="0" cb="2"/><line nr="728" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="3" mb="0" cb="0"/><line nr="730" mi="0" ci="5" mb="0" cb="0"/><line nr="732" mi="0" ci="4" mb="0" cb="0"/><line nr="734" mi="0" ci="3" mb="0" cb="0"/><line nr="735" mi="0" ci="4" mb="0" cb="0"/><line nr="736" mi="0" ci="5" mb="0" cb="0"/><line nr="738" mi="0" ci="6" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="4" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="0"/><line nr="742" mi="0" ci="7" mb="0" cb="2"/><line nr="743" mi="0" ci="6" mb="0" cb="0"/><line nr="744" mi="0" ci="4" mb="0" cb="0"/><line nr="745" mi="0" ci="6" mb="0" cb="0"/><line nr="746" mi="0" ci="4" mb="0" cb="0"/><line nr="747" mi="0" ci="2" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="2"/><line nr="750" mi="0" ci="11" mb="0" cb="0"/><line nr="751" mi="0" ci="4" mb="0" cb="0"/><line nr="755" mi="0" ci="17" mb="0" cb="2"/><line nr="756" mi="0" ci="16" mb="0" cb="0"/><line nr="761" mi="0" ci="3" mb="0" cb="0"/><line nr="762" mi="0" ci="2" mb="0" cb="2"/><line nr="763" mi="0" ci="9" mb="0" cb="0"/><line nr="767" mi="0" ci="1" mb="0" cb="0"/><line nr="775" mi="4" ci="0" mb="0" cb="0"/><line nr="784" mi="0" ci="4" mb="0" cb="0"/><line nr="795" mi="0" ci="8" mb="0" cb="2"/><line nr="807" mi="0" ci="16" mb="0" cb="4"/><line nr="820" mi="0" ci="10" mb="0" cb="0"/><line nr="833" mi="0" ci="4" mb="0" cb="2"/><line nr="834" mi="0" ci="2" mb="0" cb="0"/><line nr="836" mi="0" ci="4" mb="0" cb="0"/><line nr="837" mi="0" ci="3" mb="0" cb="0"/><line nr="838" mi="0" ci="2" mb="0" cb="2"/><line nr="839" mi="0" ci="3" mb="0" cb="0"/><line nr="841" mi="0" ci="17" mb="0" cb="2"/><line nr="842" mi="0" ci="3" mb="0" cb="0"/><line nr="845" mi="0" ci="4" mb="0" cb="0"/><line nr="846" mi="0" ci="6" mb="0" cb="2"/><line nr="847" mi="0" ci="4" mb="1" cb="1"/><line nr="848" mi="1" ci="0" mb="0" cb="0"/><line nr="850" mi="0" ci="4" mb="0" cb="2"/><line nr="851" mi="0" ci="2" mb="0" cb="0"/><line nr="853" mi="0" ci="3" mb="0" cb="0"/><line nr="854" mi="0" ci="2" mb="0" cb="2"/><line nr="855" mi="0" ci="3" mb="0" cb="0"/><line nr="857" mi="0" ci="17" mb="0" cb="2"/><line nr="858" mi="0" ci="3" mb="0" cb="0"/><line nr="861" mi="0" ci="5" mb="0" cb="0"/><line nr="863" mi="0" ci="2" mb="0" cb="0"/><line nr="877" mi="0" ci="2" mb="0" cb="0"/><line nr="879" mi="0" ci="4" mb="0" cb="2"/><line nr="880" mi="0" ci="2" mb="0" cb="0"/><line nr="882" mi="0" ci="3" mb="0" cb="0"/><line nr="883" mi="0" ci="2" mb="0" cb="2"/><line nr="884" mi="0" ci="2" mb="0" cb="0"/><line nr="889" mi="2" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="0" cb="0"/><line nr="898" mi="1" ci="0" mb="0" cb="0"/><line nr="901" mi="0" ci="4" mb="0" cb="0"/><line nr="902" mi="0" ci="2" mb="0" cb="2"/><line nr="903" mi="0" ci="4" mb="0" cb="0"/><line nr="904" mi="0" ci="1" mb="0" cb="0"/><line nr="906" mi="0" ci="2" mb="0" cb="0"/><line nr="907" mi="0" ci="7" mb="0" cb="2"/><line nr="908" mi="0" ci="4" mb="0" cb="0"/><line nr="909" mi="0" ci="7" mb="0" cb="2"/><line nr="910" mi="0" ci="4" mb="0" cb="4"/><line nr="911" mi="0" ci="4" mb="0" cb="0"/><line nr="913" mi="0" ci="2" mb="0" cb="0"/><line nr="915" mi="0" ci="7" mb="0" cb="0"/><line nr="916" mi="0" ci="1" mb="0" cb="0"/><line nr="921" mi="3" ci="0" mb="2" cb="0"/><line nr="922" mi="3" ci="0" mb="0" cb="0"/><line nr="923" mi="3" ci="0" mb="2" cb="0"/><line nr="924" mi="3" ci="0" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="2" cb="0"/><line nr="926" mi="3" ci="0" mb="0" cb="0"/><line nr="927" mi="3" ci="0" mb="2" cb="0"/><line nr="928" mi="3" ci="0" mb="0" cb="0"/><line nr="930" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="1279"/><counter type="BRANCH" missed="48" covered="160"/><counter type="LINE" missed="84" covered="305"/><counter type="COMPLEXITY" missed="55" covered="113"/><counter type="METHOD" missed="15" covered="49"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="OctalUnescaper.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="15" mb="1" cb="5"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="9" ci="0" mb="4" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="15" ci="0" mb="6" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="2" ci="8" mb="2" cb="2"/><line nr="100" mi="10" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="81" covered="35"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="12" covered="5"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Holder.java"><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XCollectors.java"><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="17" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="11" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="147"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="7" covered="35"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Comparables.java"><line nr="46" mi="0" ci="3" mb="1" cb="1"/><line nr="47" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="61" mi="13" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="6" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="6" mb="1" cb="1"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="6" ci="6" mb="3" cb="1"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="4"/><line nr="97" mi="0" ci="5" mb="1" cb="3"/><line nr="98" mi="7" ci="0" mb="2" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="4"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="140"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="7" covered="38"/><counter type="COMPLEXITY" missed="12" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Json.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="4" ci="6" mb="1" cb="1"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="87"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="9" covered="23"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="InstrumentationHelper.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Strings.java"><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="68" mb="0" cb="0"/><line nr="87" mi="0" ci="85" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="16" ci="0" mb="2" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="1" cb="1"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="2"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="17" mb="0" cb="2"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="9" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="2" cb="2"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="13" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="17" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="1" cb="1"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="1" cb="1"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="1" cb="1"/><line nr="279" mi="0" ci="4" mb="1" cb="1"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="1" cb="1"/><line nr="296" mi="6" ci="0" mb="0" cb="0"/><line nr="297" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="1" cb="1"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="1" cb="1"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="8" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="1" cb="1"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="1" cb="1"/><line nr="343" mi="0" ci="8" mb="0" cb="0"/><line nr="345" mi="3" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="6" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="2" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="2" cb="0"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="6" ci="0" mb="0" cb="0"/><line nr="359" mi="1" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="1" cb="1"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="8" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="1" cb="1"/><line nr="372" mi="0" ci="8" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="5" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="6" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="2" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="2" cb="0"/><line nr="385" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="8" ci="0" mb="0" cb="0"/><line nr="406" mi="0" ci="9" mb="0" cb="0"/><line nr="410" mi="0" ci="8" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="9" mb="0" cb="0"/><line nr="434" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="3" ci="0" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="1" ci="0" mb="0" cb="0"/><line nr="491" mi="0" ci="4" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="498" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="504" mi="1" ci="0" mb="0" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="1" ci="0" mb="0" cb="0"/><line nr="522" mi="7" ci="0" mb="0" cb="0"/><line nr="526" mi="4" ci="0" mb="2" cb="0"/><line nr="527" mi="5" ci="0" mb="0" cb="0"/><line nr="529" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="2" cb="0"/><line nr="536" mi="13" ci="0" mb="0" cb="0"/><line nr="538" mi="4" ci="0" mb="0" cb="0"/><line nr="539" mi="8" ci="0" mb="2" cb="0"/><line nr="540" mi="6" ci="0" mb="0" cb="0"/><line nr="542" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="356" covered="485"/><counter type="BRANCH" missed="33" covered="21"/><counter type="LINE" missed="102" covered="80"/><counter type="COMPLEXITY" missed="41" covered="32"/><counter type="METHOD" missed="17" covered="29"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="CharSequenceTranslator.java"><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="1" cb="1"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="12" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="1" cb="1"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="70"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayBuilder.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="18" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="71"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RemoteException.java"><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Closeables.java"><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="16" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="16" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="10" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="2" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="2" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="78"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="36" covered="22"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparablePair.java"><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="7"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Methods.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="12" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="2"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="1" cb="1"/><line nr="118" mi="12" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="127"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BasicExecutionContext.java"><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="1" cb="1"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="1" ci="6" mb="1" cb="1"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="1" cb="1"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="2" cb="4"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="2" cb="4"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="10" ci="0" mb="6" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="8" ci="0" mb="6" cb="0"/><line nr="190" mi="10" ci="0" mb="2" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="2"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="1" cb="1"/><line nr="221" mi="0" ci="3" mb="1" cb="1"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="10" mb="0" cb="2"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="2" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="2"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="12" mb="0" cb="2"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="1" cb="1"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="7" ci="3" mb="3" cb="1"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="11" ci="0" mb="2" cb="0"/><line nr="253" mi="2" ci="0" mb="2" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="17" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="12" ci="0" mb="2" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="2" cb="0"/><line nr="262" mi="2" ci="0" mb="2" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="16" ci="0" mb="0" cb="0"/><line nr="266" mi="6" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="1" cb="1"/><line nr="272" mi="3" ci="0" mb="2" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="7" ci="0" mb="2" cb="0"/><line nr="293" mi="0" ci="3" mb="1" cb="1"/><line nr="294" mi="13" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="7" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="7" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="1" cb="1"/><line nr="333" mi="3" ci="0" mb="2" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="1" cb="1"/><line nr="341" mi="0" ci="6" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="1" cb="1"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="2"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="1" cb="1"/><line nr="361" mi="3" ci="0" mb="2" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="2"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="1" cb="1"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="2" ci="5" mb="1" cb="1"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="1" cb="1"/><line nr="387" mi="0" ci="11" mb="0" cb="2"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="8" mb="0" cb="0"/><line nr="443" mi="1" ci="0" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="2" ci="0" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="295" covered="392"/><counter type="BRANCH" missed="59" covered="43"/><counter type="LINE" missed="69" covered="107"/><counter type="COMPLEXITY" missed="48" covered="35"/><counter type="METHOD" missed="8" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntMath.java"><line nr="45" mi="2" ci="9" mb="1" cb="1"/><line nr="49" mi="13" ci="0" mb="2" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="122" mi="0" ci="15" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="99"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="8" covered="17"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="3" covered="3"/></sourcefile><sourcefile name="CloneFailedException.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CoreTextMediaType.java"><line nr="37" mi="0" ci="12" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="51"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutableHolder.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="12" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="1" cb="1"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="1" cb="1"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="65"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="13" covered="21"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LookupTranslator.java"><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="0" ci="16" mb="0" cb="2"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="22" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="8" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="110"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="17" covered="26"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateTimeFormats.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Slf4jMessageFormatter.java"><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="1" cb="1"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="8" ci="0" mb="0" cb="0"/><line nr="199" mi="10" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="2"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="11" mb="0" cb="2"/><line nr="223" mi="9" ci="5" mb="3" cb="1"/><line nr="230" mi="0" ci="2" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="2"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="1" cb="1"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="1" cb="1"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="2"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="2"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="1" cb="1"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="1" cb="1"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="8" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="2"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="2"/><line nr="280" mi="0" ci="8" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="2" cb="0"/><line nr="298" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="7" ci="0" mb="2" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="7" ci="0" mb="0" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="1" cb="1"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="2"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="2" ci="0" mb="2" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="2" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="327" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="2" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="338" mi="7" ci="0" mb="2" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="7" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="1" cb="1"/><line nr="350" mi="0" ci="7" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="2"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="1" cb="1"/><line nr="363" mi="0" ci="7" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="2"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="7" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="3" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="2" cb="0"/><line nr="376" mi="7" ci="0" mb="0" cb="0"/><line nr="377" mi="7" ci="0" mb="2" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="7" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="388" mi="2" ci="0" mb="2" cb="0"/><line nr="389" mi="7" ci="0" mb="0" cb="0"/><line nr="390" mi="7" ci="0" mb="2" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="7" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="345" covered="372"/><counter type="BRANCH" missed="34" covered="42"/><counter type="LINE" missed="74" covered="88"/><counter type="COMPLEXITY" missed="30" covered="28"/><counter type="METHOD" missed="8" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Runtime.java"><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="1" cb="1"/><line nr="130" mi="11" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="5" ci="9" mb="1" cb="1"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="1" cb="1"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="56" mb="0" cb="0"/><line nr="155" mi="0" ci="78" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="1" cb="1"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="2" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="12" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="2" cb="0"/><line nr="233" mi="11" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="2" cb="0"/><line nr="241" mi="11" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="2" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="2" cb="0"/><line nr="253" mi="11" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="2" cb="0"/><line nr="263" mi="11" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="12" ci="0" mb="4" cb="0"/><line nr="275" mi="15" ci="0" mb="4" cb="0"/><line nr="277" mi="11" ci="0" mb="4" cb="0"/><line nr="278" mi="11" ci="0" mb="2" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="2" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="10" ci="0" mb="0" cb="0"/><line nr="331" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="6" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="9" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="365" mi="16" ci="0" mb="2" cb="0"/><line nr="366" mi="2" ci="0" mb="2" cb="0"/><line nr="367" mi="16" ci="0" mb="2" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="8" ci="0" mb="4" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="5" ci="0" mb="0" cb="0"/><line nr="458" mi="6" ci="0" mb="0" cb="0"/><line nr="469" mi="9" ci="0" mb="0" cb="0"/><line nr="470" mi="6" ci="0" mb="0" cb="0"/><line nr="474" mi="5" ci="0" mb="0" cb="0"/><line nr="476" mi="6" ci="0" mb="2" cb="0"/><line nr="477" mi="6" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="0" cb="0"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="491" mi="6" ci="0" mb="2" cb="0"/><line nr="492" mi="6" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="5" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="2"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="5" mb="0" cb="0"/><line nr="522" mi="0" ci="4" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="5" ci="0" mb="2" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="4" ci="0" mb="0" cb="0"/><line nr="531" mi="11" ci="0" mb="2" cb="0"/><line nr="532" mi="4" ci="0" mb="2" cb="0"/><line nr="533" mi="4" ci="0" mb="0" cb="0"/><line nr="535" mi="1" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="0" cb="0"/><line nr="537" mi="2" ci="0" mb="0" cb="0"/><line nr="546" mi="4" ci="0" mb="0" cb="0"/><line nr="555" mi="3" ci="0" mb="0" cb="0"/><line nr="566" mi="0" ci="7" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="4" ci="3" mb="3" cb="1"/><line nr="571" mi="1" ci="6" mb="1" cb="1"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="7" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="1" cb="1"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="4" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="595" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="2" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="2" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="604" mi="4" ci="0" mb="0" cb="0"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="608" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="0" ci="15" mb="0" cb="0"/><line nr="615" mi="0" ci="33" mb="0" cb="0"/><line nr="617" mi="0" ci="7" mb="0" cb="0"/><line nr="619" mi="0" ci="4" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="0" ci="7" mb="0" cb="0"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><line nr="638" mi="15" ci="0" mb="0" cb="0"/><line nr="639" mi="33" ci="0" mb="0" cb="0"/><line nr="641" mi="7" ci="0" mb="0" cb="0"/><line nr="643" mi="3" ci="0" mb="0" cb="0"/><line nr="644" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="0" ci="2" mb="0" cb="0"/><line nr="653" mi="0" ci="16" mb="1" cb="1"/><line nr="654" mi="0" ci="5" mb="0" cb="2"/><line nr="655" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="0" cb="0"/><line nr="668" mi="0" ci="2" mb="0" cb="0"/><line nr="673" mi="0" ci="3" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="1" cb="1"/><line nr="679" mi="2" ci="0" mb="0" cb="0"/><line nr="681" mi="0" ci="3" mb="0" cb="0"/><line nr="682" mi="0" ci="3" mb="1" cb="1"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="685" mi="0" ci="8" mb="0" cb="0"/><line nr="687" mi="0" ci="3" mb="0" cb="0"/><line nr="688" mi="1" ci="0" mb="0" cb="0"/><line nr="689" mi="12" ci="0" mb="0" cb="0"/><line nr="690" mi="4" ci="0" mb="0" cb="0"/><line nr="691" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="3" ci="0" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="1" ci="0" mb="0" cb="0"/><line nr="707" mi="1" ci="0" mb="0" cb="0"/><line nr="716" mi="0" ci="3" mb="0" cb="0"/><line nr="717" mi="0" ci="3" mb="0" cb="0"/><line nr="718" mi="0" ci="1" mb="0" cb="0"/><line nr="722" mi="0" ci="2" mb="0" cb="0"/><line nr="724" mi="0" ci="4" mb="0" cb="0"/><line nr="725" mi="0" ci="5" mb="0" cb="0"/><line nr="726" mi="0" ci="11" mb="0" cb="2"/><line nr="727" mi="0" ci="9" mb="0" cb="0"/><line nr="728" mi="0" ci="1" mb="0" cb="0"/><line nr="729" mi="0" ci="3" mb="0" cb="0"/><line nr="730" mi="0" ci="11" mb="0" cb="2"/><line nr="731" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="4" mb="0" cb="2"/><line nr="733" mi="0" ci="10" mb="0" cb="2"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="736" mi="1" ci="0" mb="0" cb="0"/><line nr="737" mi="2" ci="0" mb="2" cb="0"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="740" mi="3" ci="0" mb="0" cb="0"/><line nr="742" mi="0" ci="1" mb="0" cb="0"/><line nr="743" mi="0" ci="2" mb="0" cb="0"/><line nr="744" mi="0" ci="6" mb="0" cb="2"/><line nr="745" mi="0" ci="4" mb="0" cb="0"/><line nr="746" mi="0" ci="2" mb="0" cb="0"/><line nr="747" mi="0" ci="10" mb="0" cb="2"/><line nr="748" mi="0" ci="5" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="751" mi="0" ci="1" mb="0" cb="0"/><line nr="752" mi="0" ci="4" mb="0" cb="0"/><line nr="753" mi="0" ci="16" mb="0" cb="2"/><line nr="755" mi="0" ci="7" mb="0" cb="0"/><line nr="756" mi="1" ci="0" mb="0" cb="0"/><line nr="757" mi="2" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="2" cb="0"/><line nr="759" mi="3" ci="0" mb="0" cb="0"/><line nr="761" mi="3" ci="0" mb="0" cb="0"/><line nr="763" mi="1" ci="0" mb="0" cb="0"/><line nr="764" mi="0" ci="1" mb="0" cb="0"/><line nr="766" mi="0" ci="1" mb="0" cb="0"/><line nr="767" mi="0" ci="6" mb="0" cb="0"/><line nr="768" mi="0" ci="10" mb="0" cb="2"/><line nr="769" mi="0" ci="6" mb="0" cb="0"/><line nr="770" mi="0" ci="1" mb="0" cb="0"/><line nr="771" mi="0" ci="10" mb="1" cb="1"/><line nr="773" mi="0" ci="3" mb="0" cb="0"/><line nr="774" mi="1" ci="0" mb="0" cb="0"/><line nr="775" mi="2" ci="0" mb="0" cb="0"/><line nr="776" mi="2" ci="0" mb="2" cb="0"/><line nr="777" mi="3" ci="0" mb="0" cb="0"/><line nr="779" mi="3" ci="0" mb="0" cb="0"/><line nr="781" mi="1" ci="0" mb="0" cb="0"/><line nr="782" mi="1" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="2" cb="0"/><line nr="784" mi="3" ci="0" mb="0" cb="0"/><line nr="786" mi="3" ci="0" mb="0" cb="0"/><line nr="788" mi="0" ci="1" mb="0" cb="0"/><line nr="789" mi="0" ci="1" mb="0" cb="0"/><line nr="791" mi="0" ci="1" mb="0" cb="0"/><line nr="793" mi="0" ci="3" mb="1" cb="1"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="795" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="2" ci="0" mb="0" cb="0"/><line nr="797" mi="16" ci="0" mb="2" cb="0"/><line nr="798" mi="11" ci="0" mb="6" cb="0"/><line nr="799" mi="4" ci="0" mb="2" cb="0"/><line nr="800" mi="2" ci="0" mb="2" cb="0"/><line nr="801" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="2" ci="0" mb="0" cb="0"/><line nr="804" mi="11" ci="0" mb="0" cb="0"/><line nr="805" mi="4" ci="0" mb="0" cb="0"/><line nr="809" mi="0" ci="2" mb="1" cb="1"/><line nr="810" mi="2" ci="0" mb="0" cb="0"/><line nr="812" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="729" covered="730"/><counter type="BRANCH" missed="88" covered="34"/><counter type="LINE" missed="170" covered="143"/><counter type="COMPLEXITY" missed="76" covered="37"/><counter type="METHOD" missed="25" covered="27"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="AbstractRunnable.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="62"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionContexts.java"><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="3" ci="9" mb="1" cb="1"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="3" ci="10" mb="1" cb="1"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="10" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="1" cb="1"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="1" cb="1"/><line nr="297" mi="17" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="4" ci="0" mb="2" cb="0"/><line nr="306" mi="17" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="2" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="2" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="9" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="2"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="2" ci="10" mb="1" cb="1"/><line nr="366" mi="0" ci="2" mb="0" cb="2"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="12" mb="0" cb="2"/><line nr="384" mi="2" ci="0" mb="2" cb="0"/><line nr="385" mi="8" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="7" ci="0" mb="2" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="10" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="8" ci="0" mb="2" cb="0"/><line nr="413" mi="6" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="8" ci="0" mb="2" cb="0"/><line nr="425" mi="8" ci="0" mb="0" cb="0"/><line nr="426" mi="6" ci="0" mb="0" cb="0"/><line nr="427" mi="9" ci="0" mb="0" cb="0"/><line nr="433" mi="9" ci="0" mb="0" cb="0"/><line nr="434" mi="8" ci="0" mb="0" cb="0"/><line nr="435" mi="9" ci="0" mb="0" cb="0"/><line nr="440" mi="8" ci="0" mb="0" cb="0"/><line nr="444" mi="0" ci="2" mb="0" cb="0"/><line nr="445" mi="0" ci="8" mb="0" cb="2"/><line nr="449" mi="0" ci="9" mb="0" cb="0"/><line nr="454" mi="8" ci="0" mb="0" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="463" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="1" ci="0" mb="0" cb="0"/><line nr="469" mi="9" ci="0" mb="0" cb="0"/><line nr="470" mi="6" ci="0" mb="0" cb="0"/><line nr="477" mi="8" ci="0" mb="0" cb="0"/><line nr="491" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="3" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="1" ci="0" mb="0" cb="0"/><line nr="500" mi="10" ci="0" mb="0" cb="0"/><line nr="501" mi="6" ci="0" mb="0" cb="0"/><line nr="507" mi="10" ci="0" mb="2" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="8" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="534" mi="3" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="0" cb="0"/><line nr="537" mi="1" ci="0" mb="0" cb="0"/><line nr="541" mi="10" ci="0" mb="0" cb="0"/><line nr="542" mi="7" ci="0" mb="0" cb="0"/><line nr="548" mi="10" ci="0" mb="2" cb="0"/><line nr="553" mi="3" ci="0" mb="0" cb="0"/><line nr="561" mi="8" ci="0" mb="0" cb="0"/><line nr="575" mi="2" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="3" ci="0" mb="0" cb="0"/><line nr="578" mi="3" ci="0" mb="0" cb="0"/><line nr="579" mi="3" ci="0" mb="0" cb="0"/><line nr="580" mi="1" ci="0" mb="0" cb="0"/><line nr="584" mi="10" ci="0" mb="0" cb="0"/><line nr="585" mi="8" ci="0" mb="0" cb="0"/><line nr="591" mi="10" ci="0" mb="2" cb="0"/><line nr="596" mi="3" ci="0" mb="0" cb="0"/><line nr="604" mi="8" ci="0" mb="0" cb="0"/><line nr="617" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="3" ci="0" mb="0" cb="0"/><line nr="619" mi="3" ci="0" mb="0" cb="0"/><line nr="620" mi="3" ci="0" mb="0" cb="0"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="626" mi="10" ci="0" mb="0" cb="0"/><line nr="627" mi="4" ci="0" mb="0" cb="0"/><line nr="629" mi="1" ci="0" mb="0" cb="0"/><line nr="633" mi="10" ci="0" mb="2" cb="0"/><line nr="638" mi="3" ci="0" mb="0" cb="0"/><line nr="645" mi="8" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="3" ci="0" mb="0" cb="0"/><line nr="660" mi="3" ci="0" mb="0" cb="0"/><line nr="661" mi="3" ci="0" mb="0" cb="0"/><line nr="662" mi="3" ci="0" mb="0" cb="0"/><line nr="663" mi="1" ci="0" mb="0" cb="0"/><line nr="667" mi="10" ci="0" mb="0" cb="0"/><line nr="668" mi="6" ci="0" mb="0" cb="0"/><line nr="674" mi="10" ci="0" mb="2" cb="0"/><line nr="679" mi="3" ci="0" mb="0" cb="0"/><line nr="688" mi="0" ci="8" mb="0" cb="0"/><line nr="701" mi="0" ci="2" mb="0" cb="0"/><line nr="702" mi="0" ci="3" mb="0" cb="0"/><line nr="703" mi="0" ci="3" mb="0" cb="0"/><line nr="704" mi="0" ci="3" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="1" mb="0" cb="0"/><line nr="710" mi="0" ci="10" mb="0" cb="0"/><line nr="711" mi="0" ci="5" mb="0" cb="0"/><line nr="713" mi="0" ci="1" mb="0" cb="0"/><line nr="717" mi="2" ci="8" mb="1" cb="1"/><line nr="722" mi="3" ci="0" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="0"/><line nr="738" mi="0" ci="3" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="3" mb="0" cb="0"/><line nr="741" mi="0" ci="3" mb="0" cb="0"/><line nr="742" mi="0" ci="1" mb="0" cb="0"/><line nr="746" mi="0" ci="10" mb="0" cb="0"/><line nr="747" mi="0" ci="3" mb="0" cb="0"/><line nr="749" mi="0" ci="1" mb="0" cb="0"/><line nr="753" mi="3" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="8" mb="1" cb="1"/><line nr="766" mi="0" ci="2" mb="0" cb="0"/><line nr="767" mi="0" ci="4" mb="0" cb="0"/><line nr="768" mi="0" ci="4" mb="0" cb="0"/><line nr="769" mi="0" ci="8" mb="0" cb="0"/><line nr="781" mi="0" ci="2" mb="0" cb="0"/><line nr="782" mi="0" ci="3" mb="0" cb="0"/><line nr="783" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="0"/><line nr="785" mi="0" ci="3" mb="0" cb="0"/><line nr="786" mi="0" ci="1" mb="0" cb="0"/><line nr="790" mi="0" ci="2" mb="0" cb="0"/><line nr="791" mi="0" ci="4" mb="1" cb="1"/><line nr="792" mi="17" ci="0" mb="0" cb="0"/><line nr="794" mi="0" ci="5" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="1" cb="1"/><line nr="796" mi="4" ci="0" mb="0" cb="0"/><line nr="797" mi="17" ci="0" mb="0" cb="0"/><line nr="799" mi="0" ci="1" mb="0" cb="0"/><line nr="802" mi="0" ci="7" mb="0" cb="2"/><line nr="806" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="641" covered="483"/><counter type="BRANCH" missed="34" covered="26"/><counter type="LINE" missed="124" covered="113"/><counter type="COMPLEXITY" missed="76" covered="55"/><counter type="METHOD" missed="54" covered="47"/><counter type="CLASS" missed="6" covered="7"/></sourcefile><sourcefile name="Either.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="11" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="18" ci="0" mb="6" cb="0"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="13" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="13" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="74"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="11" covered="21"/><counter type="COMPLEXITY" missed="12" covered="14"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Wrapper.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="4" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Pair.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="1" cb="1"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="14" mb="1" cb="5"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="1" ci="17" mb="2" cb="4"/><line nr="129" mi="0" ci="14" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="10" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="2"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="14" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="16" mb="0" cb="2"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="207"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="9" covered="40"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CloseableIterator.java"><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="15" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ReferenceType.java"><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="5" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="45"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CallablesNano.java"><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="22" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="CloseableIterable.java"><line nr="37" mi="11" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="15" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="Version.java"><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="2"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="2"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="1" cb="3"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="2" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="1" cb="1"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="1" cb="1"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="1" cb="1"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="8" mb="1" cb="1"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="260"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="13" covered="24"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TLScratch.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="1" cb="3"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="1" cb="1"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="1" cb="3"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="97"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeSource.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="1" cb="1"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="1" cb="1"/><line nr="68" mi="16" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="16" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="17" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="55"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="11" covered="15"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Base64.java"><line nr="44" mi="2" ci="5" mb="1" cb="1"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="2" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="223" mi="0" ci="16" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="1" cb="1"/><line nr="225" mi="0" ci="16" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="2"/><line nr="228" mi="0" ci="14" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="2" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="2" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="258" mi="16" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="2" cb="0"/><line nr="260" mi="16" ci="0" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="2" cb="0"/><line nr="263" mi="14" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="2" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="6" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="2"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="0" cb="2"/><line nr="286" mi="0" ci="9" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="2"/><line nr="289" mi="0" ci="9" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="9" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="9" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="0" cb="0"/><line nr="326" mi="10" ci="0" mb="4" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="332" mi="7" ci="0" mb="2" cb="0"/><line nr="333" mi="4" ci="0" mb="3" cb="0"/><line nr="335" mi="9" ci="0" mb="0" cb="0"/><line nr="336" mi="11" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="9" ci="0" mb="0" cb="0"/><line nr="341" mi="21" ci="0" mb="0" cb="0"/><line nr="344" mi="13" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="9" ci="0" mb="0" cb="0"/><line nr="349" mi="21" ci="0" mb="0" cb="0"/><line nr="352" mi="23" ci="0" mb="0" cb="0"/><line nr="355" mi="11" ci="0" mb="0" cb="0"/><line nr="359" mi="1" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="7" mb="0" cb="2"/><line nr="378" mi="0" ci="4" mb="1" cb="2"/><line nr="380" mi="10" ci="0" mb="0" cb="0"/><line nr="381" mi="12" ci="0" mb="0" cb="0"/><line nr="382" mi="5" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="0" ci="10" mb="0" cb="0"/><line nr="387" mi="0" ci="22" mb="0" cb="0"/><line nr="390" mi="0" ci="14" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="10" mb="0" cb="0"/><line nr="395" mi="0" ci="22" mb="0" cb="0"/><line nr="398" mi="0" ci="24" mb="0" cb="0"/><line nr="401" mi="0" ci="12" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="0" cb="0"/><line nr="424" mi="2" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="7" ci="0" mb="2" cb="0"/><line nr="427" mi="4" ci="0" mb="3" cb="0"/><line nr="429" mi="10" ci="0" mb="0" cb="0"/><line nr="430" mi="12" ci="0" mb="0" cb="0"/><line nr="431" mi="5" ci="0" mb="0" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="433" mi="1" ci="0" mb="0" cb="0"/><line nr="435" mi="10" ci="0" mb="0" cb="0"/><line nr="436" mi="22" ci="0" mb="0" cb="0"/><line nr="439" mi="14" ci="0" mb="0" cb="0"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><line nr="443" mi="10" ci="0" mb="0" cb="0"/><line nr="444" mi="22" ci="0" mb="0" cb="0"/><line nr="447" mi="24" ci="0" mb="0" cb="0"/><line nr="450" mi="12" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="637" covered="486"/><counter type="BRANCH" missed="44" covered="33"/><counter type="LINE" missed="97" covered="77"/><counter type="COMPLEXITY" missed="36" covered="26"/><counter type="METHOD" missed="9" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MemorizedCallable.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="50"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharSequences.java"><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="17" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="15" mb="0" cb="2"/><line nr="89" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="27" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="10" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="7" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="1" cb="1"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="7" mb="1" cb="1"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="2" cb="0"/><line nr="191" mi="9" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="1" cb="3"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="231" mi="12" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="1" cb="1"/><line nr="238" mi="0" ci="12" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="2" cb="0"/><line nr="240" mi="12" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="9" ci="0" mb="2" cb="0"/><line nr="245" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="2"/><line nr="257" mi="0" ci="10" mb="0" cb="2"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="18" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="2"/><line nr="288" mi="0" ci="5" mb="0" cb="2"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="12" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="2"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="3" ci="0" mb="2" cb="0"/><line nr="305" mi="12" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="11" mb="0" cb="0"/><line nr="320" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="2" cb="0"/><line nr="344" mi="14" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="2" cb="0"/><line nr="349" mi="14" ci="0" mb="0" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="364" mi="3" ci="0" mb="2" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="2" cb="0"/><line nr="368" mi="14" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="2" cb="0"/><line nr="372" mi="14" ci="0" mb="0" cb="0"/><line nr="374" mi="1" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="2" cb="0"/><line nr="379" mi="7" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="2" cb="0"/><line nr="381" mi="14" ci="0" mb="0" cb="0"/><line nr="383" mi="3" ci="0" mb="2" cb="0"/><line nr="384" mi="14" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="2" cb="0"/><line nr="388" mi="14" ci="0" mb="0" cb="0"/><line nr="390" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="14" ci="0" mb="0" cb="0"/><line nr="395" mi="7" ci="0" mb="2" cb="0"/><line nr="408" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="1" cb="1"/><line nr="424" mi="14" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="1" cb="1"/><line nr="428" mi="14" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="11" mb="1" cb="3"/><line nr="438" mi="0" ci="3" mb="0" cb="2"/><line nr="439" mi="0" ci="16" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="5" mb="1" cb="1"/><line nr="443" mi="16" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="1" cb="1"/><line nr="449" mi="16" ci="0" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="8" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="1" cb="1"/><line nr="464" mi="14" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="1" cb="1"/><line nr="468" mi="14" ci="0" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="5" mb="0" cb="0"/><line nr="477" mi="0" ci="11" mb="1" cb="3"/><line nr="478" mi="0" ci="4" mb="0" cb="2"/><line nr="479" mi="0" ci="16" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="7" mb="1" cb="1"/><line nr="483" mi="16" ci="0" mb="0" cb="0"/><line nr="485" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="2"/><line nr="489" mi="0" ci="16" mb="0" cb="0"/><line nr="491" mi="3" ci="2" mb="3" cb="1"/><line nr="492" mi="20" ci="0" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="4" ci="0" mb="0" cb="0"/><line nr="513" mi="3" ci="0" mb="2" cb="0"/><line nr="514" mi="14" ci="0" mb="0" cb="0"/><line nr="517" mi="3" ci="0" mb="2" cb="0"/><line nr="518" mi="14" ci="0" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="3" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="2" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="531" mi="4" ci="0" mb="0" cb="0"/><line nr="532" mi="3" ci="0" mb="2" cb="0"/><line nr="533" mi="3" ci="0" mb="2" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="2" cb="0"/><line nr="537" mi="14" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="2" cb="0"/><line nr="541" mi="14" ci="0" mb="0" cb="0"/><line nr="543" mi="1" ci="0" mb="0" cb="0"/><line nr="545" mi="5" ci="0" mb="0" cb="0"/><line nr="546" mi="3" ci="0" mb="2" cb="0"/><line nr="548" mi="7" ci="0" mb="0" cb="0"/><line nr="549" mi="2" ci="0" mb="2" cb="0"/><line nr="550" mi="14" ci="0" mb="0" cb="0"/><line nr="552" mi="4" ci="0" mb="2" cb="0"/><line nr="553" mi="14" ci="0" mb="0" cb="0"/><line nr="555" mi="5" ci="0" mb="0" cb="0"/><line nr="556" mi="7" ci="0" mb="2" cb="0"/><line nr="557" mi="14" ci="0" mb="0" cb="0"/><line nr="559" mi="6" ci="0" mb="0" cb="0"/><line nr="561" mi="1" ci="0" mb="0" cb="0"/><line nr="562" mi="14" ci="0" mb="0" cb="0"/><line nr="564" mi="7" ci="0" mb="2" cb="0"/><line nr="568" mi="0" ci="7" mb="0" cb="0"/><line nr="574" mi="0" ci="7" mb="0" cb="2"/><line nr="575" mi="0" ci="4" mb="0" cb="0"/><line nr="576" mi="0" ci="4" mb="0" cb="2"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="580" mi="0" ci="2" mb="0" cb="0"/><line nr="584" mi="1" ci="16" mb="1" cb="1"/><line nr="588" mi="0" ci="3" mb="1" cb="1"/><line nr="589" mi="12" ci="0" mb="0" cb="0"/><line nr="591" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="2" ci="0" mb="0" cb="0"/><line nr="602" mi="17" ci="0" mb="6" cb="0"/><line nr="603" mi="7" ci="0" mb="2" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="2" ci="0" mb="0" cb="0"/><line nr="607" mi="3" ci="0" mb="2" cb="0"/><line nr="608" mi="9" ci="0" mb="2" cb="0"/><line nr="609" mi="2" ci="0" mb="0" cb="0"/><line nr="612" mi="2" ci="0" mb="0" cb="0"/><line nr="620" mi="0" ci="2" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="623" mi="0" ci="7" mb="2" cb="2"/><line nr="624" mi="0" ci="10" mb="1" cb="1"/><line nr="625" mi="0" ci="7" mb="1" cb="1"/><line nr="626" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="2"/><line nr="630" mi="0" ci="5" mb="0" cb="0"/><line nr="631" mi="0" ci="5" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="2"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="3" mb="0" cb="0"/><line nr="640" mi="0" ci="3" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="2"/><line nr="642" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="5" mb="1" cb="1"/><line nr="649" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="2" ci="0" mb="0" cb="0"/><line nr="665" mi="3" ci="0" mb="0" cb="0"/><line nr="666" mi="6" ci="0" mb="2" cb="0"/><line nr="667" mi="4" ci="0" mb="0" cb="0"/><line nr="668" mi="5" ci="0" mb="2" cb="0"/><line nr="669" mi="3" ci="0" mb="2" cb="0"/><line nr="670" mi="1" ci="0" mb="0" cb="0"/><line nr="671" mi="3" ci="0" mb="2" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="4" ci="0" mb="0" cb="0"/><line nr="675" mi="5" ci="0" mb="2" cb="0"/><line nr="676" mi="2" ci="0" mb="0" cb="0"/><line nr="678" mi="1" ci="0" mb="0" cb="0"/><line nr="679" mi="4" ci="0" mb="2" cb="0"/><line nr="680" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="8" ci="0" mb="2" cb="0"/><line nr="695" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="7" ci="0" mb="0" cb="0"/><line nr="697" mi="7" ci="0" mb="2" cb="0"/><line nr="698" mi="4" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="4" cb="0"/><line nr="701" mi="4" ci="0" mb="0" cb="0"/><line nr="702" mi="1" ci="0" mb="0" cb="0"/><line nr="704" mi="4" ci="0" mb="0" cb="0"/><line nr="705" mi="1" ci="0" mb="0" cb="0"/><line nr="713" mi="6" ci="0" mb="0" cb="0"/><line nr="714" mi="1" ci="0" mb="0" cb="0"/><line nr="716" mi="4" ci="0" mb="0" cb="0"/><line nr="719" mi="2" ci="0" mb="0" cb="0"/><line nr="723" mi="0" ci="7" mb="1" cb="1"/><line nr="724" mi="0" ci="5" mb="0" cb="2"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="2" ci="0" mb="0" cb="0"/><line nr="732" mi="7" ci="0" mb="2" cb="0"/><line nr="733" mi="6" ci="0" mb="2" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="737" mi="2" ci="0" mb="0" cb="0"/><line nr="741" mi="7" ci="0" mb="2" cb="0"/><line nr="742" mi="4" ci="0" mb="0" cb="0"/><line nr="743" mi="16" ci="0" mb="2" cb="0"/><line nr="744" mi="3" ci="0" mb="2" cb="0"/><line nr="745" mi="2" ci="0" mb="0" cb="0"/><line nr="749" mi="2" ci="0" mb="0" cb="0"/><line nr="753" mi="0" ci="8" mb="0" cb="2"/><line nr="757" mi="0" ci="3" mb="0" cb="0"/><line nr="758" mi="0" ci="2" mb="0" cb="2"/><line nr="759" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="9" mb="0" cb="2"/><line nr="762" mi="0" ci="7" mb="0" cb="2"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="766" mi="0" ci="2" mb="0" cb="0"/><line nr="770" mi="0" ci="3" mb="0" cb="0"/><line nr="771" mi="0" ci="2" mb="1" cb="1"/><line nr="772" mi="2" ci="0" mb="0" cb="0"/><line nr="774" mi="0" ci="12" mb="0" cb="2"/><line nr="775" mi="0" ci="7" mb="0" cb="2"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="779" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="2" mb="0" cb="0"/><line nr="785" mi="0" ci="3" mb="0" cb="0"/><line nr="786" mi="0" ci="2" mb="0" cb="2"/><line nr="787" mi="0" ci="2" mb="0" cb="0"/><line nr="789" mi="0" ci="2" mb="0" cb="0"/><line nr="791" mi="0" ci="7" mb="0" cb="2"/><line nr="792" mi="0" ci="1" mb="0" cb="0"/><line nr="793" mi="0" ci="5" mb="0" cb="0"/><line nr="795" mi="0" ci="2" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="1" ci="0" mb="0" cb="0"/><line nr="804" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="930" covered="806"/><counter type="BRANCH" missed="135" covered="97"/><counter type="LINE" missed="172" covered="172"/><counter type="COMPLEXITY" missed="99" covered="66"/><counter type="METHOD" missed="18" covered="30"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Timing.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="20" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="106"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CheckedRunnable.java"><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExitException.java"><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SerializablePair.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AppendableUtils.java"><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="148" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="3" cb="4"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="2" cb="5"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="16" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="1" cb="1"/><line nr="193" mi="16" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="11" mb="0" cb="2"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="9" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="2"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="10" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="2"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="7" ci="0" mb="2" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="2" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="481"/><counter type="BRANCH" missed="13" covered="29"/><counter type="LINE" missed="23" covered="84"/><counter type="COMPLEXITY" missed="13" covered="26"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IntAppender.java"><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="UncheckedTimeoutException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Threads.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="2"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="1" cb="1"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="8" ci="0" mb="2" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="4" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="8" ci="0" mb="2" cb="0"/><line nr="210" mi="9" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="119"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="40" covered="35"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="Iterables.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="16" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="TimeoutDeadline.java"><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="2" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="75" mi="13" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="10" ci="0" mb="2" cb="0"/><line nr="98" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NullAbleOptional.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="17" ci="0" mb="0" cb="0"/><line nr="69" mi="11" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="JNA.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="1" ci="5" mb="1" cb="1"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContextValue.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="8761" covered="10306"/><counter type="BRANCH" missed="962" covered="849"/><counter type="LINE" missed="1874" covered="2241"/><counter type="COMPLEXITY" missed="1029" covered="828"/><counter type="METHOD" missed="421" covered="522"/><counter type="CLASS" missed="53" covered="106"/></package><package name="org/spf4j/ssdump2"><class name="org/spf4j/ssdump2/Converter" sourcefilename="Converter.java"><method name="createLabeledSsdump2FileName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="14" covered="23"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabelFromSsdump2FileName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="34" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/util/Iterator;)Lorg/spf4j/stackmonitor/SampleNode;" line="113"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="save" desc="(Ljava/io/File;Lorg/spf4j/stackmonitor/SampleNode;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/io/File;)Lorg/spf4j/stackmonitor/SampleNode;" line="146"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/io/InputStream;)Lorg/spf4j/stackmonitor/SampleNode;" line="152"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveLabeledDumps" desc="(Ljava/io/File;Ljava/util/Map;)V" line="192"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newOutputStream" desc="(Ljava/io/File;)Ljava/io/OutputStream;" line="223"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadLabeledDumps" desc="(Ljava/io/File;)Ljava/util/Map;" line="244"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadSamples" desc="(Lorg/apache/avro/io/Decoder;Lorg/spf4j/base/avro/StackSampleElement;Lorg/apache/avro/specific/SpecificDatumReader;)Lgnu/trove/map/TIntObjectMap;" line="266"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadLabels" desc="(Ljava/io/File;Ljava/util/function/Consumer;)V" line="291"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipDump" desc="(Lorg/apache/avro/io/Decoder;Lorg/apache/avro/specific/SpecificDatumReader;Lorg/spf4j/base/avro/StackSampleElement;)V" line="311"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadLabeledDump" desc="(Ljava/io/File;Ljava/lang/String;)Lorg/spf4j/stackmonitor/SampleNode;" line="329"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInputStream" desc="(Ljava/io/File;)Ljava/io/InputStream;" line="350"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$saveLabeledDumps$4" desc="(Lorg/apache/avro/io/BinaryEncoder;Lorg/apache/avro/specific/SpecificDatumWriter;Lorg/spf4j/base/avro/StackSampleElement;)V" line="208"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$saveLabeledDumps$3" desc="(Ljava/util/Map$Entry;)Lorg/spf4j/stackmonitor/SampleNode;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$saveLabeledDumps$2" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$saveLabeledDumps$1" desc="(Ljava/util/Map$Entry;)Z" line="198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$save$0" desc="(Lorg/apache/avro/specific/SpecificDatumWriter;Lorg/apache/avro/io/BinaryEncoder;Lorg/spf4j/base/avro/StackSampleElement;)V" line="135"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="210" covered="439"/><counter type="BRANCH" missed="16" covered="24"/><counter type="LINE" missed="47" covered="97"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ssdump2/Converter$1" sourcefilename="Converter.java"><method name="&lt;init&gt;" desc="(Ljava/io/PushbackInputStream;Lorg/apache/avro/specific/SpecificDatumReader;Lorg/apache/avro/io/BinaryDecoder;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="163"><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lorg/spf4j/base/avro/StackSampleElement;" line="175"><counter type="INSTRUCTION" missed="10" covered="8"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="185"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Converter.java"><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="1" cb="1"/><line nr="98" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="22" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="2"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="2"/><line nr="199" mi="0" ci="12" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="11" mb="0" cb="2"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="2"/><line nr="251" mi="0" ci="9" mb="0" cb="2"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="2"/><line nr="269" mi="0" ci="9" mb="0" cb="2"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="2"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="5" ci="0" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="2" cb="0"/><line nr="297" mi="9" ci="0" mb="2" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="2" cb="0"/><line nr="313" mi="9" ci="0" mb="2" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="2" cb="0"/><line nr="335" mi="9" ci="0" mb="2" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="2" cb="0"/><line nr="338" mi="10" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="9" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="2"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="230" covered="473"/><counter type="BRANCH" missed="16" covered="26"/><counter type="LINE" missed="54" covered="101"/><counter type="COMPLEXITY" missed="13" covered="31"/><counter type="METHOD" missed="4" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="230" covered="473"/><counter type="BRANCH" missed="16" covered="26"/><counter type="LINE" missed="54" covered="101"/><counter type="COMPLEXITY" missed="13" covered="31"/><counter type="METHOD" missed="4" covered="19"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/spf4j/concurrent"><class name="org/spf4j/concurrent/UnboundedLoadingCache$1" sourcefilename="UnboundedLoadingCache.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/UnboundedLoadingCache;Ljava/lang/Object;)V" line="138"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="141"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/DefaultContextAwareScheduledExecutor" sourcefilename="DefaultContextAwareScheduledExecutor.java"><method name="instance" desc="()Ljava/util/concurrent/ScheduledExecutorService;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/ScalableSequence$1" sourcefilename="ScalableSequence.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/ScalableSequence;I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lorg/spf4j/concurrent/ScalableSequence$Bucket;" line="82"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/ScalableSequence$Bucket" sourcefilename="ScalableSequence.java"><method name="&lt;init&gt;" desc="(JJ)V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(JJ)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasValue" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()J" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/PermitSupplier$2" sourcefilename="PermitSupplier.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJ)Z" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/PermitSupplier$3" sourcefilename="PermitSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/PermitSupplier;)V" line="213"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="(I)V" line="217"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJLjava/util/concurrent/TimeUnit;)Z" line="222"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="227"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acquire" desc="(IJLjava/util/concurrent/TimeUnit;)V" line="233"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acquire" desc="(JLjava/util/concurrent/TimeUnit;)V" line="238"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(IJ)Z" line="243"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="19"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/PermitSupplier$1" sourcefilename="PermitSupplier.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJ)Z" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/RestartableServiceImpl" sourcefilename="RestartableServiceImpl.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/base/Supplier;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerToJmx" desc="()V" line="65"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jmxStart" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startAsync" desc="()Lcom/google/common/util/concurrent/Service;" line="76"><counter type="INSTRUCTION" missed="20" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restart" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRunning" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="state" desc="()Lcom/google/common/util/concurrent/Service$State;" line="112"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jmxStop" desc="()V" line="117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopAsync" desc="()Lcom/google/common/util/concurrent/Service;" line="123"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="awaitRunning" desc="()V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="awaitRunning" desc="(JLjava/util/concurrent/TimeUnit;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="awaitTerminated" desc="()V" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="awaitTerminated" desc="(JLjava/util/concurrent/TimeUnit;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failureCause" desc="()Ljava/lang/Throwable;" line="152"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Lcom/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V" line="157"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="162"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="87"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="17" covered="30"/><counter type="COMPLEXITY" missed="10" covered="11"/><counter type="METHOD" missed="8" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/LifoThreadPoolExecutorSQP$PoolState" sourcefilename="LifoThreadPoolExecutorSQP.java"><method name="&lt;init&gt;" desc="(ILjava/util/Set;)V" line="657"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addThread" desc="(Lorg/spf4j/concurrent/LifoThreadPoolExecutorSQP$QueuedThread;)V" line="664"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeThread" desc="(Lorg/spf4j/concurrent/LifoThreadPoolExecutorSQP$QueuedThread;)V" line="671"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interruptAll" desc="()V" line="678"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoreThreads" desc="()I" line="684"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCoreThreads" desc="(I)V" line="688"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShutdown" desc="()Z" line="692"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setShutdown" desc="(Z)V" line="696"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreadCount" desc="()I" line="700"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="705"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="63"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/ConcurrentStack" sourcefilename="ConcurrentStack.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="53"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pop" desc="()Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/DefaultExecutor" sourcefilename="DefaultExecutor.java"><method name="instance" desc="()Ljava/util/concurrent/ExecutorService;" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="36" covered="48"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="50"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/LifoThreadPoolBuilder" sourcefilename="LifoThreadPoolBuilder.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withPoolName" desc="(Ljava/lang/String;)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withCoreSize" desc="(I)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withMaxSize" desc="(I)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withMaxIdleTimeMillis" desc="(I)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withQueueSizeLimit" desc="(I)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withDaemonThreads" desc="(Z)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withSpinLockCount" desc="(I)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withRejectionHandler" desc="(Lorg/spf4j/concurrent/RejectedExecutionHandler;)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withThreadPriority" desc="(I)Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mutable" desc="()Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enableJmx" desc="()Lorg/spf4j/concurrent/LifoThreadPoolBuilder;" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/spf4j/concurrent/LifoThreadPool;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMutable" desc="()Lorg/spf4j/concurrent/MutableLifoThreadPool;" line="133"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="98"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="12" covered="30"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/UnboundedLoadingCache2$1" sourcefilename="UnboundedLoadingCache2.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/UnboundedLoadingCache2;Lcom/google/common/cache/CacheLoader;)V" line="70"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/ContextPropagatingScheduledExecutorService" sourcefilename="ContextPropagatingScheduledExecutorService.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ScheduledExecutorService;)V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schedule" desc="(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schedule" desc="(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scheduleAtFixedRate" desc="(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;" line="68"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scheduleWithFixedDelay" desc="(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;" line="74"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/concurrent/ScheduledExecutorService;" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/UnboundedLoadingCache2$2" sourcefilename="UnboundedLoadingCache2.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/UnboundedLoadingCache2;Ljava/util/concurrent/Callable;)V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/DefaultContextAwareExecutor" sourcefilename="DefaultContextAwareExecutor.java"><method name="instance" desc="()Ljava/util/concurrent/ExecutorService;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/ThreadLocalBufferedConsumer" sourcefilename="ThreadLocalBufferedConsumer.java"><method name="&lt;init&gt;" desc="(ILjava/util/function/Consumer;I)V" line="63"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/Object;)V" line="80"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="92"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="113"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/PermitSupplier$Acquisition$1" sourcefilename="PermitSupplier.java"><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuccess" desc="()Z" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="permitAvailableEstimateInNanos" desc="()J" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/PermitSupplier$Acquisition$2" sourcefilename="PermitSupplier.java"><method name="&lt;init&gt;" desc="(J)V" line="93"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuccess" desc="()Z" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="permitAvailableEstimateInNanos" desc="()J" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/UnboundedRacyLoadingCache" sourcefilename="UnboundedRacyLoadingCache.java"><method name="&lt;init&gt;" desc="(ILcom/google/common/cache/CacheLoader;)V" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IILcom/google/common/cache/CacheLoader;)V" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnchecked" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAll" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;" line="95"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="refresh" desc="(Ljava/lang/Object;)V" line="112"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMap" desc="()Ljava/util/concurrent/ConcurrentMap;" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIfPresent" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllPresent" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;" line="146"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="158"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="163"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidate" desc="(Ljava/lang/Object;)V" line="170"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateAll" desc="(Ljava/lang/Iterable;)V" line="175"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateAll" desc="()V" line="182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()J" line="187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stats" desc="()Lcom/google/common/cache/CacheStats;" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cleanUp" desc="()V" line="197"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="202"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="243" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/ContextPropagatingExecutorService" sourcefilename="ContextPropagatingExecutorService.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdown" desc="()V" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shutdownNow" desc="()Ljava/util/List;" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShutdown" desc="()Z" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTerminated" desc="()Z" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="awaitTermination" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="80"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submit" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;" line="85"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submit" desc="(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submit" desc="(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAll" desc="(Ljava/util/Collection;)Ljava/util/List;" line="102"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAll" desc="(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;" line="109"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAny" desc="(Ljava/util/Collection;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAny" desc="(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Runnable;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/util/concurrent/ExecutorService;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="131" covered="12"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="5"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="14" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/LifoThreadPoolExecutorSQP$QueuedThread" sourcefilename="LifoThreadPoolExecutorSQP.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/spf4j/ds/SimpleStack;Ljava/util/Queue;ILjava/lang/Runnable;Lorg/spf4j/concurrent/LifoThreadPoolExecutorSQP$PoolState;Ljava/util/concurrent/locks/ReentrantLock;Ljava/util/concurrent/locks/Condition;)V" line="495"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runNext" desc="(Ljava/lang/Runnable;)V" line="516"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signal" desc="()V" line="522"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="527"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="(J)V" line="542"><counter type="INSTRUCTION" missed="37" covered="123"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="10" covered="37"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeThread" desc="()V" line="610"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Runnable;)V" line="617"><counter type="INSTRUCTION" missed="17" covered="15"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="637"><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="244"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="15" covered="75"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/AtomicSequence" sourcefilename="AtomicSequence.java"><method name="&lt;init&gt;" desc="(J)V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()J" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/Atomics" sourcefilename="Atomics.java"><method name="update" desc="(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/function/UnaryOperator;)Lorg/spf4j/concurrent/UpdateResult;" line="62"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAccumulate" desc="(Ljava/util/concurrent/atomic/AtomicLong;DLjava/util/function/DoubleBinaryOperator;I)Z" line="75"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accumulate" desc="(Ljava/util/concurrent/atomic/AtomicLong;DLjava/util/function/DoubleBinaryOperator;I)V" line="91"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accumulate" desc="(Ljava/util/concurrent/atomic/AtomicLong;JLjava/util/function/LongBinaryOperator;I)V" line="107"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBackoffNanos" desc="(I)J" line="121"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAccumulate" desc="(Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/function/DoubleUnaryOperator;I)Z" line="128"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maybeAccumulate" desc="(Ljava/util/concurrent/atomic/AtomicLong;JLjava/util/function/LongBinaryOperator;I)Z" line="144"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="118" covered="46"/><counter type="BRANCH" missed="20" covered="6"/><counter type="LINE" missed="35" covered="13"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/ConcurrentStack$Node" sourcefilename="ConcurrentStack.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/spf4j/concurrent/ConcurrentStack$Node;)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/UnboundedLoadingCache" sourcefilename="UnboundedLoadingCache.java"><method name="&lt;init&gt;" desc="(ILcom/google/common/cache/CacheLoader;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILcom/google/common/cache/CacheLoader;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;Lcom/google/common/cache/CacheLoader;)V" line="87"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnchecked" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAll" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;" line="123"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="refresh" desc="(Ljava/lang/Object;)V" line="138"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMap" desc="()Ljava/util/concurrent/ConcurrentMap;" line="149"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIfPresent" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllPresent" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;" line="187"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="199"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="204"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidate" desc="(Ljava/lang/Object;)V" line="211"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateAll" desc="(Ljava/lang/Iterable;)V" line="216"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateAll" desc="()V" line="223"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()J" line="228"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stats" desc="()Lcom/google/common/cache/CacheStats;" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cleanUp" desc="()V" line="239"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeysLoaded" desc="()Ljava/util/Set;" line="243"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="248"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$0" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="205" covered="83"/><counter type="BRANCH" missed="16" covered="4"/><counter type="LINE" missed="55" covered="19"/><counter type="COMPLEXITY" missed="24" covered="9"/><counter type="METHOD" missed="16" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/ThreadLocalBufferedConsumer$1" sourcefilename="ThreadLocalBufferedConsumer.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/ThreadLocalBufferedConsumer;I)V" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialValue" desc="()Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/FutureBean" sourcefilename="FutureBean.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cancel" desc="(Z)Z" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCancelled" desc="()Z" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDone" desc="()Z" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResultStore" desc="()Lorg/spf4j/base/Either;" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processResult" desc="(Lorg/spf4j/base/Either;)Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResult" desc="(Ljava/lang/Object;)V" line="132"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setExceptionResult" desc="(Ljava/util/concurrent/ExecutionException;)V" line="141"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCancelationResult" desc="(Ljava/util/concurrent/CancellationException;)V" line="150"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="done" desc="()V" line="159"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/CompoundSemaphore" sourcefilename="CompoundSemaphore.java"><method name="&lt;init&gt;" desc="([Lorg/spf4j/concurrent/Semaphore;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="(I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="([Lorg/spf4j/concurrent/Semaphore;II)V" line="54"><counter type="INSTRUCTION" missed="11" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJ)Z" line="75"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSemaphores" desc="()[Lorg/spf4j/concurrent/Semaphore;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="80"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="11" covered="21"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/CustomThreadFactory" sourcefilename="CustomThreadFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZI)V" line="44"><counter type="INSTRUCTION" missed="3" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newThread" desc="(Ljava/lang/Runnable;)Ljava/lang/Thread;" line="66"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/PermitSupplier" sourcefilename="PermitSupplier.java"><method name="acquire" desc="(JLjava/util/concurrent/TimeUnit;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acquire" desc="(IJLjava/util/concurrent/TimeUnit;)V" line="141"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJLjava/util/concurrent/TimeUnit;)Z" line="172"><counter type="INSTRUCTION" missed="16" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquireEx" desc="(IJLjava/util/concurrent/TimeUnit;)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="186"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquireEx" desc="(IJ)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="195"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPermits" desc="(I)Z" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSemaphore" desc="()Lorg/spf4j/concurrent/Semaphore;" line="213"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="44"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/LockRuntimeException" sourcefilename="LockRuntimeException.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/UnboundedLoadingCache$MapView" sourcefilename="UnboundedLoadingCache.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/UnboundedLoadingCache;)V" line="251"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putIfAbsent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="255"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="265"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="270"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="275"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="280"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="285"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="290"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="295"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="300"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="310"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="320"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="330"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="337"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;" line="342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/Collection;" line="347"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="352"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="165" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/ContextPropagatingCompletableFuture" sourcefilename="ContextPropagatingCompletableFuture.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/ExecutionContext;J)V" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="thenApply" desc="(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenApplyAsync" desc="(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="57"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenApplyAsync" desc="(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="63"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAccept" desc="(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;" line="69"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAcceptAsync" desc="(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;" line="75"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAcceptAsync" desc="(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="81"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenRun" desc="(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;" line="87"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenRunAsync" desc="(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;" line="92"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenRunAsync" desc="(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="98"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenCombine" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;" line="105"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenCombineAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;" line="112"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenCombineAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAcceptBoth" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;" line="127"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAcceptBothAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAcceptBothAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="142"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAfterBoth" desc="(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;" line="149"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAfterBothAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;" line="155"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAfterBothAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="162"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyToEither" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="169"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyToEitherAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="176"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyToEitherAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="183"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptEither" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;" line="190"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptEitherAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;" line="197"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptEitherAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="204"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAfterEither" desc="(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;" line="210"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAfterEitherAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;" line="216"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAfterEitherAsync" desc="(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="223"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenCompose" desc="(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="229"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenComposeAsync" desc="(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="234"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenComposeAsync" desc="(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="240"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exceptionally" desc="(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="246"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenComplete" desc="(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;" line="251"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whenCompleteAsync" desc="(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;" line="256"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenCompleteAsync" desc="(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="263"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;" line="270"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsync" desc="(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;" line="275"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsync" desc="(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="282"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCompletableFuture" desc="()Ljava/util/concurrent/CompletableFuture;" line="288"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="293"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="301"><counter type="INSTRUCTION" missed="21" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completeAsync" desc="(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;" line="318"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="completeAsync" desc="(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="331"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIncompleteFuture" desc="()Ljava/util/concurrent/CompletableFuture;" line="345"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="supplyAsync" desc="(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;" line="349"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="supplyAsync" desc="(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;" line="353"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supplyAsync" desc="(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;J)Ljava/util/concurrent/CompletableFuture;" line="362"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="supplyAsync" desc="(Ljava/util/function/Supplier;Lorg/spf4j/base/ExecutionContext;Ljava/util/concurrent/Executor;J)Ljava/util/concurrent/CompletableFuture;" line="372"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completedFuture" desc="(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;" line="398"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="completedFuture" desc="(Lorg/spf4j/base/ExecutionContext;JLjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;" line="408"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$supplyAsync$0" desc="(Ljava/util/function/Supplier;Lorg/spf4j/base/ExecutionContext;JJLorg/spf4j/concurrent/ContextPropagatingCompletableFuture;)V" line="385"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="584" covered="93"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="94" covered="23"/><counter type="COMPLEXITY" missed="51" covered="6"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/Futures$1" sourcefilename="Futures.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/TimeoutException;)V" line="261"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cancel" desc="(Z)Z" line="264"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCancelled" desc="()Z" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDone" desc="()Z" line="274"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="279"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/DefaultExecutor$1" sourcefilename="DefaultExecutor.java"><method name="&lt;init&gt;" desc="(Z)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="80"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/InterruptibleCompletableFuture" sourcefilename="InterruptibleCompletableFuture.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="(Z)Z" line="52"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setToCancel" desc="(Ljava/util/concurrent/Future;)V" line="63"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/LocalSemaphore" sourcefilename="LocalSemaphore.java"><method name="&lt;init&gt;" desc="(IZ)V" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJ)Z" line="51"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJLjava/util/concurrent/TimeUnit;)Z" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="(I)V" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/PermitSupplier$Acquisition" sourcefilename="PermitSupplier.java"><method name="failed" desc="(J)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/UpdateResult" sourcefilename="UpdateResult.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Object;)V" line="44"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updated" desc="(Ljava/lang/Object;)Lorg/spf4j/concurrent/UpdateResult;" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="same" desc="(Ljava/lang/Object;)Lorg/spf4j/concurrent/UpdateResult;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isObjectUpdated" desc="()Z" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObj" desc="()Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/UIDGenerator" sourcefilename="UIDGenerator.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Sequence;)V" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Sequence;Ljava/lang/String;)V" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Sequence;J)V" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Sequence;Ljava/lang/String;J)V" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Sequence;Lcom/google/common/io/BaseEncoding;JCLjava/lang/String;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateIdBase" desc="(Ljava/lang/String;C)Ljava/lang/StringBuilder;" line="98"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateIdBase" desc="(Ljava/lang/String;CJ)Ljava/lang/StringBuilder;" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateIdBase" desc="(Ljava/lang/String;Lcom/google/common/io/BaseEncoding;CJ)Ljava/lang/StringBuilder;" line="111"><counter type="INSTRUCTION" missed="63" covered="65"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="17" covered="14"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxSize" desc="()I" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/CharSequence;" line="163"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="171"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/CharSequence;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="116" covered="122"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="26" covered="28"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/RejectedExecutionHandler$1" sourcefilename="RejectedExecutionHandler.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rejectedExecution" desc="(Ljava/lang/Runnable;Lorg/spf4j/concurrent/LifoThreadPool;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/LifoThreadPoolExecutorSQP" sourcefilename="LifoThreadPoolExecutorSQP.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="130"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IIIIZ)V" line="137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IIII)V" line="144"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IIIIZLorg/spf4j/concurrent/RejectedExecutionHandler;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IIIIZLorg/spf4j/concurrent/RejectedExecutionHandler;I)V" line="160"><counter type="INSTRUCTION" missed="40" covered="124"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exportJmx" desc="()V" line="194"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Runnable;)V" line="202"><counter type="INSTRUCTION" missed="9" covered="120"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdown" desc="()V" line="251"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="awaitTermination" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="267"><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdownNow" desc="()Ljava/util/List;" line="292"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isShutdown" desc="()Z" line="305"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDaemonThreads" desc="()Z" line="316"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTerminated" desc="()Z" line="327"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreadCount" desc="()I" line="338"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxThreadCount" desc="()I" line="349"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoreThreadCount" desc="()I" line="360"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStateLock" desc="()Ljava/util/concurrent/locks/ReentrantLock;" line="370"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrQueuedTasks" desc="()I" line="378"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueueSizeLimit" desc="()I" line="389"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unregisterJmx" desc="()V" line="399"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDaemonThreads" desc="(Z)V" line="405"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMaxIdleTimeMillis" desc="(I)V" line="416"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxThreadCount" desc="(I)V" line="427"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCoreThreadCount" desc="(I)V" line="438"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setQueueSizeLimit" desc="(I)V" line="449"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setThreadPriority" desc="(I)V" line="460"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="713"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTaskQueue" desc="()Ljava/util/Queue;" line="721"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxIdleTimeMillis" desc="()I" line="727"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPoolName" desc="()Ljava/lang/String;" line="738"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreadPriority" desc="()I" line="744"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="279" covered="424"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="57" covered="94"/><counter type="COMPLEXITY" missed="29" covered="24"/><counter type="METHOD" missed="19" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/RejectedExecutionHandler$2" sourcefilename="RejectedExecutionHandler.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rejectedExecution" desc="(Ljava/lang/Runnable;Lorg/spf4j/concurrent/LifoThreadPool;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/ScalableSequence" sourcefilename="ScalableSequence.java"><method name="&lt;init&gt;" desc="(JI)V" line="73"><counter type="INSTRUCTION" missed="12" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()J" line="90"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/CompoundPermitSupplier" sourcefilename="CompoundPermitSupplier.java"><method name="&lt;init&gt;" desc="([Lorg/spf4j/concurrent/PermitSupplier;)V" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(IJ)Z" line="51"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquireEx" desc="(IJ)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="73"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnPermits" desc="([Lorg/spf4j/concurrent/PermitSupplier;II)V" line="94"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/FileBasedLock" sourcefilename="FileBasedLock.java"><method name="next" desc="(I)I" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;[Ljava/nio/file/attribute/FileAttribute;)V" line="86"><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractPosixPermissions" desc="([Ljava/nio/file/attribute/FileAttribute;)Ljava/util/Set;" line="113"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLock" desc="(Ljava/io/File;[Ljava/nio/file/attribute/FileAttribute;)Lorg/spf4j/concurrent/FileBasedLock;" line="145"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLock" desc="(Ljava/io/File;)Lorg/spf4j/concurrent/FileBasedLock;" line="155"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()V" line="161"><counter type="INSTRUCTION" missed="15" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lockInterruptibly" desc="()V" line="181"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryLock" desc="()Z" line="210"><counter type="INSTRUCTION" missed="22" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryLock" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="239"><counter type="INSTRUCTION" missed="68" covered="13"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="22" covered="3"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unlock" desc="()V" line="281"><counter type="INSTRUCTION" missed="19" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCondition" desc="()Ljava/util/concurrent/locks/Condition;" line="296"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="305"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalize" desc="()V" line="312"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHolderInfo" desc="()V" line="318"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextInfo" desc="()Ljava/lang/String;" line="326"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="331"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocalHoldCount" desc="()I" line="335"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHeldByCurrentThread" desc="()Z" line="340"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLock$0" desc="(Ljava/io/File;[Ljava/nio/file/attribute/FileAttribute;)Lorg/spf4j/concurrent/FileBasedLock;" line="147"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="224" covered="259"/><counter type="BRANCH" missed="31" covered="27"/><counter type="LINE" missed="67" covered="67"/><counter type="COMPLEXITY" missed="27" covered="22"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/Futures" sourcefilename="Futures.java"><method name="cancelAll" desc="(Z[Ljava/util/concurrent/Future;)Ljava/lang/RuntimeException;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelAll" desc="(Z[Ljava/util/concurrent/Future;I)Ljava/lang/RuntimeException;" line="70"><counter type="INSTRUCTION" missed="9" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelAll" desc="(ZLjava/util/Iterator;)Ljava/lang/RuntimeException;" line="88"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAll" desc="(J[Ljava/util/concurrent/Future;)Lorg/spf4j/base/Pair;" line="107"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllWithDeadlineNanos" desc="(J[Ljava/util/concurrent/Future;)Lorg/spf4j/base/Pair;" line="117"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllWithDeadlineNanos" desc="(JLjava/util/function/BiConsumer;[Ljava/util/concurrent/Future;)Ljava/lang/Exception;" line="133"><counter type="INSTRUCTION" missed="54" covered="32"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="21" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllWithDeadlineNanosRetVoid" desc="(J[Ljava/util/concurrent/Future;)Ljava/lang/Exception;" line="186"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAll" desc="(JLjava/lang/Iterable;)Lorg/spf4j/base/Pair;" line="192"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllWithDeadlineNanos" desc="(JLjava/lang/Iterable;)Lorg/spf4j/base/Pair;" line="202"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllWithDeadlineNanos" desc="(JLjava/util/function/BiConsumer;Ljava/lang/Iterable;)Ljava/lang/Exception;" line="217"><counter type="INSTRUCTION" missed="51" covered="31"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="timedOutFutures" desc="(ILjava/util/concurrent/TimeoutException;)Ljava/util/List;" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllWithDeadlineNanosRetVoid$0" desc="(Ljava/util/concurrent/Future;Ljava/lang/Object;)V" line="186"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="159" covered="148"/><counter type="BRANCH" missed="23" covered="7"/><counter type="LINE" missed="62" covered="36"/><counter type="COMPLEXITY" missed="16" covered="11"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/DefaultScheduler$1" sourcefilename="DefaultScheduler.java"><method name="&lt;init&gt;" desc="(Z)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="68"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/AtomicReferenceExt" sourcefilename="AtomicReferenceExt.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="update" desc="(Ljava/util/function/UnaryOperator;)Lorg/spf4j/concurrent/UpdateResult;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/RejectedExecutionHandler" sourcefilename="RejectedExecutionHandler.java"><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/DefaultScheduler" sourcefilename="DefaultScheduler.java"><method name="instance" desc="()Ljava/util/concurrent/ScheduledExecutorService;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listenableInstance" desc="()Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;" line="83"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduleAllignedAtFixedRateMillis" desc="(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;" line="98"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/Semaphore" sourcefilename="Semaphore.java"><method name="release" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSemaphore" desc="()Lorg/spf4j/concurrent/Semaphore;" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/UnboundedLoadingCache2" sourcefilename="UnboundedLoadingCache2.java"><method name="&lt;init&gt;" desc="(ILcom/google/common/cache/CacheLoader;)V" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IILcom/google/common/cache/CacheLoader;)V" line="66"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnchecked" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAll" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;" line="95"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="refresh" desc="(Ljava/lang/Object;)V" line="110"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMap" desc="()Ljava/util/concurrent/ConcurrentMap;" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIfPresent" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllPresent" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;" line="140"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="152"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="157"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidate" desc="(Ljava/lang/Object;)V" line="164"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateAll" desc="(Ljava/lang/Iterable;)V" line="169"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidateAll" desc="()V" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()J" line="181"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stats" desc="()Lcom/google/common/cache/CacheStats;" line="186"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cleanUp" desc="()V" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="199" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Semaphore.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileBasedLock.java"><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="3" ci="2" mb="3" cb="1"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="1" cb="3"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="16" mb="0" cb="2"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="1" cb="1"/><line nr="120" mi="0" ci="2" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="14" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="2" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="10" ci="0" mb="4" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="1" cb="1"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="1" cb="1"/><line nr="240" mi="0" ci="5" mb="1" cb="1"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="2" cb="0"/><line nr="250" mi="5" ci="0" mb="2" cb="0"/><line nr="251" mi="4" ci="0" mb="2" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="2" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="2" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="2"/><line nr="282" mi="0" ci="3" mb="1" cb="1"/><line nr="283" mi="13" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="1" cb="1"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="12" mb="0" cb="0"/><line nr="331" mi="12" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="224" covered="259"/><counter type="BRANCH" missed="31" covered="27"/><counter type="LINE" missed="67" covered="67"/><counter type="COMPLEXITY" missed="27" covered="22"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContextPropagatingScheduledExecutorService.java"><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UIDGenerator.java"><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="2" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="2" cb="4"/><line nr="121" mi="0" ci="2" mb="1" cb="1"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="22" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="116" covered="122"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="26" covered="28"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalSemaphore.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="1" cb="1"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultContextAwareScheduledExecutor.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConcurrentStack.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="2" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ContextPropagatingCompletableFuture.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="75" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="11" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="10" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="10" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="11" ci="0" mb="0" cb="0"/><line nr="162" mi="12" ci="0" mb="0" cb="0"/><line nr="169" mi="10" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="10" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="10" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="10" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="10" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="10" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="10" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="10" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="10" ci="0" mb="0" cb="0"/><line nr="234" mi="10" ci="0" mb="0" cb="0"/><line nr="240" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="10" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="10" mb="0" cb="0"/><line nr="256" mi="9" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="9" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="10" ci="0" mb="0" cb="0"/><line nr="275" mi="9" ci="0" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="9" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="17" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="1" cb="1"/><line nr="303" mi="10" ci="0" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="20" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="6" ci="0" mb="0" cb="0"/><line nr="331" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="24" ci="0" mb="0" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="6" ci="0" mb="0" cb="0"/><line nr="336" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="6" ci="0" mb="0" cb="0"/><line nr="345" mi="8" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="1" cb="1"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="7" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="2" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="6" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="1" cb="1"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="0" ci="8" mb="0" cb="0"/><line nr="385" mi="0" ci="9" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="2" ci="0" mb="2" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="6" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="2" cb="0"/><line nr="410" mi="12" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="584" covered="93"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="94" covered="23"/><counter type="COMPLEXITY" missed="51" covered="6"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CustomThreadFactory.java"><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="3" ci="6" mb="1" cb="1"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="19" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LockRuntimeException.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LifoThreadPoolBuilder.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="20" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="62" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="98"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="12" covered="30"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LifoThreadPoolExecutorSQP.java"><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="16" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="4" cb="4"/><line nr="166" mi="24" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="12" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="2"/><line nr="182" mi="0" ci="32" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="12" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="2"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="222" mi="0" ci="34" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="15" mb="1" cb="3"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="1" cb="1"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="2"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="2"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="1" cb="1"/><line nr="272" mi="12" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="2"/><line nr="277" mi="0" ci="4" mb="0" cb="2"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="8" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="14" ci="0" mb="4" cb="0"/><line nr="331" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="0" cb="0"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="6" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="6" ci="0" mb="0" cb="0"/><line nr="400" mi="1" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="3" ci="0" mb="0" cb="0"/><line nr="444" mi="1" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="1" ci="0" mb="0" cb="0"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="3" mb="0" cb="0"/><line nr="518" mi="0" ci="1" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="2" mb="0" cb="2"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="7" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="2"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="4" mb="0" cb="2"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="7" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="0" cb="2"/><line nr="554" mi="0" ci="4" mb="0" cb="0"/><line nr="555" mi="0" ci="5" mb="1" cb="1"/><line nr="556" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="1" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="5" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="1" cb="1"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="1" ci="0" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="2"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="3" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="580" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="3" mb="0" cb="2"/><line nr="582" mi="0" ci="6" mb="0" cb="0"/><line nr="584" mi="0" ci="5" mb="1" cb="1"/><line nr="585" mi="17" ci="0" mb="0" cb="0"/><line nr="588" mi="0" ci="4" mb="0" cb="2"/><line nr="589" mi="0" ci="4" mb="0" cb="0"/><line nr="590" mi="0" ci="9" mb="1" cb="3"/><line nr="591" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="1" mb="0" cb="0"/><line nr="595" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="599" mi="1" ci="0" mb="0" cb="0"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="601" mi="4" ci="0" mb="2" cb="0"/><line nr="602" mi="3" ci="0" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="605" mi="0" ci="1" mb="0" cb="0"/><line nr="607" mi="0" ci="1" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="611" mi="0" ci="3" mb="0" cb="0"/><line nr="612" mi="0" ci="3" mb="0" cb="0"/><line nr="613" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="2" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="4" mb="0" cb="0"/><line nr="624" mi="1" ci="0" mb="0" cb="0"/><line nr="625" mi="3" ci="0" mb="0" cb="0"/><line nr="626" mi="13" ci="0" mb="0" cb="0"/><line nr="627" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="11" mb="0" cb="0"/><line nr="642" mi="0" ci="8" mb="0" cb="0"/><line nr="643" mi="0" ci="10" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="3" mb="0" cb="0"/><line nr="660" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="1" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="1" cb="1"/><line nr="665" mi="12" ci="0" mb="0" cb="0"/><line nr="667" mi="0" ci="5" mb="0" cb="0"/><line nr="668" mi="0" ci="1" mb="0" cb="0"/><line nr="671" mi="0" ci="5" mb="1" cb="1"/><line nr="672" mi="12" ci="0" mb="0" cb="0"/><line nr="674" mi="0" ci="5" mb="0" cb="0"/><line nr="675" mi="0" ci="1" mb="0" cb="0"/><line nr="678" mi="0" ci="11" mb="0" cb="2"/><line nr="679" mi="0" ci="2" mb="0" cb="0"/><line nr="680" mi="0" ci="1" mb="0" cb="0"/><line nr="681" mi="0" ci="1" mb="0" cb="0"/><line nr="684" mi="0" ci="3" mb="0" cb="0"/><line nr="688" mi="3" ci="0" mb="0" cb="0"/><line nr="689" mi="1" ci="0" mb="0" cb="0"/><line nr="692" mi="0" ci="3" mb="0" cb="0"/><line nr="696" mi="0" ci="3" mb="0" cb="0"/><line nr="697" mi="0" ci="1" mb="0" cb="0"/><line nr="700" mi="0" ci="4" mb="0" cb="0"/><line nr="705" mi="13" ci="0" mb="0" cb="0"/><line nr="706" mi="5" ci="0" mb="0" cb="0"/><line nr="713" mi="42" ci="0" mb="0" cb="0"/><line nr="721" mi="3" ci="0" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="0" cb="0"/><line nr="729" mi="5" ci="0" mb="0" cb="0"/><line nr="731" mi="3" ci="0" mb="0" cb="0"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="5" ci="0" mb="0" cb="0"/><line nr="748" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="382" covered="731"/><counter type="BRANCH" missed="20" covered="54"/><counter type="LINE" missed="78" covered="189"/><counter type="COMPLEXITY" missed="38" covered="49"/><counter type="METHOD" missed="21" covered="29"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AtomicReferenceExt.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ThreadLocalBufferedConsumer.java"><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="16" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="UpdateResult.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultContextAwareExecutor.java"><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultExecutor.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="3" cb="1"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="17" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="68"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Futures.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="2" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="2" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="1" cb="1"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="2" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="2" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="2" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="2" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="11" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="182" covered="148"/><counter type="BRANCH" missed="23" covered="7"/><counter type="LINE" missed="67" covered="36"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="UnboundedLoadingCache.java"><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="9" ci="0" mb="2" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="16" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="7" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="2" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="9" ci="0" mb="2" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="7" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="11" ci="0" mb="2" cb="0"/><line nr="205" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="9" ci="0" mb="2" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="17" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="9" ci="0" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="2" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="7" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="2" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="9" ci="0" mb="0" cb="0"/><line nr="312" mi="7" ci="0" mb="2" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="7" ci="0" mb="0" cb="0"/><line nr="322" mi="7" ci="0" mb="2" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="11" ci="0" mb="2" cb="0"/><line nr="331" mi="12" ci="0" mb="0" cb="0"/><line nr="332" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="386" covered="83"/><counter type="BRANCH" missed="26" covered="4"/><counter type="LINE" missed="89" covered="19"/><counter type="COMPLEXITY" missed="48" covered="9"/><counter type="METHOD" missed="35" covered="7"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="AtomicSequence.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InterruptibleCompletableFuture.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="2" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="19" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultScheduler.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="81"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RestartableServiceImpl.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="2" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="87"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="17" covered="30"/><counter type="COMPLEXITY" missed="10" covered="11"/><counter type="METHOD" missed="8" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermitSupplier.java"><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="1" cb="1"/><line nr="142" mi="16" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="1" cb="1"/><line nr="173" mi="16" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="2" cb="0"/><line nr="187" mi="16" ci="0" mb="0" cb="0"/><line nr="189" mi="7" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="2" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="11" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="69"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="25" covered="13"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="18" covered="12"/><counter type="CLASS" missed="3" covered="4"/></sourcefile><sourcefile name="ContextPropagatingExecutorService.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="10" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="131" covered="12"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="5"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="14" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompoundPermitSupplier.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="17" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="17" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UnboundedLoadingCache2.java"><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="16" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="19" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="2" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="9" ci="0" mb="2" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="238" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="UnboundedRacyLoadingCache.java"><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="9" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="11" ci="0" mb="2" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="9" ci="0" mb="2" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="243" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ScalableSequence.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="2"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="16" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="112"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Atomics.java"><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="2" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="1" cb="1"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="2" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="1" cb="1"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="118" covered="46"/><counter type="BRANCH" missed="20" covered="6"/><counter type="LINE" missed="35" covered="13"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FutureBean.java"><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="4" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="4" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="2" cb="0"/><line nr="133" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="12" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="151" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RejectedExecutionHandler.java"><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CompoundSemaphore.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="1" cb="1"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="1" cb="1"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="80"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="11" covered="21"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3840" covered="2251"/><counter type="BRANCH" missed="241" covered="131"/><counter type="LINE" missed="875" covered="574"/><counter type="COMPLEXITY" missed="427" covered="188"/><counter type="METHOD" missed="281" covered="146"/><counter type="CLASS" missed="21" covered="33"/></package><package name="org/spf4j/unix"><class name="org/spf4j/unix/Ulimit" sourcefilename="Ulimit.java"><method name="findUlimitCmd" desc="()[Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="46" covered="29"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runUlimit" desc="([Ljava/lang/String;)I" line="88"><counter type="INSTRUCTION" missed="43" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="13" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="92" covered="66"/><counter type="BRANCH" missed="13" covered="5"/><counter type="LINE" missed="19" covered="16"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/unix/UnixException" sourcefilename="UnixException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errno" desc="()I" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateToIOException" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/IOException;" line="79"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rethrowAsIOException" desc="(Ljava/lang/String;)V" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/unix/UnixRuntimeException" sourcefilename="UnixRuntimeException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errno" desc="()I" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateToIOException" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/IOException;" line="79"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rethrowAsIOException" desc="(Ljava/lang/String;)V" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/unix/UnixResources" sourcefilename="UnixResources.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="125"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;III)V" line="130"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMacId" desc="()I" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGnuId" desc="()I" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSoftLimit" desc="()J" line="144"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSoftLimit" desc="(J)V" line="148"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLimits" desc="(JJ)V" line="152"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHardLimit" desc="()J" line="156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRLimit" desc="(Lorg/spf4j/unix/UnixResources;)Lcom/sun/jna/platform/unix/Resource$Rlimit;" line="160"><counter type="INSTRUCTION" missed="46" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRLimit" desc="(Lorg/spf4j/unix/UnixResources;JJ)V" line="176"><counter type="INSTRUCTION" missed="46" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="202"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="285"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="10" covered="44"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/unix/Lsof" sourcefilename="Lsof.java"><method name="getNrOpenFiles" desc="()I" line="83"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLsofOutput" desc="()Ljava/lang/CharSequence;" line="98"><counter type="INSTRUCTION" missed="17" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="31" covered="35"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="97" covered="41"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="21" covered="8"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/unix/CLibrary" sourcefilename="CLibrary.java"><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/unix/JVMArguments" sourcefilename="JVMArguments.java"><method name="&lt;init&gt;" desc="(I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutable" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeSystemProperty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="7" covered="49"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSystemProperty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOrUpdateSystemProperty" desc="(Ljava/lang/String;Ljava/util/function/Function;)V" line="127"><counter type="INSTRUCTION" missed="18" covered="84"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSystemProperty" desc="(Ljava/lang/String;)Z" line="148"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllSystemPropertiesStartingWith" desc="(Ljava/lang/String;)I" line="170"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSystemProperty" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="185"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVMArgument" desc="(Ljava/lang/String;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVMArgument" desc="(Ljava/lang/String;)Z" line="197"><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVMArgumentStartingWith" desc="(Ljava/lang/String;)Z" line="210"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasVMArgument" desc="(Ljava/lang/String;)Z" line="223"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasVMArgumentStartingWith" desc="(Ljava/lang/String;)Z" line="235"><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;)V" line="248"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeTail" desc="(I)V" line="255"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringArray" desc="()Lcom/sun/jna/StringArray;" line="260"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()Lorg/spf4j/unix/JVMArguments;" line="267"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/spf4j/unix/JVMArguments;" line="276"><counter type="INSTRUCTION" missed="21" covered="13"/><counter type="BRANCH" missed="4" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofLinux" desc="(I)Lorg/spf4j/unix/JVMArguments;" line="292"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvePID" desc="(I)I" line="298"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofSolaris" desc="(I)Lorg/spf4j/unix/JVMArguments;" line="308"><counter type="INSTRUCTION" missed="190" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seek64" desc="(Lorg/spf4j/unix/CLibrary$FILE;J)V" line="408"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjust" desc="(I)I" line="422"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjust" desc="(J)J" line="430"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="to64" desc="(I)J" line="448"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="(Ljava/io/RandomAccessFile;I)Ljava/lang/String;" line="452"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="(Lorg/spf4j/unix/CLibrary$FILE;J)Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofMac" desc="(I)Lorg/spf4j/unix/JVMArguments;" line="496"><counter type="INSTRUCTION" missed="28" covered="104"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofFreeBSD" desc="(I)Lorg/spf4j/unix/JVMArguments;" line="604"><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="645"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="650"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="655"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/String;" line="669"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="726" covered="490"/><counter type="BRANCH" missed="70" covered="43"/><counter type="LINE" missed="140" covered="115"/><counter type="COMPLEXITY" missed="61" covered="31"/><counter type="METHOD" missed="15" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/unix/UnixRuntime" sourcefilename="UnixRuntime.java"><method name="restart" desc="()V" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restart" desc="(Lorg/spf4j/unix/JVMArguments;)V" line="63"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$restart$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/unix/JVMArguments$StringArrayMemory" sourcefilename="JVMArguments.java"><method name="&lt;init&gt;" desc="(JI)V" line="571"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readInt" desc="()I" line="580"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readString" desc="()Ljava/lang/String;" line="586"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip0" desc="()V" line="596"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/unix/CLibrary$FILE" sourcefilename="CLibrary.java"><method name="&lt;init&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/sun/jna/Pointer;)V" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="UnixRuntime.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="18" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UnixRuntimeException.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UnixException.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Ulimit.java"><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="2" cb="2"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="4" cb="0"/><line nr="74" mi="16" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="4" cb="0"/><line nr="76" mi="16" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="1" cb="1"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="66"/><counter type="BRANCH" missed="13" covered="5"/><counter type="LINE" missed="19" covered="16"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JVMArguments.java"><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="2" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="1" cb="1"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="4"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="1" cb="1"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="1" cb="1"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="4"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="1" cb="1"/><line nr="135" mi="17" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="1" cb="1"/><line nr="138" mi="0" ci="21" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="19" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="11" ci="0" mb="4" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="2" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="2" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="16" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="1" cb="1"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="1" cb="1"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="1" cb="1"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="1" cb="1"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="2"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="1" cb="1"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="1" cb="1"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="11" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="12" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="8" mb="4" cb="1"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="12" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="17" ci="0" mb="0" cb="0"/><line nr="294" mi="8" ci="0" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="1" cb="1"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="20" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="5" ci="0" mb="2" cb="0"/><line nr="348" mi="16" ci="0" mb="0" cb="0"/><line nr="361" mi="7" ci="0" mb="2" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="363" mi="11" ci="0" mb="2" cb="0"/><line nr="364" mi="14" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="2" cb="0"/><line nr="370" mi="6" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="374" mi="7" ci="0" mb="2" cb="0"/><line nr="376" mi="8" ci="0" mb="0" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="7" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="8" ci="0" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="389" mi="7" ci="0" mb="2" cb="0"/><line nr="391" mi="8" ci="0" mb="0" cb="0"/><line nr="392" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="2" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="6" ci="0" mb="0" cb="0"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="415" mi="6" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="2" cb="0"/><line nr="423" mi="20" ci="0" mb="0" cb="0"/><line nr="425" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="2" ci="0" mb="2" cb="0"/><line nr="431" mi="44" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="448" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="4" ci="0" mb="0" cb="0"/><line nr="453" mi="4" ci="0" mb="0" cb="0"/><line nr="455" mi="5" ci="0" mb="2" cb="0"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="5" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="466" mi="7" ci="0" mb="2" cb="0"/><line nr="467" mi="1" ci="0" mb="0" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="2" cb="0"/><line nr="471" mi="1" ci="0" mb="0" cb="0"/><line nr="473" mi="3" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="475" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="5" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="19" mb="1" cb="1"/><line nr="508" mi="8" ci="0" mb="0" cb="0"/><line nr="509" mi="6" ci="0" mb="0" cb="0"/><line nr="512" mi="0" ci="3" mb="0" cb="0"/><line nr="513" mi="0" ci="7" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="23" mb="1" cb="1"/><line nr="516" mi="8" ci="0" mb="0" cb="0"/><line nr="517" mi="6" ci="0" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="5" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="7" mb="0" cb="2"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="580" mi="0" ci="5" mb="0" cb="0"/><line nr="581" mi="0" ci="8" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="4" mb="0" cb="0"/><line nr="588" mi="0" ci="12" mb="0" cb="2"/><line nr="589" mi="0" ci="4" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="0"/><line nr="596" mi="0" ci="5" mb="0" cb="2"/><line nr="597" mi="0" ci="7" mb="0" cb="0"/><line nr="599" mi="0" ci="1" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="605" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="2" ci="0" mb="0" cb="0"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="609" mi="4" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="0" cb="0"/><line nr="611" mi="4" ci="0" mb="0" cb="0"/><line nr="613" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="15" ci="0" mb="2" cb="0"/><line nr="615" mi="4" ci="0" mb="0" cb="0"/><line nr="616" mi="5" ci="0" mb="0" cb="0"/><line nr="619" mi="3" ci="0" mb="0" cb="0"/><line nr="620" mi="6" ci="0" mb="0" cb="0"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><line nr="623" mi="27" ci="0" mb="2" cb="0"/><line nr="625" mi="4" ci="0" mb="0" cb="0"/><line nr="628" mi="4" ci="0" mb="0" cb="0"/><line nr="629" mi="4" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="4" ci="0" mb="2" cb="0"/><line nr="633" mi="8" ci="0" mb="2" cb="0"/><line nr="634" mi="4" ci="0" mb="0" cb="0"/><line nr="636" mi="5" ci="0" mb="0" cb="0"/><line nr="637" mi="3" ci="0" mb="0" cb="0"/><line nr="640" mi="5" ci="0" mb="0" cb="0"/><line nr="645" mi="0" ci="12" mb="0" cb="0"/><line nr="650" mi="6" ci="0" mb="0" cb="0"/><line nr="655" mi="3" ci="0" mb="2" cb="0"/><line nr="656" mi="2" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="2" cb="0"/><line nr="659" mi="2" ci="0" mb="0" cb="0"/><line nr="661" mi="5" ci="0" mb="2" cb="0"/><line nr="662" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="3" ci="0" mb="0" cb="0"/><line nr="665" mi="6" ci="0" mb="0" cb="0"/><line nr="669" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="726" covered="551"/><counter type="BRANCH" missed="70" covered="47"/><counter type="LINE" missed="140" covered="129"/><counter type="COMPLEXITY" missed="61" covered="37"/><counter type="METHOD" missed="15" covered="23"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnixResources.java"><line nr="45" mi="0" ci="72" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="2" ci="6" mb="1" cb="1"/><line nr="161" mi="0" ci="2" mb="1" cb="1"/><line nr="162" mi="17" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="1" cb="1"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="25" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="2" ci="6" mb="1" cb="1"/><line nr="177" mi="0" ci="2" mb="1" cb="1"/><line nr="178" mi="17" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="1" cb="1"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="25" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="285"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="10" covered="44"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CLibrary.java"><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Lsof.java"><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="2" cb="2"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="4" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="4" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="2" ci="8" mb="1" cb="1"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="13" ci="0" mb="0" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="41"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="21" covered="8"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1261" covered="949"/><counter type="BRANCH" missed="134" covered="63"/><counter type="LINE" missed="249" covered="198"/><counter type="COMPLEXITY" missed="122" covered="51"/><counter type="METHOD" missed="36" covered="37"/><counter type="CLASS" missed="4" covered="6"/></package><package name="org/spf4j/net"><class name="org/spf4j/net/SntpClient$1" sourcefilename="SntpClient.java"><method name="&lt;init&gt;" desc="([Ljava/net/InetAddress;Lorg/spf4j/base/ExecutionContext;JI)V" line="134"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lorg/spf4j/net/Timing;" line="140"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="62"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/net/Timing" sourcefilename="Timing.java"><method name="&lt;init&gt;" desc="(JJJ)V" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNtpTime" desc="()J" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNtpTimeReference" desc="()J" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRoundTripTime" desc="()J" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="()J" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="44"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/net/SntpClient" sourcefilename="SntpClient.java"><method name="requestTimeHA" desc="(I[Ljava/lang/String;)Lorg/spf4j/net/Timing;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestTimeHA" desc="(II[Ljava/lang/String;)Lorg/spf4j/net/Timing;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestTimeHA" desc="(III[Ljava/lang/String;)Lorg/spf4j/net/Timing;" line="116"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestTimeHA" desc="(III[Ljava/net/InetAddress;)Lorg/spf4j/net/Timing;" line="129"><counter type="INSTRUCTION" missed="13" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestTime" desc="(Ljava/lang/String;I)Lorg/spf4j/net/Timing;" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requestTime" desc="(Ljava/lang/String;II)Lorg/spf4j/net/Timing;" line="159"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestTime" desc="(Ljava/lang/String;IJ)Lorg/spf4j/net/Timing;" line="173"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestTime" desc="(Ljava/net/InetAddress;IJ)Lorg/spf4j/net/Timing;" line="188"><counter type="INSTRUCTION" missed="28" covered="153"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkValidServerReply" desc="(BBIJ)V" line="247"><counter type="INSTRUCTION" missed="51" covered="16"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read32" desc="([BI)J" line="262"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readTimeStamp" desc="([BI)J" line="282"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTimeStamp" desc="([BIJ)V" line="293"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="97" covered="491"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="8" covered="78"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Timing.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="44"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SntpClient.java"><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="16" mb="0" cb="2"/><line nr="118" mi="0" ci="17" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="13" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="29" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="13" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="2" ci="12" mb="1" cb="1"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="9" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="1" cb="1"/><line nr="210" mi="15" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="1" cb="1"/><line nr="215" mi="13" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="9" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="10" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="1" cb="1"/><line nr="248" mi="12" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="3" mb="3" cb="1"/><line nr="250" mi="12" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="2" cb="2"/><line nr="252" mi="12" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="1" cb="1"/><line nr="254" mi="12" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="13" mb="0" cb="2"/><line nr="269" mi="0" ci="13" mb="0" cb="2"/><line nr="270" mi="0" ci="13" mb="0" cb="2"/><line nr="271" mi="0" ci="13" mb="0" cb="2"/><line nr="273" mi="0" ci="18" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="9" mb="0" cb="0"/><line nr="300" mi="0" ci="9" mb="0" cb="0"/><line nr="301" mi="0" ci="9" mb="0" cb="0"/><line nr="302" mi="0" ci="7" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="9" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="0"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="553"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="8" covered="84"/><counter type="COMPLEXITY" missed="11" covered="20"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="108" covered="597"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="11" covered="91"/><counter type="COMPLEXITY" missed="14" covered="23"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/spf4j/io/tcp"><class name="org/spf4j/io/tcp/SelectorEventHandler" sourcefilename="SelectorEventHandler.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/DeadlineAction" sourcefilename="DeadlineAction.java"><method name="&lt;init&gt;" desc="(JLjava/lang/Runnable;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadline" desc="()J" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAction" desc="()Ljava/lang/Runnable;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/DeadlineAction$1" sourcefilename="DeadlineAction.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lorg/spf4j/io/tcp/DeadlineAction;Lorg/spf4j/io/tcp/DeadlineAction;)I" line="44"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/AcceptorSelectorEventHandler" sourcefilename="AcceptorSelectorEventHandler.java"><method name="&lt;init&gt;" desc="(Ljava/nio/channels/ServerSocketChannel;Lorg/spf4j/io/tcp/ClientHandler;Ljava/nio/channels/Selector;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/BlockingQueue;Lorg/spf4j/ds/UpdateablePriorityQueue;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/nio/channels/SelectionKey;)V" line="77"><counter type="INSTRUCTION" missed="17" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canRunAsync" desc="()Z" line="96"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAsync" desc="(Ljava/nio/channels/SelectionKey;)V" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialInterestRegistration" desc="()Ljava/nio/channels/SelectionKey;" line="106"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="58" covered="66"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/TcpServer$TcpServerGuavaService" sourcefilename="TcpServer.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Lorg/spf4j/io/tcp/ClientHandler;III)V" line="118"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startUp" desc="()V" line="130"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="152"><counter type="INSTRUCTION" missed="8" covered="122"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executor" desc="()Ljava/util/concurrent/Executor;" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serviceName" desc="()Ljava/lang/String;" line="212"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triggerShutdown" desc="()V" line="217"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="223"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="229"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$startUp$0" desc="()Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="202"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="12" covered="53"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/TcpServer" sourcefilename="TcpServer.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Lorg/spf4j/io/tcp/ClientHandler;II)V" line="76"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Lorg/spf4j/io/tcp/ClientHandler;III)V" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getServiceName" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/tcp/TcpServer$1" sourcefilename="TcpServer.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Lorg/spf4j/io/tcp/ClientHandler;III)V" line="82"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lcom/google/common/util/concurrent/Service;" line="85"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TcpServer.java"><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="28" mb="0" cb="0"/><line nr="85" mi="0" ci="14" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="10" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="12" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="13" mb="0" cb="4"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="14" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="1" cb="1"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="37" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="270"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="12" covered="61"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AcceptorSelectorEventHandler.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="37" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="66"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeadlineAction.java"><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="2" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="23"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SelectorEventHandler.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="155" covered="362"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="25" covered="87"/><counter type="COMPLEXITY" missed="11" covered="32"/><counter type="METHOD" missed="6" covered="24"/><counter type="CLASS" missed="0" covered="7"/></package><package name="org/spf4j/avro/zfork"><class name="org/spf4j/avro/zfork/ZFUtilInterface" sourcefilename="ZFUtilInterface.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createField" desc="(Ljava/lang/String;Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/Object;ZZLorg/apache/avro/Schema$Field$Order;)Lorg/apache/avro/Schema$Field;" line="32"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRecordSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Z)Lorg/apache/avro/Schema;" line="38"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createRecordSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Lorg/apache/avro/Schema;" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ZFUtilInterface.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/spf4j/failsafe/concurrent"><class name="org/spf4j/failsafe/concurrent/FailSafeExecutorImpl$RetryManager" sourcefilename="FailSafeExecutorImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FailSafeExecutorImpl$2" sourcefilename="FailSafeExecutorImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl;[Ljava/util/concurrent/Future;Ljava/util/concurrent/BlockingQueue;Lorg/spf4j/concurrent/InterruptibleCompletableFuture;)V" line="256"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/util/concurrent/Future;)Z" line="260"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/concurrent/FailSafeExecutorImpl$1" sourcefilename="FailSafeExecutorImpl.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="(Z)Z" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCancelled" desc="()Z" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDone" desc="()Z" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="3"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FutureTask" sourcefilename="FutureTask.java"><method name="report" desc="(I)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="109"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Runnable;Ljava/lang/Object;)V" line="126"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCallable" desc="(Ljava/util/concurrent/Callable;)V" line="132"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCallable" desc="()Ljava/util/concurrent/Callable;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCancelled" desc="()Z" line="147"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDone" desc="()Z" line="151"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cancel" desc="(Z)Z" line="155"><counter type="INSTRUCTION" missed="1" covered="33"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="181"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="193"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="done" desc="()V" line="211"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setException" desc="(Ljava/lang/Throwable;)Z" line="240"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="249"><counter type="INSTRUCTION" missed="1" covered="66"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAndReset" desc="()Z" line="298"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlePossibleCancellationInterrupt" desc="(I)V" line="335"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finishCompletion" desc="()V" line="370"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="awaitDone" desc="(ZJ)I" line="401"><counter type="INSTRUCTION" missed="31" covered="52"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="8" covered="17"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeWaiter" desc="(Lorg/spf4j/failsafe/concurrent/FutureTask$WaitNode;)V" line="444"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="488"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="476"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="209" covered="336"/><counter type="BRANCH" missed="58" covered="48"/><counter type="LINE" missed="64" covered="102"/><counter type="COMPLEXITY" missed="45" covered="30"/><counter type="METHOD" missed="6" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FailSafeExecutorImpl$ConsumableRetryFutureTask" sourcefilename="FailSafeExecutorImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/concurrent/ConditionalConsumer;Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;Ljava/util/concurrent/DelayQueue;Ljava/lang/Runnable;)V" line="425"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="done" desc="()V" line="431"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/DefaultFailSafeExecutor" sourcefilename="DefaultFailSafeExecutor.java"><method name="instance" desc="()Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl;" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FailSafeExecutorImpl" sourcefilename="FailSafeExecutorImpl.java"><method name="startRetryManager" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdownRetryManager" desc="()V" line="112"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="151"><counter type="INSTRUCTION" missed="10" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initiateClose" desc="()V" line="168"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submit" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;)Ljava/util/concurrent/Future;" line="175"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submitRx" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;" line="187"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submit" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;IJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;" line="211"><counter type="INSTRUCTION" missed="5" covered="116"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submitRx" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;IJLjava/util/concurrent/TimeUnit;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;" line="249"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;)V" line="316"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="323"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submitRx$6" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl$ConsumableRetryFutureTask;)V" line="302"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submitRx$5" desc="(Lorg/spf4j/failsafe/concurrent/DelayedTask;)V" line="300"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submitRx$4" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl$ConsumableRetryFutureTask;)V" line="290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submit$3" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl$ConsumableRetryFutureTask;)V" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$submit$2" desc="(Lorg/spf4j/failsafe/concurrent/DelayedTask;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$submit$1" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutorImpl$ConsumableRetryFutureTask;)V" line="223"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$submitRx$0" desc="(Lorg/spf4j/concurrent/InterruptibleCompletableFuture;Ljava/util/concurrent/Future;)Z" line="192"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="247" covered="257"/><counter type="BRANCH" missed="13" covered="15"/><counter type="LINE" missed="47" covered="60"/><counter type="COMPLEXITY" missed="17" covered="16"/><counter type="METHOD" missed="8" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/RetryFutureTask" sourcefilename="RetryFutureTask.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;Ljava/util/concurrent/DelayQueue;Ljava/lang/Runnable;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExec" desc="(Lorg/spf4j/failsafe/concurrent/DelayedTask;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="(Z)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(I)Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setException" desc="(Ljava/lang/Throwable;)Z" line="105"><counter type="INSTRUCTION" missed="18" covered="118"/><counter type="BRANCH" missed="5" covered="16"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)Z" line="149"><counter type="INSTRUCTION" missed="29" covered="63"/><counter type="BRANCH" missed="5" covered="4"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="241"/><counter type="BRANCH" missed="12" covered="24"/><counter type="LINE" missed="7" covered="65"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FutureTask$WaitNode" sourcefilename="FutureTask.java"><method name="&lt;init&gt;" desc="()V" line="360"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FailSafeExecutorImpl$FirstFuture" sourcefilename="FailSafeExecutorImpl.java"><method name="&lt;init&gt;" desc="([Ljava/util/concurrent/Future;Ljava/util/concurrent/BlockingQueue;)V" line="333"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/util/concurrent/Future;)Z" line="343"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="(Z)Z" line="362"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCancelled" desc="()Z" line="376"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDone" desc="()Z" line="390"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="402"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="408"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="151"/><counter type="BRANCH" missed="11" covered="17"/><counter type="LINE" missed="9" covered="32"/><counter type="COMPLEXITY" missed="8" covered="13"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/concurrent/FailSafeExecutor" sourcefilename="FailSafeExecutor.java"><method name="submitRx" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;)Ljava/util/concurrent/CompletableFuture;" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submitRx" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;IJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;" line="69"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submitRx$1" desc="()Lorg/spf4j/concurrent/InterruptibleCompletableFuture;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submitRx$0" desc="()Lorg/spf4j/concurrent/InterruptibleCompletableFuture;" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/concurrent/DelayedTask" sourcefilename="DelayedTask.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Runnable;J)V" line="53"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelay" desc="(Ljava/util/concurrent/TimeUnit;)J" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Ljava/util/concurrent/Delayed;)I" line="66"><counter type="INSTRUCTION" missed="20" covered="21"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="81"><counter type="INSTRUCTION" missed="10" covered="23"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunnable" desc="()Ljava/lang/Runnable;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="73"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultFailSafeExecutor.java"><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FailSafeExecutorImpl.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="1" cb="3"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="1" cb="1"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="1" cb="1"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="2" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="10" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="12" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="1" cb="1"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="11" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="2"/><line nr="225" mi="0" ci="11" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="11" mb="0" cb="0"/><line nr="238" mi="0" ci="16" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="2" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="19" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="2" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="6" ci="0" mb="2" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="2" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="2" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="11" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="11" ci="0" mb="0" cb="0"/><line nr="291" mi="7" ci="0" mb="2" cb="0"/><line nr="292" mi="11" ci="0" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="2" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="12" ci="0" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="11" ci="0" mb="0" cb="0"/><line nr="305" mi="16" ci="0" mb="2" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="10" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="27" ci="0" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="2"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="9" mb="0" cb="2"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="5" mb="1" cb="3"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="11" mb="0" cb="2"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="6" mb="1" cb="3"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="11" ci="0" mb="2" cb="0"/><line nr="379" mi="5" ci="0" mb="0" cb="0"/><line nr="380" mi="5" ci="0" mb="4" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="0" ci="11" mb="0" cb="2"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="3" ci="2" mb="3" cb="1"/><line nr="394" mi="2" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="7" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="2"/><line nr="410" mi="0" ci="16" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="368" covered="469"/><counter type="BRANCH" missed="34" covered="34"/><counter type="LINE" missed="77" covered="110"/><counter type="COMPLEXITY" missed="38" covered="34"/><counter type="METHOD" missed="16" covered="22"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="FutureTask.java"><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="2"/><line nr="151" mi="7" ci="0" mb="2" cb="0"/><line nr="155" mi="1" ci="11" mb="1" cb="3"/><line nr="156" mi="0" ci="2" mb="1" cb="1"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="1" cb="1"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="2" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="2" cb="0"/><line nr="198" mi="6" ci="0" mb="2" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="1" cb="1"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="1" cb="1"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="1" cb="1"/><line nr="250" mi="0" ci="2" mb="1" cb="1"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="2" cb="2"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="2"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="4"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="2" cb="0"/><line nr="299" mi="2" ci="0" mb="2" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="4" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="2" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="8" ci="0" mb="4" cb="0"/><line nr="335" mi="0" ci="3" mb="1" cb="1"/><line nr="336" mi="4" ci="0" mb="2" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="2"/><line nr="371" mi="0" ci="7" mb="1" cb="1"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="1" cb="1"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="1" cb="1"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="383" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="4" ci="4" mb="1" cb="1"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="1" cb="1"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="2"/><line nr="412" mi="0" ci="2" mb="1" cb="1"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="1" cb="1"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="0" cb="2"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="2"/><line nr="422" mi="0" ci="12" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="1" cb="1"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="2" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="444" mi="2" ci="0" mb="2" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="448" mi="10" ci="0" mb="2" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="2" cb="0"/><line nr="451" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="2" cb="0"/><line nr="453" mi="3" ci="0" mb="0" cb="0"/><line nr="454" mi="3" ci="0" mb="2" cb="0"/><line nr="456" mi="1" ci="0" mb="0" cb="0"/><line nr="458" mi="7" ci="0" mb="2" cb="0"/><line nr="460" mi="1" ci="0" mb="0" cb="0"/><line nr="463" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="478" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="480" mi="0" ci="6" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="5" ci="0" mb="0" cb="0"/><line nr="483" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="488" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="209" covered="342"/><counter type="BRANCH" missed="58" covered="48"/><counter type="LINE" missed="64" covered="105"/><counter type="COMPLEXITY" missed="45" covered="31"/><counter type="METHOD" missed="6" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RetryFutureTask.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="2" cb="2"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="1" cb="2"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="1" cb="3"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="7" mb="1" cb="3"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="1" cb="3"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="13" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="1" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="1" cb="1"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="2" cb="0"/><line nr="170" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="241"/><counter type="BRANCH" missed="12" covered="24"/><counter type="LINE" missed="7" covered="65"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DelayedTask.java"><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="1" cb="1"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="2" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="1" cb="1"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="1" cb="1"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="1" cb="1"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="73"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FailSafeExecutor.java"><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="69" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="698" covered="1139"/><counter type="BRANCH" missed="112" covered="114"/><counter type="LINE" missed="159" covered="305"/><counter type="COMPLEXITY" missed="106" covered="90"/><counter type="METHOD" missed="28" covered="54"/><counter type="CLASS" missed="2" covered="10"/></package><package name="org/spf4j/perf/impl/ms/tsdb"><class name="org/spf4j/perf/impl/ms/tsdb/AvroFileInfo" sourcefilename="AvroFileInfo.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lorg/apache/avro/file/DataFileWriter;JJ)V" line="51"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilePath" desc="()Ljava/nio/file/Path;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileWriter" desc="()Lorg/apache/avro/file/DataFileWriter;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileEpoch" desc="()J" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitNrRecords" desc="()J" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="24"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/tsdb/AvroMeasurementStoreReader$TimeCalibrate" sourcefilename="AvroMeasurementStoreReader.java"><method name="&lt;init&gt;" desc="(J)V" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/spf4j/tsdb2/avro/Observation;)Lorg/spf4j/tsdb2/avro/Observation;" line="202"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/tsdb/AvroMeasurementStoreReader" sourcefilename="AvroMeasurementStoreReader.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;[Ljava/nio/file/Path;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookupObservationFiles" desc="(Ljava/nio/file/Path;)Ljava/util/List;" line="89"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMeasurements" desc="(Ljava/util/function/Predicate;)Ljava/util/Collection;" line="124"><counter type="INSTRUCTION" missed="8" covered="79"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObservations" desc="()Lorg/spf4j/base/avro/AvroCloseableIterable;" line="152"><counter type="INSTRUCTION" missed="20" covered="71"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getObservations$3" desc="([Ljava/io/Closeable;)V" line="178"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getObservations$2" desc="()V" line="154"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getMeasurements$1" desc="(Ljava/util/Map;)Ljava/util/ArrayList;" line="147"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMeasurements$0" desc="(Lorg/spf4j/base/Pair;)Lorg/apache/avro/Schema;" line="144"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="139" covered="182"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="26" covered="40"/><counter type="COMPLEXITY" missed="11" covered="9"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/tsdb/TSDBTxtMeasurementStore" sourcefilename="TSDBTxtMeasurementStore.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="84"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="121"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/tsdb/AvroMeasurementStore" sourcefilename="AvroMeasurementStore.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/lang/String;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/lang/String;Z)V" line="86"><counter type="INSTRUCTION" missed="7" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initWriter" desc="(Ljava/lang/String;Ljava/nio/file/Path;ZLjava/lang/Class;)Lorg/spf4j/perf/impl/ms/tsdb/AvroFileInfo;" line="114"><counter type="INSTRUCTION" missed="56" covered="61"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="14" covered="11"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="154"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrRecords" desc="(Ljava/nio/file/Path;Ljava/lang/Class;)J" line="163"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="179"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="186"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="197"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInfoFile" desc="()Ljava/nio/file/Path;" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataFile" desc="()Ljava/nio/file/Path;" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="215"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="222"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="237"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="23" covered="56"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/tsdb/AvroMeasurementStoreReader$1" sourcefilename="AvroMeasurementStoreReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="101"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/nio/file/Path;)Z" line="104"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ms/tsdb/TSDBMeasurementStoreReader" sourcefilename="TSDBMeasurementStoreReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurements" desc="(Ljava/util/function/Predicate;)Ljava/util/Collection;" line="70"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMeasurementData" desc="(Lorg/apache/avro/Schema;Ljava/time/Instant;Ljava/time/Instant;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="99"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObservations" desc="()Lorg/spf4j/base/avro/AvroCloseableIterable;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getMeasurements$1" desc="(Ljava/util/Map;)Ljava/util/ArrayList;" line="92"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getMeasurements$0" desc="(Lorg/spf4j/base/Pair;)Lorg/apache/avro/Schema;" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="128" covered="6"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="25" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/tsdb/TSDBMeasurementStore" sourcefilename="TSDBMeasurementStore.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="79"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTables" desc="()[Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableAsCsv" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDBWriter" desc="()Lorg/spf4j/tsdb2/TSDBWriter;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="49"/><counter type="LINE" missed="9" covered="10"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TSDBTxtMeasurementStore.java"><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="121"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvroMeasurementStore.java"><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="1" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="14" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="16" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="14" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="14" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="2" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="13" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="42" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="237"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="23" covered="56"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvroMeasurementStoreReader.java"><line nr="79" mi="9" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="2" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="13" ci="0" mb="4" cb="0"/><line nr="115" mi="10" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="15" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="1" cb="1"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="1" cb="1"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="9" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="1" cb="1"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="18" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="175" covered="197"/><counter type="BRANCH" missed="19" covered="9"/><counter type="LINE" missed="34" covered="45"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="AvroFileInfo.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="24"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TSDBMeasurementStore.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="49"/><counter type="LINE" missed="9" covered="10"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TSDBMeasurementStoreReader.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="11" ci="0" mb="2" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="2" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="6"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="25" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="509" covered="634"/><counter type="BRANCH" missed="33" covered="15"/><counter type="LINE" missed="94" covered="150"/><counter type="COMPLEXITY" missed="41" covered="39"/><counter type="METHOD" missed="22" covered="34"/><counter type="CLASS" missed="1" covered="7"/></package><package name="org/spf4j/io"><class name="org/spf4j/io/WriterOutputStream" sourcefilename="WriterOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;I)V" line="116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/Charset;I)V" line="128"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/Charset;)V" line="145"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;I)V" line="156"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flushOutput" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/IOConsumer" sourcefilename="IOConsumer.java"><method name="accept" desc="(Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/PipedOutputStream" sourcefilename="PipedOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IJ)V" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(JI)V" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILorg/spf4j/recyclable/SizedRecyclingSupplier;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/spf4j/recyclable/SizedRecyclingSupplier;Ljava/lang/Long;)V" line="119"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Long;ILorg/spf4j/recyclable/SizedRecyclingSupplier;)V" line="72"><counter type="INSTRUCTION" missed="12" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="147"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNanoDeadline" desc="()J" line="152"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeUntil" desc="([BIIJ)V" line="160"><counter type="INSTRUCTION" missed="36" covered="117"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="4" covered="27"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="200"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeUntil" desc="(IJ)V" line="205"><counter type="INSTRUCTION" missed="14" covered="84"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableToWrite" desc="()I" line="232"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableToRead" desc="()I" line="240"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contentInBuffer" desc="()I" line="248"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="257"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="268"><counter type="INSTRUCTION" missed="8" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="(Ljava/lang/Exception;)V" line="295"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInputStream" desc="()Ljava/io/InputStream;" line="306"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnreadBytesFromBuffer" desc="()[B" line="317"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="334"><counter type="INSTRUCTION" missed="45" covered="57"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="230" covered="468"/><counter type="BRANCH" missed="18" covered="44"/><counter type="LINE" missed="35" covered="103"/><counter type="COMPLEXITY" missed="20" covered="32"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/ConfigurableAppenderSupplier$ObjectAppenderContentTypeAdapter" sourcefilename="ConfigurableAppenderSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/ObjectAppender;Lorg/spf4j/base/CoreTextMediaType;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Object;Ljava/lang/Appendable;)V" line="201"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="207"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="212"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="9"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/DebugInputStream" sourcefilename="DebugInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/File;)V" line="38"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="84"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/PushbackInputStreamEx" sourcefilename="PushbackInputStreamEx.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;I)V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnderlyingStream" desc="()Ljava/io/InputStream;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unread" desc="(I)V" line="69"><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/DeletingVisitor" sourcefilename="DeletingVisitor.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="55"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="suppress" desc="(Ljava/io/IOException;Ljava/nio/file/Path;)V" line="67"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;" line="77"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFileFailed" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;" line="97"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/SetFilesReadOnlyVisitor" sourcefilename="SetFilesReadOnlyVisitor.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="49"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFileFailed" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/LazyOutputStreamWrapper" sourcefilename="LazyOutputStreamWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;)V" line="53"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/io/OutputStream;" line="59"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="79"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="89"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/ReaderInputStream" sourcefilename="ReaderInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V" line="104"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V" line="72"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="136"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="141"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="149"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="grow" desc="(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;" line="212"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readMoreChars" desc="()V" line="229"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="availableCapacity" desc="(Ljava/nio/Buffer;)I" line="251"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startDraining" desc="(Z)V" line="260"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="drain" desc="([BII)I" line="273"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="280"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="333" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="74" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/PushbackReader" sourcefilename="PushbackReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;I)V" line="48"><counter type="INSTRUCTION" missed="14" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureOpen" desc="()V" line="61"><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="78"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unread" desc="(I)V" line="110"><counter type="INSTRUCTION" missed="24" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unread" desc="([CII)V" line="122"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unread" desc="([C)V" line="131"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ready" desc="()Z" line="136"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="142"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="147"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="158"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="164"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="324" covered="65"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="56" covered="18"/><counter type="COMPLEXITY" missed="29" covered="6"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/Streams" sourcefilename="Streams.java"><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)J" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;I)J" line="74"><counter type="INSTRUCTION" missed="17" covered="85"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;IJ)J" line="128"><counter type="INSTRUCTION" missed="150" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWriter" desc="(Ljava/lang/Appendable;)Ljava/io/Writer;" line="199"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="178" covered="90"/><counter type="BRANCH" missed="29" covered="11"/><counter type="LINE" missed="51" covered="29"/><counter type="COMPLEXITY" missed="17" covered="7"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/ByteArrayBuilder" sourcefilename="ByteArrayBuilder.java"><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuffer" desc="()[B" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/spf4j/recyclable/SizedRecyclingSupplier;)V" line="97"><counter type="INSTRUCTION" missed="23" covered="16"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="126"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="grow" desc="(I)V" line="139"><counter type="INSTRUCTION" missed="10" covered="44"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hugeCapacity" desc="(I)I" line="158"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="166"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="176"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="192"><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/io/OutputStream;)V" line="210"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="222"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetCountTo" desc="(I)V" line="226"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toByteArray" desc="()[B" line="239"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="250"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="269"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/nio/charset/Charset;)Ljava/lang/String;" line="274"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="286"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="164"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="15" covered="46"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/BufferedInputStream" sourcefilename="BufferedInputStream.java"><method name="getInIfOpen" desc="()Ljava/io/InputStream;" line="71"><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBufIfOpen" desc="()[B" line="79"><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;I)V" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;ILorg/spf4j/recyclable/SizedRecyclingSupplier;)V" line="64"><counter type="INSTRUCTION" missed="12" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fill" desc="()V" line="105"><counter type="INSTRUCTION" missed="94" covered="35"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="19" covered="8"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="141"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read1" desc="([BII)I" line="151"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="171"><counter type="INSTRUCTION" missed="8" covered="58"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="198"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="225"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="230"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="236"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="245"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="252"><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="309" covered="238"/><counter type="BRANCH" missed="41" covered="27"/><counter type="LINE" missed="55" covered="61"/><counter type="COMPLEXITY" missed="33" covered="18"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/AppendableOutputStream" sourcefilename="AppendableOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/nio/charset/CharsetDecoder;)V" line="124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/nio/charset/CharsetDecoder;I)V" line="135"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/nio/charset/Charset;I)V" line="151"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/nio/charset/Charset;)V" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/lang/String;I)V" line="179"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/lang/String;)V" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="205"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([B)V" line="224"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="236"><counter type="INSTRUCTION" missed="12" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="255"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="267"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processInput" desc="(Z)V" line="285"><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flushOutput" desc="()V" line="309"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIbmJdkWithBrokenUTF16" desc="(Ljava/nio/charset/Charset;)V" line="322"><counter type="INSTRUCTION" missed="12" covered="67"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="356"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="260"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="15" covered="75"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/AppendableLimiterWithOverflow" sourcefilename="AppendableLimiterWithOverflow.java"><method name="&lt;init&gt;" desc="(ILjava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Ljava/lang/Appendable;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Appendable;Lorg/spf4j/io/AppendableLimiterWithOverflow$OverflowSupplier;)V" line="108"><counter type="INSTRUCTION" missed="16" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="131"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="141"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="175"><counter type="INSTRUCTION" missed="10" covered="64"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOverflowIfNeeded" desc="()V" line="200"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="219"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="228"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="312"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="4" covered="71"/><counter type="COMPLEXITY" missed="6" covered="19"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/IOTimeoutException" sourcefilename="IOTimeoutException.java"><method name="&lt;init&gt;" desc="(JJ)V" line="52"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadline" desc="()J" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeadlineNanos" desc="()J" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMillisAfterDeadline" desc="()J" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNanosAfterDeadline" desc="()J" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="32"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/PipedOutputStream$PipedInputStream" sourcefilename="PipedOutputStream.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/PipedOutputStream;)V" line="355"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutputStream" desc="()Lorg/spf4j/io/PipedOutputStream;" line="361"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="366"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUntil" desc="(J)I" line="371"><counter type="INSTRUCTION" missed="48" covered="84"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="406"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUntil" desc="(I[BIJ)I" line="412"><counter type="INSTRUCTION" missed="48" covered="138"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="available" desc="()I" line="455"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="465"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="295"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="15" covered="61"/><counter type="COMPLEXITY" missed="13" covered="16"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/MemorizingBufferedInputStream" sourcefilename="MemorizingBufferedInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;I)V" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;I)V" line="101"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;IILorg/spf4j/recyclable/SizedRecyclingSupplier;Ljava/nio/charset/Charset;)V" line="108"><counter type="INSTRUCTION" missed="30" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableToWrite" desc="()I" line="138"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableToRead" desc="()I" line="146"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableInMemory" desc="()I" line="154"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReadBytesFromBuffer" desc="()[B" line="163"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnreadBytesFromBuffer" desc="()[B" line="179"><counter type="INSTRUCTION" missed="10" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryCleanup" desc="(I)I" line="196"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fill" desc="()V" line="214"><counter type="INSTRUCTION" missed="12" covered="84"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="246"><counter type="INSTRUCTION" missed="40" covered="92"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="282"><counter type="INSTRUCTION" missed="27" covered="47"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="available" desc="()I" line="307"><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="316"><counter type="INSTRUCTION" missed="47" covered="96"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="11" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReadBytes" desc="()J" line="351"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="356"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="370"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="375"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="380"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="236" covered="597"/><counter type="BRANCH" missed="21" covered="57"/><counter type="LINE" missed="39" covered="133"/><counter type="COMPLEXITY" missed="26" covered="35"/><counter type="METHOD" missed="7" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/ClosedOutputStream" sourcefilename="ClosedOutputStream.java"><method name="write" desc="(I)V" line="49"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/ConfigurableAppenderSupplier" sourcefilename="ConfigurableAppenderSupplier.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLjava/util/function/Predicate;[Lorg/spf4j/io/ObjectAppender;)V" line="69"><counter type="INSTRUCTION" missed="28" covered="87"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppenderType" desc="(Lorg/spf4j/io/ObjectAppender;)Ljava/lang/Class;" line="100"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/Class;[Lorg/spf4j/io/ObjectAppender;)I" line="128"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lorg/spf4j/base/CoreTextMediaType;Ljava/lang/Class;Ljava/util/function/Function;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/Class;Lorg/spf4j/io/ObjectAppender;)V" line="143"><counter type="INSTRUCTION" missed="16" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRegister" desc="(Ljava/lang/Class;Lorg/spf4j/io/ObjectAppender;)Z" line="150"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/Class;Lorg/spf4j/base/CoreTextMediaType;Lorg/spf4j/io/ObjectAppender;)V" line="155"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRegister" desc="(Ljava/lang/Class;Lorg/spf4j/base/CoreTextMediaType;Lorg/spf4j/io/ObjectAppender;)Z" line="163"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregister" desc="(Ljava/lang/Class;)Z" line="169"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lorg/spf4j/base/CoreTextMediaType;Ljava/lang/reflect/Type;)Lorg/spf4j/io/ObjectAppender;" line="181"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="186"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Class;)Z" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="224"/><counter type="BRANCH" missed="17" covered="23"/><counter type="LINE" missed="16" covered="46"/><counter type="COMPLEXITY" missed="15" covered="18"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/AppendableWriter" sourcefilename="AppendableWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="61"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="84"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="97"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="104"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="111"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="122"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNotClosed" desc="()V" line="134"><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="141"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="60"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="21" covered="20"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/BufferedOutputStream" sourcefilename="BufferedOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;I)V" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;ILorg/spf4j/recyclable/SizedRecyclingSupplier;)V" line="66"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flushBuffer" desc="()V" line="77"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="85"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="96"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="113"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="123"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="226" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/ObjectAppender$1" sourcefilename="ObjectAppender.java"><method name="&lt;init&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Object;Ljava/lang/Appendable;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/PathsIOException" sourcefilename="PathsIOException.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)V" line="51"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)V" line="58"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPaths" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/Csv" sourcefilename="Csv.java"><method name="readSystemProperty" desc="(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="29" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRow" desc="(Ljava/lang/Appendable;[Ljava/lang/Object;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRow2" desc="(Ljava/lang/Appendable;Ljava/lang/Object;[Ljava/lang/Object;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRow" desc="(Ljava/lang/Appendable;[J)V" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRowNoEOL" desc="([JLjava/lang/Appendable;)V" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeCsvRow" desc="(Ljava/lang/Appendable;Ljava/lang/Iterable;)V" line="111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeCsvRowNoEOL" desc="(Ljava/lang/Iterable;Ljava/lang/Appendable;)V" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/spf4j/io/Csv$CsvMapHandler;)Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/spf4j/io/Csv$CsvHandler;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/Reader;)Ljava/util/List;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/Reader;Lorg/spf4j/io/Csv$CsvMapHandler;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRow" desc="(Ljava/lang/String;)Ljava/util/List;" line="139"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readRow" desc="(Ljava/io/Reader;)Ljava/util/List;" line="146"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRow" desc="(Ljava/io/Reader;Lorg/spf4j/io/Csv$CsvRowHandler;)Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/Reader;Lorg/spf4j/io/Csv$CsvHandler;)Ljava/lang/Object;" line="156"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readNoBom" desc="(Lorg/spf4j/io/PushbackReader;Lorg/spf4j/io/Csv$CsvHandler;)Ljava/lang/Object;" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIterable" desc="(Ljava/io/Reader;)Ljava/lang/Iterable;" line="181"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reader" desc="(Ljava/io/Reader;)Lorg/spf4j/io/csv/CsvReader;" line="185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readerNoBOM" desc="(Lorg/spf4j/io/PushbackReader;)Lorg/spf4j/io/csv/CsvReader;" line="189"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvElement" desc="(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeQuotedCsvElement" desc="(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V" line="201"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCsvElement" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="215"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCsvElement" desc="(Ljava/io/Reader;Ljava/lang/StringBuilder;)I" line="238"><counter type="INSTRUCTION" missed="4" covered="64"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="101" covered="198"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="27" covered="50"/><counter type="COMPLEXITY" missed="16" covered="23"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/CountingInputStream" sourcefilename="CountingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;J)V" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="31"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCount" desc="()J" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="54"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="63"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="72"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="86"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWrapped" desc="()Ljava/io/InputStream;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="47"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/AppendableLimiterWithOverflow$1" sourcefilename="AppendableLimiterWithOverflow.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOverflowReference" desc="()Ljava/lang/CharSequence;" line="92"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOverflowWriter" desc="()Ljava/io/Writer;" line="101"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/FSWatchEventSensitivity" sourcefilename="FSWatchEventSensitivity.java"><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/EmptyInputStream" sourcefilename="EmptyInputStream.java"><method name="read" desc="()I" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/ObjectAppenderSupplier" sourcefilename="ObjectAppenderSupplier.java"><method name="get" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/io/ObjectAppender;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/ObjectAppender" sourcefilename="ObjectAppender.java"><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNullable" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="71"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNullableJson" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="81"><counter type="INSTRUCTION" missed="29" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;Ljava/lang/Appendable;)V" line="107"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="40"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="12" covered="12"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AppendableOutputStream.java"><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="1" cb="1"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="1" cb="1"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="1" cb="1"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="12" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="2"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="2"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="7" mb="0" cb="2"/><line nr="333" mi="0" ci="6" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="13" mb="0" cb="2"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="1" cb="1"/><line nr="347" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="260"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="15" covered="75"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PipedOutputStream.java"><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="2" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="12" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="1" cb="1"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="1" cb="3"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="1" cb="1"/><line nr="167" mi="7" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="14" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="14" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="9" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="9" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="2"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="9" mb="0" cb="4"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="2"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="13" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="14" mb="0" cb="0"/><line nr="221" mi="0" ci="12" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="2"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="2"/><line nr="233" mi="0" ci="12" mb="0" cb="0"/><line nr="235" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="2"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="10" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="2" cb="0"/><line nr="249" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="10" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="1" cb="3"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="1" cb="1"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="1" cb="3"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="8" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="2" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="2" cb="0"/><line nr="323" mi="10" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="0" cb="0"/><line nr="326" mi="8" ci="0" mb="0" cb="0"/><line nr="327" mi="8" ci="0" mb="0" cb="0"/><line nr="329" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="1" cb="1"/><line nr="336" mi="34" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="43" mb="1" cb="1"/><line nr="347" mi="6" ci="6" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="14" mb="1" cb="5"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="1" cb="1"/><line nr="376" mi="7" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="1" ci="0" mb="0" cb="0"/><line nr="381" mi="14" ci="0" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="1" cb="1"/><line nr="386" mi="13" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="2"/><line nr="389" mi="0" ci="4" mb="1" cb="1"/><line nr="390" mi="13" ci="0" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="8" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="8" mb="0" cb="2"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="7" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="14" mb="1" cb="5"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="1" cb="1"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="423" mi="14" ci="0" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="1" cb="1"/><line nr="427" mi="13" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="2"/><line nr="430" mi="0" ci="4" mb="1" cb="1"/><line nr="431" mi="13" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="11" mb="0" cb="0"/><line nr="437" mi="0" ci="10" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="9" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="2"/><line nr="442" mi="0" ci="10" mb="0" cb="0"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="0" ci="6" mb="0" cb="0"/><line nr="445" mi="0" ci="8" mb="0" cb="2"/><line nr="446" mi="0" ci="5" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="3" ci="0" mb="2" cb="0"/><line nr="457" mi="14" ci="0" mb="0" cb="0"/><line nr="459" mi="6" ci="0" mb="0" cb="0"/><line nr="465" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="12" mb="2" cb="4"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="358" covered="763"/><counter type="BRANCH" missed="30" covered="74"/><counter type="LINE" missed="50" covered="164"/><counter type="COMPLEXITY" missed="33" covered="48"/><counter type="METHOD" missed="8" covered="21"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IOTimeoutException.java"><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="32"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AppendableWriter.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="2" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="60"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="21" covered="20"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReaderInputStream.java"><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="14" ci="0" mb="2" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="12" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="4" cb="0"/><line nr="165" mi="6" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="2" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="180" mi="10" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="2" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="2" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="2" cb="0"/><line nr="230" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="11" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="2" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="4" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="7" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="37" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="333" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="74" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectAppenderSupplier.java"><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IOConsumer.java"><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectAppender.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="1" cb="1"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="4"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="84"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="12" covered="26"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BufferedOutputStream.java"><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="13" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="13" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="13" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="38" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="226" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SetFilesReadOnlyVisitor.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="2" cb="0"/><line nr="50" mi="14" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyInputStream.java"><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DeletingVisitor.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="4" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FSWatchEventSensitivity.java"><line nr="38" mi="16" ci="0" mb="0" cb="0"/><line nr="39" mi="18" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ClosedOutputStream.java"><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CountingInputStream.java"><line nr="31" mi="3" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="13" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="17" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="47"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PushbackReader.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="14" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="12" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="2"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="12" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="4" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="6" ci="0" mb="2" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="12" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="0" ci="13" mb="0" cb="0"/><line nr="117" mi="12" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="13" ci="0" mb="4" cb="0"/><line nr="142" mi="12" ci="0" mb="0" cb="0"/><line nr="147" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="12" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="7" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="5" ci="0" mb="2" cb="0"/><line nr="172" mi="8" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="25" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="324" covered="65"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="56" covered="18"/><counter type="COMPLEXITY" missed="29" covered="6"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MemorizingBufferedInputStream.java"><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="1" cb="1"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="14" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="2"/><line nr="139" mi="0" ci="12" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="2"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="1" cb="1"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="2"/><line nr="169" mi="0" ci="10" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="2"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="1" cb="1"/><line nr="185" mi="10" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="1" cb="1"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="2"/><line nr="205" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="1" cb="1"/><line nr="216" mi="12" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="9" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="2"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="2"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="2"/><line nr="232" mi="0" ci="6" mb="1" cb="1"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="2"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="1" cb="1"/><line nr="247" mi="12" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="2" cb="2"/><line nr="250" mi="16" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="2"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="2"/><line nr="258" mi="0" ci="3" mb="1" cb="1"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="12" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="9" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="2"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="2"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="1" cb="1"/><line nr="283" mi="12" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="2"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="12" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="13" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="1" cb="1"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="1" cb="1"/><line nr="308" mi="12" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="2"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="13" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="2"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="1" cb="1"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="11" mb="0" cb="0"/><line nr="327" mi="0" ci="11" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="7" ci="0" mb="0" cb="0"/><line nr="331" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="7" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="9" mb="0" cb="0"/><line nr="344" mi="0" ci="9" mb="0" cb="0"/><line nr="345" mi="0" ci="9" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="9" ci="0" mb="2" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="2" cb="0"/><line nr="360" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="236" covered="597"/><counter type="BRANCH" missed="21" covered="57"/><counter type="LINE" missed="39" covered="133"/><counter type="COMPLEXITY" missed="26" covered="35"/><counter type="METHOD" missed="7" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DebugInputStream.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PushbackInputStreamEx.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="16" ci="0" mb="2" cb="0"/><line nr="58" mi="20" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Streams.java"><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="4" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="2" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="2" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="2" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="2" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="2" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="178" covered="90"/><counter type="BRANCH" missed="29" covered="11"/><counter type="LINE" missed="51" covered="29"/><counter type="COMPLEXITY" missed="17" covered="7"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AppendableLimiterWithOverflow.java"><line nr="89" mi="0" ci="22" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="16" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="1" cb="1"/><line nr="132" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="3" mb="1" cb="1"/><line nr="186" mi="10" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="1" cb="3"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="1" cb="1"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="52" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="364"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="4" covered="78"/><counter type="COMPLEXITY" missed="6" covered="22"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ByteArrayBuilder.java"><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="12" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="1" cb="1"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="7" ci="0" mb="2" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="15" mb="4" cb="4"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="7" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="10" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="1" cb="1"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="164"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="15" covered="46"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Csv.java"><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="20" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="1" cb="1"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="17" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="2" cb="0"/><line nr="216" mi="8" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="1" cb="1"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="1" cb="1"/><line nr="245" mi="0" ci="3" mb="0" cb="2"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="2"/><line nr="248" mi="0" ci="3" mb="1" cb="1"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="11" mb="3" cb="5"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="198"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="27" covered="50"/><counter type="COMPLEXITY" missed="16" covered="23"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WriterOutputStream.java"><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="2"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PathsIOException.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BufferedInputStream.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="1" cb="1"/><line nr="73" mi="13" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="1" cb="1"/><line nr="81" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="1" cb="1"/><line nr="98" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="2" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="2" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="13" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="12" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="2" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="13" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="8" mb="1" cb="3"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="2"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="15" mb="1" cb="1"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="2"/><line nr="182" mi="1" ci="5" mb="1" cb="1"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="2" cb="2"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="8" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="2" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="2" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="219" mi="8" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="10" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="2" cb="0"/><line nr="238" mi="13" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="1" cb="1"/><line nr="253" mi="0" ci="6" mb="1" cb="1"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="1" cb="1"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="44" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="309" covered="238"/><counter type="BRANCH" missed="41" covered="27"/><counter type="LINE" missed="55" covered="61"/><counter type="COMPLEXITY" missed="33" covered="18"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigurableAppenderSupplier.java"><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="1" cb="1"/><line nr="82" mi="0" ci="5" mb="1" cb="1"/><line nr="83" mi="16" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="16" mb="0" cb="2"/><line nr="90" mi="0" ci="6" mb="1" cb="1"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="2" ci="14" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="1" cb="1"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="1" cb="3"/><line nr="120" mi="0" ci="2" mb="1" cb="1"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="16" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="2" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="1" cb="1"/><line nr="144" mi="16" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="1" cb="1"/><line nr="156" mi="16" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="13" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="10" ci="0" mb="2" cb="0"/><line nr="171" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="2" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="0"/><line nr="186" mi="0" ci="13" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="233"/><counter type="BRANCH" missed="17" covered="23"/><counter type="LINE" missed="21" covered="50"/><counter type="COMPLEXITY" missed="18" covered="19"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LazyOutputStreamWrapper.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3179" covered="3281"/><counter type="BRANCH" missed="299" covered="295"/><counter type="LINE" missed="617" covered="801"/><counter type="COMPLEXITY" missed="337" covered="246"/><counter type="METHOD" missed="139" covered="147"/><counter type="CLASS" missed="11" covered="21"/></package><package name="org/spf4j/security"><class name="org/spf4j/security/AbacAuthorizer" sourcefilename="AbacAuthorizer.java"><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/security/AbacAuthorizer$1" sourcefilename="AbacAuthorizer.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canAccess" desc="(Ljava/security/Principal;Ljava/util/Properties;Ljava/util/Properties;Ljava/util/Properties;)Z" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/security/AbacAuthorizer$2" sourcefilename="AbacAuthorizer.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canAccess" desc="(Ljava/security/Principal;Ljava/util/Properties;Ljava/util/Properties;Ljava/util/Properties;)Z" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/security/SecurityContext$1" sourcefilename="SecurityContext.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserPrincipal" desc="()Ljava/security/Principal;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUserInRole" desc="(Ljava/lang/String;)Z" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canAccess" desc="(Ljava/util/Properties;Ljava/util/Properties;Ljava/util/Properties;)Z" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/security/SecurityContext" sourcefilename="SecurityContext.java"><method name="&lt;clinit&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbacAuthorizer.java"><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="SecurityContext.java"><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="org/spf4j/perf/cpu"><class name="org/spf4j/perf/cpu/CpuUsageSampler$2" sourcefilename="CpuUsageSampler.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/MeasurementRecorder;)V" line="85"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/cpu/CpuUsageSampler$1" sourcefilename="CpuUsageSampler.java"><method name="&lt;init&gt;" desc="(Z)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/cpu/ThreadUsageSampler" sourcefilename="ThreadUsageSampler.java"><method name="writePeakThreadInfo" desc="(Ljava/io/PrintStream;)V" line="104"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logPeakThreadInfo" desc="(Ljava/util/logging/Level;)V" line="124"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPeakThreadInfo" desc="()Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearPeakThreadInfo" desc="()V" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPeakTime" desc="()Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentAliveThreadInfo" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(I)V" line="190"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(IZ)V" line="196"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="()V" line="206"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStarted" desc="()Z" line="214"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="290" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/cpu/ThreadUsageSampler$ThreadStateRecorder" sourcefilename="ThreadUsageSampler.java"><method name="&lt;init&gt;" desc="(IZ)V" line="222"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="231"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/cpu/CpuUsageSampler" sourcefilename="CpuUsageSampler.java"><method name="getProcessCpuTimeNanos" desc="()J" line="72"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(I)V" line="82"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="()V" line="103"><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStarted" desc="()Z" line="111"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="22"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="11" covered="9"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/cpu/ThreadUsageSampler$1" sourcefilename="ThreadUsageSampler.java"><method name="&lt;init&gt;" desc="(Z)V" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="77"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CpuUsageSampler.java"><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="17" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="70" covered="28"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="ThreadUsageSampler.java"><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="4" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="2" cb="0"/><line nr="108" mi="10" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="2" cb="0"/><line nr="128" mi="14" ci="0" mb="0" cb="0"/><line nr="129" mi="11" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="8" ci="0" mb="2" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="7" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="4" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="2" cb="0"/><line nr="197" mi="14" ci="0" mb="0" cb="0"/><line nr="200" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="2" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="2" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="2" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="2" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="16" ci="0" mb="2" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="2" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="427" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="111" covered="0"/><counter type="COMPLEXITY" missed="37" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="497" covered="28"/><counter type="BRANCH" missed="49" covered="3"/><counter type="LINE" missed="127" covered="11"/><counter type="COMPLEXITY" missed="46" covered="5"/><counter type="METHOD" missed="19" covered="5"/><counter type="CLASS" missed="4" covered="2"/></package><package name="org/spf4j/avro"><class name="org/spf4j/avro/AvroCompatUtils" sourcefilename="AvroCompatUtils.java"><method name="createField" desc="(Ljava/lang/String;Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/Object;ZZLorg/apache/avro/Schema$Field$Order;)Lorg/apache/avro/Schema$Field;" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRecordSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Z)Lorg/apache/avro/Schema;" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createRecordSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Lorg/apache/avro/Schema;" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AvroCompatUtils.java"><line nr="34" mi="0" ci="33" mb="0" cb="0"/><line nr="37" mi="4" ci="6" mb="1" cb="1"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="13" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/spf4j/os"><class name="org/spf4j/os/LoggingProcessHandler" sourcefilename="LoggingProcessHandler.java"><method name="&lt;init&gt;" desc="(Ljava/util/logging/Logger;)V" line="52"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="started" desc="(Ljava/lang/Process;)V" line="57"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStdOut" desc="(Ljava/io/InputStream;)Ljava/lang/Void;" line="65"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStdErr" desc="(Ljava/io/InputStream;)Ljava/lang/Void;" line="76"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/os/ProcessUtil" sourcefilename="ProcessUtil.java"><method name="parsePid" desc="()I" line="54"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPid" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPid" desc="(Ljava/lang/Process;)I" line="74"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnixPid" desc="(Ljava/lang/Process;)I" line="82"><counter type="INSTRUCTION" missed="14" covered="12"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWindowsPid" desc="(Ljava/lang/Process;)I" line="94"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/os/ProcessHandler" sourcefilename="ProcessHandler.java"><method name="handleStdErr" desc="(Ljava/io/InputStream;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStdIn" desc="(Ljava/io/OutputStream;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="started" desc="(Ljava/lang/Process;)V" line="59"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/os/StdOutToStringProcessHandler" sourcefilename="StdOutToStringProcessHandler.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="started" desc="(Ljava/lang/Process;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleStdOut" desc="(Ljava/io/InputStream;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleStdErr" desc="(Ljava/io/InputStream;)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="125"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/os/StdOutLineCountProcessHandler" sourcefilename="StdOutLineCountProcessHandler.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStdOut" desc="(Ljava/io/InputStream;)Ljava/lang/Long;" line="50"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/os/ProcessResponse" sourcefilename="ProcessResponse.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Object;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResponseCode" desc="()I" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResponseExitCode" desc="()Lorg/spf4j/base/SysExits;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutput" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrOutput" desc="()Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="25"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/os/OperatingSystem" sourcefilename="OperatingSystem.java"><method name="isMacOsx" desc="()Z" line="133"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWindows" desc="()Z" line="137"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOsName" desc="()Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOSMbean" desc="()Ljava/lang/management/OperatingSystemMXBean;" line="147"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSunJdkOSMBean" desc="()Lcom/sun/management/OperatingSystemMXBean;" line="152"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnixOsMBean" desc="()Lcom/sun/management/UnixOperatingSystemMXBean;" line="157"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOpenFileDescriptorCount" desc="()J" line="161"><counter type="INSTRUCTION" missed="70" covered="5"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="24" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHostName" desc="()Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="21" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxFileDescriptorCount" desc="()J" line="222"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="killProcess" desc="(Ljava/lang/Process;JJ)I" line="229"><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forkExec" desc="([Ljava/lang/String;Lorg/spf4j/os/ProcessHandler;JJ)Lorg/spf4j/os/ProcessResponse;" line="261"><counter type="INSTRUCTION" missed="98" covered="123"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="18" covered="25"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="waitFor" desc="(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Process;JLjava/util/concurrent/TimeUnit;)I" line="338"><counter type="INSTRUCTION" missed="5" covered="60"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forkExec" desc="([Ljava/lang/String;J)Ljava/lang/String;" line="361"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forkExecLog" desc="([Ljava/lang/String;J)V" line="372"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$forkExec$1" desc="(Lorg/spf4j/os/ProcessHandler;Ljava/io/InputStream;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;" line="286"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forkExec$0" desc="(Lorg/spf4j/os/ProcessHandler;Ljava/io/InputStream;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;" line="273"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="23" covered="56"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="298" covered="335"/><counter type="BRANCH" missed="32" covered="14"/><counter type="LINE" missed="72" covered="76"/><counter type="COMPLEXITY" missed="24" covered="16"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ProcessResponse.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="25"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProcessHandler.java"><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StdOutToStringProcessHandler.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="16" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="1" cb="1"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="125"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoggingProcessHandler.java"><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="16" ci="0" mb="0" cb="0"/><line nr="59" mi="15" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="9" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="2" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProcessUtil.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="13" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="13" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StdOutLineCountProcessHandler.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OperatingSystem.java"><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="14" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="1" cb="1"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="2" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="4" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="1" cb="1"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="1" cb="1"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="17" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="1" cb="1"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="2" cb="0"/><line nr="235" mi="12" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="9" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="13" ci="0" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="9" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="2" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="13" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="13" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="2" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="13" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="13" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="1" cb="1"/><line nr="317" mi="0" ci="13" mb="0" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="13" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="1" cb="1"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="1" cb="1"/><line nr="345" mi="0" ci="8" mb="0" cb="0"/><line nr="348" mi="0" ci="8" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="1" cb="1"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="2"/><line nr="354" mi="0" ci="20" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="2"/><line nr="364" mi="0" ci="13" mb="0" cb="0"/><line nr="365" mi="0" ci="12" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="13" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="2" cb="0"/><line nr="377" mi="13" ci="0" mb="0" cb="0"/><line nr="378" mi="11" ci="0" mb="0" cb="0"/><line nr="380" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="298" covered="335"/><counter type="BRANCH" missed="32" covered="14"/><counter type="LINE" missed="72" covered="76"/><counter type="COMPLEXITY" missed="24" covered="16"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="539" covered="525"/><counter type="BRANCH" missed="44" covered="22"/><counter type="LINE" missed="115" covered="121"/><counter type="COMPLEXITY" missed="44" covered="33"/><counter type="METHOD" missed="15" covered="29"/><counter type="CLASS" missed="2" covered="5"/></package><package name="org/spf4j/jmx"><class name="org/spf4j/jmx/JMXBeanMapping" sourcefilename="JMXBeanMapping.java"><method name="isSimpleType" desc="()Z" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/GenericExportedValue" sourcefilename="GenericExportedValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/lang/Class;)V" line="63"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljavax/management/openmbean/CompositeType;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)V" line="111"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWriteable" desc="()Z" line="120"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueType" desc="()Ljava/lang/Class;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="98" covered="50"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="19" covered="17"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/ExportedValuesMBean" sourcefilename="ExportedValuesMBean.java"><method name="&lt;init&gt;" desc="(Ljavax/management/ObjectName;Ljava/util/Map;Ljava/util/Map;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/management/ObjectName;[Lorg/spf4j/jmx/ExportedValue;[Lorg/spf4j/jmx/ExportedOperation;)V" line="86"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/jmx/ExportedValuesMBean;[Lorg/spf4j/jmx/ExportedValue;[Lorg/spf4j/jmx/ExportedOperation;)V" line="104"><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/jmx/ExportedValuesMBean;Ljava/util/Map;Ljava/util/Map;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObjectName" desc="()Ljavax/management/ObjectName;" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttribute" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="36" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAttribute" desc="(Ljavax/management/Attribute;)V" line="170"><counter type="INSTRUCTION" missed="37" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttributes" desc="([Ljava/lang/String;)Ljavax/management/AttributeList;" line="195"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAttributes" desc="(Ljavax/management/AttributeList;)Ljavax/management/AttributeList;" line="222"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" line="251"><counter type="INSTRUCTION" missed="42" covered="8"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMBeanInfo" desc="()Ljavax/management/MBeanInfo;" line="266"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createObjectName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;" line="271"><counter type="INSTRUCTION" missed="18" covered="41"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBeanInfo" desc="()Ljavax/management/MBeanInfo;" line="283"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="308"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="522" covered="252"/><counter type="BRANCH" missed="27" covered="11"/><counter type="LINE" missed="77" covered="53"/><counter type="COMPLEXITY" missed="20" covered="14"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/Client" sourcefilename="Client.java"><method name="getAttribute" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAttribute" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callOperation" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/MapExportedValue" sourcefilename="MapExportedValue.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V" line="54"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="8" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWriteable" desc="()Z" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueType" desc="()Ljava/lang/Class;" line="105"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="127"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="76"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/GenericExportedOperation" sourcefilename="GenericExportedOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/spf4j/base/Invocation;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/String;[Ljava/lang/String;[ZZ)V" line="72"><counter type="INSTRUCTION" missed="75" covered="89"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="11" covered="24"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="26" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterInfos" desc="()[Ljavax/management/MBeanParameterInfo;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="()Ljava/lang/Class;" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="169"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="174"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="147"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="20" covered="36"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/GlobalMXBeanMapperSupplier" sourcefilename="GlobalMXBeanMapperSupplier.java"><method name="get" desc="()Lorg/spf4j/jmx/JMXBeanMappingSupplier;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="register" desc="(Lorg/spf4j/jmx/JMXBeanMappingSupplier;)Lorg/spf4j/jmx/JMXBeanMappingSupplier;" line="56"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOpenTypeMapping" desc="(Ljava/lang/reflect/Type;)Lorg/spf4j/jmx/JMXBeanMapping;" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOpenType" desc="(Ljava/lang/reflect/Type;)Ljavax/management/openmbean/OpenType;" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/ExportedValue" sourcefilename="ExportedValue.java"><method name="toAttributeInfo" desc="()Ljavax/management/MBeanAttributeInfo;" line="66"><counter type="INSTRUCTION" missed="33" covered="45"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="45"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/ExportedOperationImpl" sourcefilename="ExportedOperationImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/Object;Z)V" line="70"><counter type="INSTRUCTION" missed="59" covered="138"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="8" covered="37"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="145"><counter type="INSTRUCTION" missed="69" covered="40"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="9" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterInfos" desc="()[Ljavax/management/MBeanParameterInfo;" line="173"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnType" desc="()Ljava/lang/Class;" line="178"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReturnOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="190"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="161" covered="200"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="19" covered="50"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/JMXBeanMapping$1" sourcefilename="JMXBeanMapping.java"><method name="&lt;init&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOpenValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaType" desc="()Ljava/lang/reflect/Type;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMappedType" desc="()Ljava/lang/Class;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="3"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/ExportedOperation" sourcefilename="ExportedOperation.java"><method name="compareTo" desc="(Lorg/spf4j/jmx/ExportedOperation;)I" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jmx/BeanExportedValue" sourcefilename="BeanExportedValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/reflect/Type;Z)V" line="63"><counter type="INSTRUCTION" missed="21" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withSetter" desc="(Ljava/lang/reflect/Method;)Lorg/spf4j/jmx/BeanExportedValue;" line="82"><counter type="INSTRUCTION" missed="18" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withGetter" desc="(Ljava/lang/reflect/Method;Ljava/lang/String;)Lorg/spf4j/jmx/BeanExportedValue;" line="90"><counter type="INSTRUCTION" missed="18" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="62" covered="14"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="74" covered="37"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWriteable" desc="()Z" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueType" desc="()Ljava/lang/reflect/Type;" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="()Z" line="166"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="171"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueOpenType" desc="()Ljavax/management/openmbean/OpenType;" line="182"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="237" covered="154"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="22" covered="29"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/Registry" sourcefilename="Registry.java"><method name="registerMBean" desc="(Ljavax/management/ObjectName;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="26" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerIfNotExistsMBean" desc="(Ljavax/management/ObjectName;Ljava/lang/Object;)V" line="119"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegistered" desc="(Ljavax/management/ObjectName;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistered" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerMBean" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregister" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregister" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unregister" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregister" desc="(Ljavax/management/ObjectName;)Ljava/lang/Object;" line="157"><counter type="INSTRUCTION" missed="14" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="export" desc="(Ljava/lang/Object;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="170"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="export" desc="(Ljava/lang/Class;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="175"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="export" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="180"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exportIfNeeded" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="export" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;[Ljava/lang/Object;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="196"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="export" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="209"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="166"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="13" covered="39"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jmx/DynamicMBeanBuilder" sourcefilename="DynamicMBeanBuilder.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withOperation" desc="(Lorg/spf4j/jmx/ExportedOperation;)Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="73"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withAttribute" desc="(Lorg/spf4j/jmx/ExportedValue;)Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="80"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withAttributes" desc="([Lorg/spf4j/jmx/ExportedValue;)Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="87"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withAttributes" desc="(Ljava/util/Map;)Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="94"><counter type="INSTRUCTION" missed="26" covered="38"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withJmxExportObject" desc="(Ljava/lang/Object;)Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="116"><counter type="INSTRUCTION" missed="13" covered="110"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withJmxExportObjects" desc="([Ljava/lang/Object;)Lorg/spf4j/jmx/DynamicMBeanBuilder;" line="157"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="171"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(Lorg/spf4j/jmx/ExportedValuesMBean;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="185"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="200"><counter type="INSTRUCTION" missed="16" covered="35"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="219"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="230"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIfExports" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="241"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="260"><counter type="INSTRUCTION" missed="12" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerIfExports" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/jmx/ExportedValuesMBean;" line="272"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exportMethod" desc="(Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Lorg/spf4j/jmx/JmxExport;)V" line="286"><counter type="INSTRUCTION" missed="12" covered="95"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSetter" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/reflect/Method;Ljava/lang/Object;Lorg/spf4j/jmx/JmxExport;)V" line="318"><counter type="INSTRUCTION" missed="16" covered="57"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addGetter" desc="(Ljava/lang/String;Ljava/util/Map;Lorg/spf4j/jmx/JmxExport;Ljava/lang/reflect/Method;Ljava/lang/Object;)V" line="345"><counter type="INSTRUCTION" missed="16" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="364"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$exportMethod$0" desc="(Ljava/lang/reflect/Method;)Ljava/lang/Void;" line="287"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="255" covered="524"/><counter type="BRANCH" missed="27" covered="63"/><counter type="LINE" missed="32" covered="113"/><counter type="COMPLEXITY" missed="26" covered="40"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExportedValuesMBean.java"><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="16" ci="0" mb="2" cb="0"/><line nr="89" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="16" ci="0" mb="2" cb="0"/><line nr="95" mi="7" ci="0" mb="2" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="16" ci="0" mb="2" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="109" mi="12" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="16" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="2" cb="0"/><line nr="116" mi="12" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="1" cb="1"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="7" ci="0" mb="0" cb="0"/><line nr="158" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="13" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="1" cb="1"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="12" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="16" ci="0" mb="2" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="2" cb="0"/><line nr="200" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="8" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="208" mi="8" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="6" ci="0" mb="0" cb="0"/><line nr="223" mi="11" ci="0" mb="2" cb="0"/><line nr="224" mi="7" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="7" ci="0" mb="0" cb="0"/><line nr="233" mi="7" ci="0" mb="0" cb="0"/><line nr="235" mi="12" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="8" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="16" ci="0" mb="0" cb="0"/><line nr="255" mi="7" ci="0" mb="0" cb="0"/><line nr="257" mi="18" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="11" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="17" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="12" mb="0" cb="2"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="12" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="1" cb="3"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="10" mb="0" cb="0"/><line nr="298" mi="0" ci="28" mb="0" cb="2"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="12" mb="0" cb="0"/><line nr="308" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="522" covered="252"/><counter type="BRANCH" missed="27" covered="11"/><counter type="LINE" missed="77" covered="53"/><counter type="COMPLEXITY" missed="20" covered="14"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DynamicMBeanBuilder.java"><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="1" cb="1"/><line nr="74" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="1" cb="1"/><line nr="81" mi="12" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="16" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="3"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="13" mb="1" cb="1"/><line nr="101" mi="12" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="19" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="1" cb="1"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="2"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="17" mb="0" cb="2"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="1" cb="1"/><line nr="144" mi="12" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="16" mb="0" cb="2"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="8" ci="0" mb="4" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="9" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="4" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="9" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="4" mb="3" cb="1"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="1" cb="1"/><line nr="208" mi="10" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="9" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="12" mb="0" cb="4"/><line nr="230" mi="0" ci="3" mb="1" cb="1"/><line nr="231" mi="12" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="9" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="1" cb="1"/><line nr="261" mi="12" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="9" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="2" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="9" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="4"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="4"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="4"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="2"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="1" cb="1"/><line nr="311" mi="12" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="2"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="2"/><line nr="330" mi="0" ci="9" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="1" cb="1"/><line nr="334" mi="16" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="8" mb="0" cb="2"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="2"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="1" cb="1"/><line nr="354" mi="16" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="255" covered="524"/><counter type="BRANCH" missed="27" covered="63"/><counter type="LINE" missed="32" covered="113"/><counter type="COMPLEXITY" missed="26" covered="40"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BeanExportedValue.java"><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="17" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="17" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="20" mb="1" cb="1"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="17" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="19" mb="1" cb="1"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="14" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="15" ci="0" mb="0" cb="0"/><line nr="123" mi="17" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="13" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="0" ci="16" mb="0" cb="0"/><line nr="140" mi="12" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="18" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="19" ci="0" mb="0" cb="0"/><line nr="149" mi="17" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="1" ci="6" mb="1" cb="1"/><line nr="171" mi="42" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="8" mb="1" cb="1"/><counter type="INSTRUCTION" missed="237" covered="154"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="22" covered="29"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExportedValue.java"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="1" cb="3"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="33" covered="45"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericExportedOperation.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="19" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="9" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="1" cb="1"/><line nr="94" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="11" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="1" cb="1"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="1" cb="1"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="13" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="1" ci="8" mb="1" cb="1"/><line nr="174" mi="23" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="146" covered="147"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="20" covered="36"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapExportedValue.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="1" cb="1"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="1" cb="1"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="17" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="15" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="8" mb="1" cb="1"/><counter type="INSTRUCTION" missed="67" covered="76"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericExportedValue.java"><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="2" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="5" mb="1" cb="1"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="17" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="15" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="50"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="19" covered="17"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Client.java"><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JMXBeanMapping.java"><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="12"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="GlobalMXBeanMapperSupplier.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExportedOperation.java"><line nr="63" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Registry.java"><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="13" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="13" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="13" mb="0" cb="0"/><line nr="175" mi="0" ci="13" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="1" cb="1"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="1" cb="1"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="166"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="13" covered="39"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExportedOperationImpl.java"><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="15" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="9" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="2" ci="14" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="1" cb="1"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="19" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="1" cb="1"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="11" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="19" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="15" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="17" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="28" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="161" covered="200"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="19" covered="50"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1626" covered="1708"/><counter type="BRANCH" missed="102" covered="140"/><counter type="LINE" missed="231" covered="384"/><counter type="COMPLEXITY" missed="106" covered="132"/><counter type="METHOD" missed="30" covered="87"/><counter type="CLASS" missed="1" covered="13"/></package><package name="org/spf4j/io/appenders"><class name="org/spf4j/io/appenders/SpecificRecordAppender" sourcefilename="SpecificRecordAppender.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayLongAppender" sourcefilename="ArrayLongAppender.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/CharsequenceAppender" sourcefilename="CharsequenceAppender.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayObjectAppender" sourcefilename="ArrayObjectAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="53"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Appendable;)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/LocalDateAppender" sourcefilename="LocalDateAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/time/LocalDate;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ThrowableAppender" sourcefilename="ThrowableAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayFloatAppender" sourcefilename="ArrayFloatAppender.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/NumberAppender" sourcefilename="NumberAppender.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayIntAppender" sourcefilename="ArrayIntAppender.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/PathAppender" sourcefilename="PathAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/nio/file/Path;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/WriteableAppender" sourcefilename="WriteableAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/spf4j/base/Writeable;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/MapAppender" sourcefilename="MapAppender.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Map;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendEntry" desc="(Ljava/util/Map$Entry;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Map;Ljava/lang/Appendable;)V" line="85"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/SqlDateAppender" sourcefilename="SqlDateAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/sql/Date;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/CollectionAppender" sourcefilename="CollectionAppender.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Collection;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="56"><counter type="INSTRUCTION" missed="6" covered="41"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Collection;Ljava/lang/Appendable;)V" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/CalendarAppender" sourcefilename="CalendarAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Calendar;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayBooleanAppender" sourcefilename="ArrayBooleanAppender.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayShortAppender" sourcefilename="ArrayShortAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([SLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="53"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([SLjava/lang/Appendable;)V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/SpecificRecordBaseAppender" sourcefilename="SpecificRecordBaseAppender.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/InstantAppender" sourcefilename="InstantAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/time/Instant;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/GenericRecordAppender" sourcefilename="GenericRecordAppender.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayCharsAppender" sourcefilename="ArrayCharsAppender.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([CLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([CLjava/lang/Appendable;)V" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="5"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayDoubleAppender" sourcefilename="ArrayDoubleAppender.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/DateAppender" sourcefilename="DateAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Date;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/ArrayBytesAppender" sourcefilename="ArrayBytesAppender.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([BLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([BLjava/lang/Appendable;)V" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CollectionAppender.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="1" cb="1"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayShortAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="2" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayBooleanAppender.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharsequenceAppender.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayObjectAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="2" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayLongAppender.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumberAppender.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayIntAppender.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapAppender.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayDoubleAppender.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CalendarAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayFloatAppender.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WriteableAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericRecordAppender.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpecificRecordBaseAppender.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SqlDateAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayCharsAppender.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="5"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpecificRecordAppender.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PathAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayBytesAppender.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InstantAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalDateAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="165" covered="232"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="47" covered="79"/><counter type="COMPLEXITY" missed="21" covered="49"/><counter type="METHOD" missed="15" covered="46"/><counter type="CLASS" missed="0" covered="24"/></package><package name="org/spf4j/perf/impl/acc"><class name="org/spf4j/perf/impl/acc/DirectStoreAccumulator$RecordedValue" sourcefilename="DirectStoreAccumulator.java"><method name="&lt;init&gt;" desc="(JJ)V" line="124"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTs" desc="()J" line="130"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()J" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/acc/AbstractMeasurementAccumulator" sourcefilename="AbstractMeasurementAccumulator.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recordAt" desc="(JJ)V" line="52"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinTime" desc="()J" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxTime" desc="()J" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="9"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/acc/AddAndCountAccumulator" sourcefilename="AddAndCountAccumulator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)V" line="57"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnitOfMeasurement" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="record" desc="(J)V" line="75"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[J" line="83"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggregate" desc="(Lorg/spf4j/perf/MeasurementAccumulator;)Lorg/spf4j/perf/MeasurementAccumulator;" line="93"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createClone" desc="()Lorg/spf4j/perf/impl/acc/AddAndCountAccumulator;" line="111"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLike" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/impl/acc/AddAndCountAccumulator;" line="117"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInfo" desc="()Lorg/spf4j/perf/MeasurementsInfo;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()Lorg/spf4j/perf/MeasurementAccumulator;" line="128"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThenReset" desc="()[J" line="142"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="149"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="13" covered="27"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/acc/QuantizedAccumulator" sourcefilename="QuantizedAccumulator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;IIII)V" line="97"><counter type="INSTRUCTION" missed="12" covered="453"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="0" covered="108"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMagnitudeLimits2" desc="(III)[J" line="216"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/MeasurementsInfo;IIIJJJJI[J[J)V" line="248"><counter type="INSTRUCTION" missed="12" covered="50"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnitOfMeasurement" desc="()Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBucket" desc="([JJ)I" line="279"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="record" desc="(J)V" line="290"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[J" line="305"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInfo" desc="()Lorg/spf4j/perf/MeasurementsInfo;" line="325"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggregate" desc="(Lorg/spf4j/perf/MeasurementAccumulator;)Lorg/spf4j/perf/MeasurementAccumulator;" line="332"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createClone" desc="()Lorg/spf4j/perf/impl/acc/QuantizedAccumulator;" line="366"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()Lorg/spf4j/perf/impl/acc/QuantizedAccumulator;" line="374"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="389"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxMeasurement" desc="()J" line="397"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementCount" desc="()J" line="401"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMeasurementTotal" desc="()J" line="405"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinMeasurement" desc="()J" line="409"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuatizedMeasurements" desc="()[J" line="413"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLike" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementAccumulator;" line="418"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThenReset" desc="()[J" line="426"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="143" covered="843"/><counter type="BRANCH" missed="21" covered="53"/><counter type="LINE" missed="24" covered="189"/><counter type="COMPLEXITY" missed="23" covered="34"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/acc/MinMaxAvgAccumulator" sourcefilename="MinMaxAvgAccumulator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJJJ)V" line="59"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnitOfMeasurement" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="record" desc="(J)V" line="82"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[J" line="96"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggregate" desc="(Lorg/spf4j/perf/MeasurementAccumulator;)Lorg/spf4j/perf/MeasurementAccumulator;" line="106"><counter type="INSTRUCTION" missed="19" covered="53"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createClone" desc="()Lorg/spf4j/perf/impl/acc/MinMaxAvgAccumulator;" line="126"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLike" desc="(Ljava/lang/Object;)Lorg/spf4j/perf/MeasurementAccumulator;" line="132"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInfo" desc="()Lorg/spf4j/perf/MeasurementsInfo;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()Lorg/spf4j/perf/impl/acc/MinMaxAvgAccumulator;" line="143"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThenReset" desc="()[J" line="159"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="169"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="254"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="9" covered="40"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/acc/DirectStoreAccumulator" sourcefilename="DirectStoreAccumulator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILorg/spf4j/perf/MeasurementStore;)V" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILorg/spf4j/perf/MeasurementStore;Lorg/spf4j/tsdb2/avro/MeasurementType;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILorg/spf4j/perf/MeasurementStore;Lorg/spf4j/tsdb2/avro/MeasurementType;Lorg/spf4j/tsdb2/avro/Aggregation;)V" line="76"><counter type="INSTRUCTION" missed="6" covered="35"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnitOfMeasurement" desc="()Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="record" desc="(J)V" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recordAt" desc="(JJ)V" line="100"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerJmx" desc="()V" line="110"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="115"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastRecorded" desc="()Lorg/spf4j/perf/impl/acc/DirectStoreAccumulator$RecordedValue;" line="140"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInfo" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="92"/><counter type="LINE" missed="12" covered="18"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/acc/DirectStoreMultiAccumulator" sourcefilename="DirectStoreMultiAccumulator.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/MeasurementsInfo;Lorg/spf4j/perf/MeasurementStore;)V" line="61"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="record" desc="([J)V" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recordAt" desc="(J[J)V" line="83"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerJmx" desc="()V" line="92"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastRecorded" desc="()[J" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInfo" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="107"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbstractMeasurementAccumulator.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="9"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DirectStoreMultiAccumulator.java"><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="13" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="23" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MinMaxAvgAccumulator.java"><line nr="49" mi="0" ci="19" mb="0" cb="0"/><line nr="50" mi="0" ci="20" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="28" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="23" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="1" cb="1"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="18" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="16" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="254"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="9" covered="40"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AddAndCountAccumulator.java"><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="20" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="10" ci="0" mb="0" cb="0"/><line nr="99" mi="16" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="16" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="88" covered="149"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="13" covered="27"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DirectStoreAccumulator.java"><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="21" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="92"/><counter type="LINE" missed="18" covered="18"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="QuantizedAccumulator.java"><line nr="52" mi="2" ci="6" mb="1" cb="1"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="4" ci="5" mb="2" cb="2"/><line nr="99" mi="4" ci="5" mb="2" cb="2"/><line nr="100" mi="4" ci="4" mb="2" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="14" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="9" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="2"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="4"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="4" ci="5" mb="2" cb="2"/><line nr="251" mi="4" ci="5" mb="2" cb="2"/><line nr="252" mi="4" ci="4" mb="2" cb="2"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="2"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="2"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="2"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="11" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="1" cb="1"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="9" mb="0" cb="2"/><line nr="317" mi="0" ci="8" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="3" ci="0" mb="2" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="0" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="345" mi="3" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="8" ci="0" mb="2" cb="0"/><line nr="350" mi="9" ci="0" mb="0" cb="0"/><line nr="352" mi="13" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="8" ci="0" mb="0" cb="0"/><line nr="359" mi="16" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="25" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="2"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="38" mb="0" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="5" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="18" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="2" mb="1" cb="1"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="843"/><counter type="BRANCH" missed="21" covered="53"/><counter type="LINE" missed="24" covered="189"/><counter type="COMPLEXITY" missed="23" covered="34"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="529" covered="1347"/><counter type="BRANCH" missed="37" covered="65"/><counter type="LINE" missed="96" covered="278"/><counter type="COMPLEXITY" missed="59" covered="65"/><counter type="METHOD" missed="29" covered="44"/><counter type="CLASS" missed="2" covered="5"/></package><package name="org/spf4j/pool/jdbc"><class name="org/spf4j/pool/jdbc/PooledDataSource$PooledConnectionInvocationHandler" sourcefilename="PooledDataSource.java"><method name="&lt;init&gt;" desc="(Ljava/sql/Connection;Lorg/spf4j/recyclable/RecyclingSupplier;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="184"><counter type="INSTRUCTION" missed="19" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="46"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/pool/jdbc/PooledDataSource" sourcefilename="PooledDataSource.java"><method name="&lt;init&gt;" desc="(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IILjava/lang/String;Ljava/lang/String;Ljava/util/Properties;I)V" line="74"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IILorg/spf4j/recyclable/RecyclingSupplier$Factory;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnection" desc="()Ljava/sql/Connection;" line="89"><counter type="INSTRUCTION" missed="12" covered="23"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnection" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/sql/Connection;" line="103"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnection" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;" line="117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLogWriter" desc="()Ljava/io/PrintWriter;" line="122"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLogWriter" desc="(Ljava/io/PrintWriter;)V" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLoginTimeout" desc="(I)V" line="132"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLoginTimeout" desc="()I" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unwrap" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="142"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWrapperFor" desc="(Ljava/lang/Class;)Z" line="151"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentLogger" desc="()Ljava/util/logging/Logger;" line="156"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="155" covered="44"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="10"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="12" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/pool/jdbc/JdbcConnectionFactory" sourcefilename="JdbcConnectionFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;I)V" line="70"><counter type="INSTRUCTION" missed="14" covered="16"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromUserPassword" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;" line="82"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Ljava/sql/Connection;" line="90"><counter type="INSTRUCTION" missed="22" covered="14"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="(Ljava/sql/Connection;)V" line="102"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/sql/Connection;Ljava/lang/Exception;)Z" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$create$0" desc="()Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="61"/><counter type="LINE" missed="13" covered="15"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JdbcConnectionFactory.java"><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="17" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="21" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="61"/><counter type="LINE" missed="13" covered="15"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PooledDataSource.java"><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="17" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="16" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="17" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="4" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="12" ci="0" mb="0" cb="0"/><line nr="151" mi="12" ci="0" mb="4" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="12" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="3" mb="1" cb="1"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="1" cb="1"/><line nr="194" mi="13" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="174" covered="90"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="30" covered="24"/><counter type="COMPLEXITY" missed="19" covered="6"/><counter type="METHOD" missed="12" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="245" covered="151"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="43" covered="39"/><counter type="COMPLEXITY" missed="23" covered="11"/><counter type="METHOD" missed="16" covered="10"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/spf4j/ds"><class name="org/spf4j/ds/UpdateablePriorityQueue$ElementRef" sourcefilename="UpdateablePriorityQueue.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/ds/UpdateablePriorityQueue;Ljava/lang/Object;I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;)I" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElem" desc="()Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndex" desc="()I" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setElem" desc="(Ljava/lang/Object;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementMutated" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()Z" line="117"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="126"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="134"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="85"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="13" covered="22"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/LinkedHashMapEx$1" sourcefilename="LinkedHashMapEx.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/reflect/Field;" line="57"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/RTree" sourcefilename="RTree.java"><method name="&lt;init&gt;" desc="(IIILorg/spf4j/ds/RTree$SeedPicker;)V" line="82"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(III)V" line="93"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildRoot" desc="(Z)Lorg/spf4j/ds/RTree$Node;" line="97"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="110"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="114"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxEntries" desc="()I" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinEntries" desc="()I" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumDims" desc="()I" line="135"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="142"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="search" desc="([F[F)Ljava/util/List;" line="154"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="search" desc="([F[FLorg/spf4j/ds/RTree$Node;Ljava/util/LinkedList;)V" line="163"><counter type="INSTRUCTION" missed="27" covered="32"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="([F[FLjava/lang/Object;)Z" line="187"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delete" desc="([FLjava/lang/Object;)Z" line="215"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findLeaf" desc="(Lorg/spf4j/ds/RTree$Node;[F[FLjava/lang/Object;)Lorg/spf4j/ds/RTree$Node;" line="221"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="condenseTree" desc="(Lorg/spf4j/ds/RTree$Node;)V" line="242"><counter type="INSTRUCTION" missed="160" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="285"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="([F[FLjava/lang/Object;)V" line="297"><counter type="INSTRUCTION" missed="21" covered="52"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="([FLjava/lang/Object;)V" line="319"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjustTree" desc="(Lorg/spf4j/ds/RTree$Node;Lorg/spf4j/ds/RTree$Node;)V" line="323"><counter type="INSTRUCTION" missed="72" covered="16"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="14" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitNode" desc="(Lorg/spf4j/ds/RTree$Node;)[Lorg/spf4j/ds/RTree$Node;" line="354"><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="qPickSeeds" desc="(Ljava/util/List;)[Lorg/spf4j/ds/RTree$Node;" line="418"><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="qPickNext" desc="(Ljava/util/LinkedList;[Lorg/spf4j/ds/RTree$Node;)Lorg/spf4j/ds/RTree$Node;" line="455"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lPickSeeds" desc="(Ljava/util/LinkedList;)[Lorg/spf4j/ds/RTree$Node;" line="474"><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lPickNext" desc="(Ljava/util/Deque;)Lorg/spf4j/ds/RTree$Node;" line="523"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tighten" desc="([Lorg/spf4j/ds/RTree$Node;)V" line="527"><counter type="INSTRUCTION" missed="10" covered="143"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseLeaf" desc="(Lorg/spf4j/ds/RTree$Node;Lorg/spf4j/ds/RTree$Entry;)Lorg/spf4j/ds/RTree$Node;" line="559"><counter type="INSTRUCTION" missed="89" covered="5"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="19" covered="2"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequiredExpansion" desc="([F[FLorg/spf4j/ds/RTree$Node;)F" line="591"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArea" desc="([F)F" line="608"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOverlap" desc="([F[F[F[F)Z" line="618"><counter type="INSTRUCTION" missed="3" covered="73"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visualize" desc="()Ljava/lang/String;" line="690"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visualize" desc="(Lorg/spf4j/ds/RTree$Node;Ljava/io/PrintWriter;IIII)V" line="703"><counter type="INSTRUCTION" missed="165" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="722"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1563" covered="444"/><counter type="BRANCH" missed="182" covered="48"/><counter type="LINE" missed="272" covered="82"/><counter type="COMPLEXITY" missed="123" covered="25"/><counter type="METHOD" missed="20" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/LinkedHashMapEx" sourcefilename="LinkedHashMapEx.java"><method name="getTail" desc="()Ljava/util/Map$Entry;" line="70"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IF)V" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IFZ)V" line="93"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastEntry" desc="()Ljava/util/Map$Entry;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollLastEntry" desc="()Ljava/util/Map$Entry;" line="105"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/Graphs" sourcefilename="Graphs.java"><method name="clone" desc="(Lcom/google/common/graph/MutableGraph;)Lcom/google/common/graph/MutableGraph;" line="49"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/IdentityHashSet" sourcefilename="IdentityHashSet.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IF)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hash" desc="(Ljava/lang/Object;)I" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="61"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/RTree$Node" sourcefilename="RTree.java"><method name="&lt;init&gt;" desc="([F[FZ)V" line="647"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="658"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="37"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/SimpleStackNullSupport" sourcefilename="SimpleStackNullSupport.java"><method name="&lt;init&gt;" desc="(I)V" line="70"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="89"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushNull" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAndGetIdx" desc="(Ljava/lang/Object;)I" line="111"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="119"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAll" desc="([Ljava/lang/Object;)V" line="136"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pop" desc="()Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="158"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="(I)[Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popTo" desc="([Ljava/lang/Object;I)V" line="173"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFromTop" desc="(I)V" line="182"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popUntil" desc="(Ljava/lang/Object;)[Ljava/lang/Object;" line="190"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasElements" desc="()Z" line="201"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peek" desc="()Ljava/lang/Object;" line="211"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekFromTop" desc="(I)Ljava/lang/Object;" line="215"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFromTop" desc="(ILjava/lang/Object;)V" line="219"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="(I)[Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekUntil" desc="(Ljava/lang/Object;)[Ljava/lang/Object;" line="227"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekElemAfter" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="235"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="247"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPtr" desc="()I" line="259"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFromPtr" desc="(I)Ljava/lang/Object;" line="269"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(C)Ljava/lang/String;" line="283"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="300"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="305"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="313"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="326"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="331"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="339"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="344"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="355"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="378"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="386"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="394"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="402"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="408"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="426"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="439"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="444"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;" line="449"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(ILjava/lang/Object;)V" line="460"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="465"><counter type="INSTRUCTION" missed="19" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fastRemove" desc="(I)V" line="479"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="492"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="500"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;" line="508"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="516"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subList" desc="(II)Ljava/util/List;" line="524"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="425" covered="334"/><counter type="BRANCH" missed="49" covered="15"/><counter type="LINE" missed="88" covered="72"/><counter type="COMPLEXITY" missed="56" covered="26"/><counter type="METHOD" missed="30" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/UpdateablePriorityQueue" sourcefilename="UpdateablePriorityQueue.java"><method name="&lt;init&gt;" desc="()V" line="157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="161"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/util/Comparator;)V" line="63"><counter type="INSTRUCTION" missed="12" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="grow" desc="(I)V" line="180"><counter type="INSTRUCTION" missed="13" covered="29"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;" line="196"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="()Ljava/lang/Object;" line="213"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekEntry" desc="()Lorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;" line="221"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="229"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;)Z" line="240"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="250"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="260"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEq" desc="(Ljava/lang/Object;)Z" line="264"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="274"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="278"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="296"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="383"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="387"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="poll" desc="()Ljava/lang/Object;" line="399"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAt" desc="(I)Ljava/lang/Object;" line="418"><counter type="INSTRUCTION" missed="7" covered="70"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="siftUp" desc="(ILorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;)V" line="440"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="siftDown" desc="(ILorg/spf4j/ds/UpdateablePriorityQueue$ElementRef;)V" line="456"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comparator" desc="()Ljava/util/Comparator;" line="479"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeObject" desc="(Ljava/io/ObjectOutputStream;)V" line="486"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readObject" desc="(Ljava/io/ObjectInputStream;)V" line="498"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="heapify" desc="()V" line="513"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="520"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="302" covered="371"/><counter type="BRANCH" missed="41" covered="39"/><counter type="LINE" missed="59" covered="91"/><counter type="COMPLEXITY" missed="41" covered="27"/><counter type="METHOD" missed="15" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/UpdateablePriorityQueue$Itr" sourcefilename="UpdateablePriorityQueue.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/ds/UpdateablePriorityQueue;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="332"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="338"><counter type="INSTRUCTION" missed="25" covered="28"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="358"><counter type="INSTRUCTION" missed="34" covered="35"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="97"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="14" covered="20"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/RTree$SeedPicker" sourcefilename="RTree.java"><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/RTree$Entry" sourcefilename="RTree.java"><method name="&lt;init&gt;" desc="([F[FLjava/lang/Object;)V" line="673"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="679"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/LinkedHashSetEx" sourcefilename="LinkedHashSetEx.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastValue" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollLastValue" desc="()Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="92"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="48"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/ds/SimpleStack" sourcefilename="SimpleStack.java"><method name="&lt;init&gt;" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekAndPush" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pollLast" desc="()Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="93"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="107"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="120"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="130"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="50"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="21" covered="14"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RTree.java"><line nr="54" mi="2" ci="5" mb="1" cb="1"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="4" ci="7" mb="2" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="7" mb="2" cb="2"/><line nr="155" mi="4" ci="7" mb="2" cb="2"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="0" ci="11" mb="0" cb="2"/><line nr="165" mi="0" ci="9" mb="0" cb="2"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="11" ci="0" mb="2" cb="0"/><line nr="171" mi="9" ci="0" mb="2" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="11" ci="0" mb="4" cb="0"/><line nr="188" mi="11" ci="0" mb="4" cb="0"/><line nr="189" mi="8" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="12" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="2" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="2" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="2" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="2" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="2" cb="0"/><line nr="215" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="2" cb="0"/><line nr="222" mi="11" ci="0" mb="2" cb="0"/><line nr="223" mi="6" ci="0" mb="2" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="11" ci="0" mb="2" cb="0"/><line nr="230" mi="9" ci="0" mb="2" cb="0"/><line nr="231" mi="7" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="2" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="2" cb="0"/><line nr="245" mi="9" ci="0" mb="4" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="9" ci="0" mb="4" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="2" cb="0"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="8" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="2" cb="0"/><line nr="266" mi="6" ci="0" mb="0" cb="0"/><line nr="267" mi="10" ci="0" mb="4" cb="0"/><line nr="268" mi="8" ci="0" mb="0" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="9" ci="0" mb="0" cb="0"/><line nr="273" mi="10" ci="0" mb="2" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="8" ci="0" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="7" mb="2" cb="2"/><line nr="298" mi="4" ci="7" mb="2" cb="2"/><line nr="299" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="1" cb="1"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="8" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="1" cb="1"/><line nr="324" mi="0" ci="2" mb="1" cb="1"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="6" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="9" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="8" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="2" cb="0"/><line nr="337" mi="8" ci="0" mb="0" cb="0"/><line nr="338" mi="7" ci="0" mb="2" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="2" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><line nr="354" mi="20" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="4" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="2" cb="0"/><line nr="358" mi="6" ci="0" mb="0" cb="0"/><line nr="360" mi="6" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="12" ci="0" mb="2" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="7" ci="0" mb="0" cb="0"/><line nr="365" mi="7" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="2" cb="0"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="6" ci="0" mb="2" cb="0"/><line nr="371" mi="5" ci="0" mb="2" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="3" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="6" ci="0" mb="2" cb="0"/><line nr="377" mi="5" ci="0" mb="2" cb="0"/><line nr="378" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="13" ci="0" mb="2" cb="0"/><line nr="385" mi="8" ci="0" mb="0" cb="0"/><line nr="386" mi="8" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="2" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="2" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="5" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="2" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="2" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="3" ci="0" mb="2" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="2" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="404" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="5" ci="0" mb="0" cb="0"/><line nr="409" mi="8" ci="0" mb="0" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="10" ci="0" mb="2" cb="0"/><line nr="421" mi="10" ci="0" mb="2" cb="0"/><line nr="422" mi="3" ci="0" mb="2" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="5" ci="0" mb="0" cb="0"/><line nr="426" mi="5" ci="0" mb="0" cb="0"/><line nr="427" mi="2" ci="0" mb="0" cb="0"/><line nr="428" mi="8" ci="0" mb="2" cb="0"/><line nr="429" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="5" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="14" ci="0" mb="0" cb="0"/><line nr="433" mi="6" ci="0" mb="0" cb="0"/><line nr="435" mi="6" ci="0" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="2" cb="0"/><line nr="437" mi="2" ci="0" mb="0" cb="0"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="443" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="10" ci="0" mb="2" cb="0"/><line nr="458" mi="12" ci="0" mb="0" cb="0"/><line nr="459" mi="12" ci="0" mb="0" cb="0"/><line nr="460" mi="5" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="2" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="463" mi="2" ci="0" mb="0" cb="0"/><line nr="465" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="9" ci="0" mb="4" cb="0"/><line nr="467" mi="4" ci="0" mb="0" cb="0"/><line nr="468" mi="2" ci="0" mb="0" cb="0"/><line nr="474" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="0" cb="0"/><line nr="476" mi="2" ci="0" mb="0" cb="0"/><line nr="477" mi="8" ci="0" mb="2" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="4" ci="0" mb="0" cb="0"/><line nr="481" mi="10" ci="0" mb="2" cb="0"/><line nr="482" mi="7" ci="0" mb="2" cb="0"/><line nr="483" mi="5" ci="0" mb="0" cb="0"/><line nr="485" mi="12" ci="0" mb="2" cb="0"/><line nr="486" mi="10" ci="0" mb="0" cb="0"/><line nr="488" mi="7" ci="0" mb="2" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="12" ci="0" mb="2" cb="0"/><line nr="493" mi="10" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="12" ci="0" mb="2" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="499" mi="4" ci="0" mb="2" cb="0"/><line nr="500" mi="4" ci="0" mb="0" cb="0"/><line nr="501" mi="4" ci="0" mb="0" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="503" mi="2" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="2" cb="0"/><line nr="510" mi="17" ci="0" mb="0" cb="0"/><line nr="512" mi="6" ci="0" mb="0" cb="0"/><line nr="513" mi="6" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="527" mi="5" ci="6" mb="2" cb="2"/><line nr="528" mi="0" ci="16" mb="0" cb="2"/><line nr="529" mi="5" ci="6" mb="2" cb="2"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="4" mb="0" cb="0"/><line nr="532" mi="0" ci="8" mb="0" cb="2"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="4" mb="0" cb="0"/><line nr="536" mi="0" ci="11" mb="0" cb="2"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="9" mb="0" cb="2"/><line nr="542" mi="0" ci="7" mb="0" cb="0"/><line nr="544" mi="0" ci="14" mb="1" cb="1"/><line nr="545" mi="0" ci="12" mb="0" cb="0"/><line nr="547" mi="0" ci="1" mb="0" cb="0"/><line nr="549" mi="0" ci="8" mb="0" cb="2"/><line nr="551" mi="0" ci="9" mb="0" cb="0"/><line nr="553" mi="0" ci="8" mb="0" cb="0"/><line nr="554" mi="0" ci="8" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="1" cb="1"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="2" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="0" cb="0"/><line nr="564" mi="11" ci="0" mb="2" cb="0"/><line nr="565" mi="8" ci="0" mb="0" cb="0"/><line nr="566" mi="4" ci="0" mb="2" cb="0"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="569" mi="4" ci="0" mb="2" cb="0"/><line nr="570" mi="2" ci="0" mb="0" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="572" mi="9" ci="0" mb="2" cb="0"/><line nr="573" mi="2" ci="0" mb="2" cb="0"/><line nr="574" mi="12" ci="0" mb="0" cb="0"/><line nr="576" mi="7" ci="0" mb="0" cb="0"/><line nr="577" mi="7" ci="0" mb="0" cb="0"/><line nr="579" mi="4" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="1" ci="0" mb="0" cb="0"/><line nr="584" mi="5" ci="0" mb="0" cb="0"/><line nr="591" mi="4" ci="0" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="593" mi="8" ci="0" mb="2" cb="0"/><line nr="594" mi="18" ci="0" mb="2" cb="0"/><line nr="595" mi="21" ci="0" mb="0" cb="0"/><line nr="596" mi="18" ci="0" mb="2" cb="0"/><line nr="597" mi="11" ci="0" mb="0" cb="0"/><line nr="600" mi="2" ci="0" mb="0" cb="0"/><line nr="601" mi="8" ci="0" mb="2" cb="0"/><line nr="602" mi="10" ci="0" mb="0" cb="0"/><line nr="604" mi="4" ci="0" mb="0" cb="0"/><line nr="608" mi="2" ci="0" mb="0" cb="0"/><line nr="609" mi="8" ci="0" mb="2" cb="0"/><line nr="610" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="0" ci="8" mb="0" cb="2"/><line nr="619" mi="0" ci="2" mb="0" cb="0"/><line nr="620" mi="0" ci="8" mb="1" cb="1"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><line nr="622" mi="0" ci="8" mb="0" cb="2"/><line nr="623" mi="0" ci="14" mb="1" cb="1"/><line nr="624" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="8" mb="1" cb="1"/><line nr="627" mi="0" ci="14" mb="0" cb="2"/><line nr="628" mi="0" ci="2" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="2"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="635" mi="0" ci="2" mb="0" cb="0"/><line nr="647" mi="0" ci="2" mb="0" cb="0"/><line nr="648" mi="0" ci="5" mb="0" cb="0"/><line nr="649" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="8" mb="0" cb="0"/><line nr="651" mi="0" ci="8" mb="0" cb="0"/><line nr="652" mi="0" ci="3" mb="0" cb="0"/><line nr="653" mi="0" ci="5" mb="0" cb="0"/><line nr="654" mi="0" ci="1" mb="0" cb="0"/><line nr="658" mi="14" ci="0" mb="0" cb="0"/><line nr="659" mi="20" ci="0" mb="0" cb="0"/><line nr="673" mi="0" ci="6" mb="0" cb="0"/><line nr="674" mi="0" ci="3" mb="0" cb="0"/><line nr="675" mi="0" ci="1" mb="0" cb="0"/><line nr="679" mi="10" ci="0" mb="0" cb="0"/><line nr="690" mi="14" ci="0" mb="0" cb="0"/><line nr="691" mi="5" ci="0" mb="0" cb="0"/><line nr="692" mi="4" ci="0" mb="0" cb="0"/><line nr="693" mi="5" ci="0" mb="0" cb="0"/><line nr="694" mi="3" ci="0" mb="0" cb="0"/><line nr="695" mi="9" ci="0" mb="0" cb="0"/><line nr="696" mi="3" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="698" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="9" ci="0" mb="0" cb="0"/><line nr="704" mi="17" ci="0" mb="0" cb="0"/><line nr="705" mi="3" ci="0" mb="0" cb="0"/><line nr="706" mi="22" ci="0" mb="2" cb="0"/><line nr="707" mi="14" ci="0" mb="0" cb="0"/><line nr="708" mi="14" ci="0" mb="0" cb="0"/><line nr="709" mi="19" ci="0" mb="2" cb="0"/><line nr="710" mi="13" ci="0" mb="0" cb="0"/><line nr="711" mi="3" ci="0" mb="0" cb="0"/><line nr="712" mi="9" ci="0" mb="2" cb="0"/><line nr="713" mi="7" ci="0" mb="2" cb="0"/><line nr="714" mi="31" ci="0" mb="0" cb="0"/><line nr="717" mi="3" ci="0" mb="0" cb="0"/><line nr="718" mi="1" ci="0" mb="0" cb="0"/><line nr="722" mi="23" ci="0" mb="0" cb="0"/><line nr="723" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1607" covered="515"/><counter type="BRANCH" missed="182" covered="48"/><counter type="LINE" missed="275" covered="95"/><counter type="COMPLEXITY" missed="125" covered="28"/><counter type="METHOD" missed="22" covered="16"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="UpdateablePriorityQueue.java"><line nr="55" mi="2" ci="6" mb="1" cb="1"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="2" cb="0"/><line nr="151" mi="17" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="1" cb="1"/><line nr="169" mi="12" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="1" cb="1"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="5" ci="10" mb="1" cb="1"/><line nr="186" mi="0" ci="2" mb="1" cb="1"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="1" cb="1"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="2"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="2"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="2" cb="0"/><line nr="230" mi="8" ci="0" mb="2" cb="0"/><line nr="231" mi="8" ci="0" mb="2" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="2" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="2" cb="0"/><line nr="264" mi="8" ci="0" mb="2" cb="0"/><line nr="265" mi="6" ci="0" mb="2" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="9" ci="0" mb="2" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="287" mi="8" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="2" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="2" ci="10" mb="2" cb="2"/><line nr="333" mi="4" ci="1" mb="2" cb="0"/><line nr="338" mi="0" ci="6" mb="1" cb="1"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="0" ci="6" mb="1" cb="1"/><line nr="343" mi="0" ci="16" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="2" cb="0"/><line nr="347" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="2" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="6" mb="1" cb="1"/><line nr="359" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="1" cb="1"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="1" cb="1"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="2" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="1" mb="2" cb="0"/><line nr="373" mi="6" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="6" ci="0" mb="0" cb="0"/><line nr="388" mi="8" ci="0" mb="2" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="3" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="1" cb="1"/><line nr="400" mi="2" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="8" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="2"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="4" ci="8" mb="3" cb="3"/><line nr="419" mi="0" ci="6" mb="0" cb="0"/><line nr="420" mi="0" ci="7" mb="0" cb="0"/><line nr="421" mi="0" ci="8" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="2"/><line nr="423" mi="0" ci="6" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="0" cb="2"/><line nr="429" mi="0" ci="4" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="1" cb="1"/><line nr="431" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="2"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="443" mi="0" ci="5" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="2"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="5" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="5" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="2"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="11" mb="0" cb="4"/><line nr="464" mi="0" ci="7" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="2"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="0" mb="0" cb="0"/><line nr="489" mi="8" ci="0" mb="2" cb="0"/><line nr="490" mi="7" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="8" ci="0" mb="0" cb="0"/><line nr="503" mi="8" ci="0" mb="2" cb="0"/><line nr="504" mi="11" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="0" cb="0"/><line nr="510" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="11" ci="0" mb="2" cb="0"/><line nr="514" mi="7" ci="0" mb="0" cb="0"/><line nr="516" mi="1" ci="0" mb="0" cb="0"/><line nr="520" mi="28" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="435" covered="553"/><counter type="BRANCH" missed="67" covered="53"/><counter type="LINE" missed="86" covered="133"/><counter type="COMPLEXITY" missed="62" covered="40"/><counter type="METHOD" missed="19" covered="23"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="LinkedHashSetEx.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="1" ci="9" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="48"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinkedHashMapEx.java"><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="12" covered="13"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SimpleStackNullSupport.java"><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="2" ci="5" mb="1" cb="1"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="2"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="2"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="0" cb="2"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="9" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="7" ci="0" mb="2" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="10" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="10" ci="0" mb="0" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="6" ci="0" mb="2" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="9" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="2" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="8" ci="0" mb="2" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="6" ci="0" mb="4" cb="0"/><line nr="270" mi="16" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="7" ci="0" mb="0" cb="0"/><line nr="288" mi="8" ci="0" mb="2" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="8" ci="0" mb="2" cb="0"/><line nr="314" mi="7" ci="0" mb="2" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="2" cb="0"/><line nr="356" mi="9" ci="0" mb="2" cb="0"/><line nr="357" mi="5" ci="0" mb="2" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="363" mi="8" ci="0" mb="2" cb="0"/><line nr="364" mi="7" ci="0" mb="2" cb="0"/><line nr="365" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="2" cb="0"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="411" mi="5" ci="0" mb="2" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="2" cb="0"/><line nr="416" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="9" ci="0" mb="0" cb="0"/><line nr="426" mi="2" ci="0" mb="0" cb="0"/><line nr="427" mi="8" ci="0" mb="2" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="429" mi="11" ci="0" mb="2" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="451" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="460" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="2" ci="4" mb="3" cb="1"/><line nr="466" mi="17" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="469" mi="0" ci="4" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="2"/><line nr="472" mi="0" ci="8" mb="0" cb="0"/><line nr="474" mi="0" ci="11" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="0" cb="0"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="2"/><line nr="482" mi="0" ci="8" mb="0" cb="0"/><line nr="484" mi="0" ci="11" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="500" mi="4" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="425" covered="334"/><counter type="BRANCH" missed="49" covered="15"/><counter type="LINE" missed="88" covered="72"/><counter type="COMPLEXITY" missed="56" covered="26"/><counter type="METHOD" missed="30" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IdentityHashSet.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="2" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="15" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Graphs.java"><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleStack.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="1" cb="1"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="2" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="2" cb="0"/><line nr="121" mi="7" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="2" cb="0"/><line nr="131" mi="7" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="50"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="21" covered="14"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2631" covered="1594"/><counter type="BRANCH" missed="316" covered="134"/><counter type="LINE" missed="495" covered="353"/><counter type="COMPLEXITY" missed="269" covered="123"/><counter type="METHOD" missed="86" covered="81"/><counter type="CLASS" missed="0" covered="14"/></package><package name="org/spf4j/perf/impl/ms"><class name="org/spf4j/perf/impl/ms/Id2Info" sourcefilename="Id2Info.java"><method name="getId" desc="(Lorg/spf4j/perf/MeasurementsInfo;)J" line="53"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInfo" desc="(J)Lorg/spf4j/perf/MeasurementsInfo;" line="64"><counter type="INSTRUCTION" missed="14" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="46"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/Flusher$2" sourcefilename="Flusher.java"><method name="&lt;init&gt;" desc="(ZLjava/util/concurrent/ScheduledFuture;Lorg/spf4j/perf/MeasurementStore;)V" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ms/Flusher$1" sourcefilename="Flusher.java"><method name="&lt;init&gt;" desc="(ZLorg/spf4j/perf/MeasurementStore;)V" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ms/Flusher" sourcefilename="Flusher.java"><method name="flushEvery" desc="(ILorg/spf4j/perf/MeasurementStore;)V" line="45"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ms/StoreType" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILorg/spf4j/perf/impl/ms/StoreFactory;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="159"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="167"><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="162"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$5" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="106"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$4" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="96"><counter type="INSTRUCTION" missed="14" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$3" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="89"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$2" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="73"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$1" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="61"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$8" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="136"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="3"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$7" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="124"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/StoreType$6" sourcefilename="StoreType.java"><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lorg/spf4j/perf/MeasurementStore;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/MultiStore" sourcefilename="MultiStore.java"><method name="&lt;init&gt;" desc="([Lorg/spf4j/perf/MeasurementStore;)V" line="57"><counter type="INSTRUCTION" missed="13" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="70"><counter type="INSTRUCTION" missed="10" covered="75"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="100"><counter type="INSTRUCTION" missed="22" covered="49"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="126"><counter type="INSTRUCTION" missed="10" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="144"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStores" desc="()Ljava/util/List;" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="171"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="133" covered="172"/><counter type="BRANCH" missed="22" covered="12"/><counter type="LINE" missed="35" covered="38"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Flusher.java"><line nr="45" mi="20" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="17" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="MultiStore.java"><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="13" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="1" cb="1"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="17" mb="0" cb="2"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="1" cb="1"/><line nr="106" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="17" mb="0" cb="2"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="17" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="1" cb="1"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="17" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="13" ci="0" mb="0" cb="0"/><line nr="171" mi="17" ci="0" mb="2" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="2" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="172"/><counter type="BRANCH" missed="22" covered="12"/><counter type="LINE" missed="35" covered="38"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Id2Info.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="1" cb="1"/><line nr="66" mi="14" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="46"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StoreType.java"><line nr="55" mi="0" ci="36" mb="0" cb="0"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="1" cb="1"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="13" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="12" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="10" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="6" cb="0"/><line nr="139" mi="12" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="18" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="1" cb="1"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="221"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="29" covered="27"/><counter type="COMPLEXITY" missed="13" covered="15"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><counter type="INSTRUCTION" missed="369" covered="439"/><counter type="BRANCH" missed="36" covered="18"/><counter type="LINE" missed="73" covered="77"/><counter type="COMPLEXITY" missed="37" covered="26"/><counter type="METHOD" missed="14" covered="22"/><counter type="CLASS" missed="3" covered="11"/></package><package name="org/spf4j/perf"><class name="org/spf4j/perf/MeasurementsInfo" sourcefilename="MeasurementsInfo.java"><method name="toCompositeType" desc="()Ljavax/management/openmbean/CompositeType;" line="72"><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/ProcessVitals" sourcefilename="ProcessVitals.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IIIII)V" line="69"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="()V" line="81"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="91"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/TimeSeriesRecord" sourcefilename="TimeSeriesRecord.java"><method name="getFrequencyMillis" desc="(Lorg/apache/avro/Schema;)I" line="63"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnit" desc="(Lorg/apache/avro/Schema;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Lorg/apache/avro/generic/GenericRecord;)Lorg/spf4j/perf/TimeSeriesRecord;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Lorg/spf4j/perf/TimeSeriesRecord;)V" line="129"><counter type="INSTRUCTION" missed="49" covered="68"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulateObservations" desc="(Lorg/apache/avro/Schema;Lorg/spf4j/tsdb2/avro/Observation;Lorg/spf4j/tsdb2/avro/Observation;)V" line="168"><counter type="INSTRUCTION" missed="25" covered="103"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inferAggregationFromName" desc="(Lorg/apache/avro/Schema$Field;Lorg/apache/avro/Schema;)Lorg/spf4j/tsdb2/avro/Aggregation;" line="210"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="186"/><counter type="BRANCH" missed="20" covered="12"/><counter type="LINE" missed="32" covered="43"/><counter type="COMPLEXITY" missed="18" covered="9"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/TimeSeriesAggregatingIterator" sourcefilename="TimeSeriesAggregatingIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;Ljava/util/function/ToLongFunction;Ljava/util/function/BiConsumer;JI)V" line="53"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggNext" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="84"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="102"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/PerformanceMonitor" sourcefilename="PerformanceMonitor.java"><method name="callAndMonitor" desc="(JJLjava/util/concurrent/Callable;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callAndMonitor" desc="(Lorg/spf4j/perf/MeasurementRecorderSource;JJLjava/util/concurrent/Callable;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="callAndMonitor" desc="(Lorg/spf4j/perf/MeasurementRecorderSource;JJLjava/util/concurrent/Callable;Z[Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performanceMonitoredCallable" desc="(Lorg/spf4j/perf/MeasurementRecorderSource;JJLjava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" line="71"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performanceMonitoredCallable" desc="(Lorg/spf4j/perf/MeasurementRecorderSource;JJLjava/util/concurrent/Callable;Z[Ljava/lang/Object;)Ljava/util/concurrent/Callable;" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performanceMonitoredCallable" desc="(JJLjava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" line="110"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performanceMonitoredCallable" desc="(JJLjava/util/concurrent/Callable;Z[Ljava/lang/Object;)Ljava/util/concurrent/Callable;" line="117"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performanceMonitoredCallable" desc="(Lorg/spf4j/perf/MeasurementRecorder;JJLjava/util/concurrent/Callable;Z[Ljava/lang/Object;)Ljava/util/concurrent/Callable;" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="29"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/MeasurementStoreQuery" sourcefilename="MeasurementStoreQuery.java"><method name="getObservations" desc="(Lorg/apache/avro/Schema;Ljava/time/Instant;Ljava/time/Instant;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="60"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAggregatedObservations" desc="(Lorg/apache/avro/Schema;Ljava/time/Instant;Ljava/time/Instant;ILjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="84"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMeasurementData" desc="(Lorg/apache/avro/Schema;Ljava/time/Instant;Ljava/time/Instant;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="103"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAggregatedMeasurementData" desc="(Lorg/apache/avro/Schema;Ljava/time/Instant;Ljava/time/Instant;ILjava/util/concurrent/TimeUnit;)Lorg/spf4j/base/avro/AvroCloseableIterable;" line="114"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAggregatedMeasurementData$5" desc="(Lorg/spf4j/base/avro/AvroCloseableIterable;JI)Ljava/util/Iterator;" line="117"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$4" desc="(Lorg/spf4j/perf/TimeSeriesRecord;)J" line="118"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMeasurementData$3" desc="(Lorg/apache/avro/Schema;Lorg/spf4j/tsdb2/avro/Observation;)Lorg/spf4j/perf/TimeSeriesRecord;" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAggregatedObservations$2" desc="(Lorg/spf4j/base/avro/AvroCloseableIterable;Lorg/apache/avro/Schema;JI)Ljava/util/Iterator;" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$1" desc="(Lorg/apache/avro/Schema;Lorg/spf4j/tsdb2/avro/Observation;Lorg/spf4j/tsdb2/avro/Observation;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getObservations$0" desc="(JJLjava/util/Collection;Lorg/spf4j/tsdb2/avro/Observation;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="144"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/TimeSeriesRecord$1" sourcefilename="TimeSeriesRecord.java"><method name="&lt;init&gt;" desc="(Lorg/apache/avro/generic/GenericRecord;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeStamp" desc="()Ljava/time/Instant;" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongValue" desc="(Ljava/lang/String;)J" line="87"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDoubleValue" desc="(Ljava/lang/String;)D" line="92"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="97"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(ILjava/lang/Object;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchema" desc="()Lorg/apache/avro/Schema;" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="34"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/PerformanceMonitor$1" sourcefilename="PerformanceMonitor.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/perf/MeasurementRecorderSource;JJ[Ljava/lang/Object;Z)V" line="78"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/PerformanceMonitor$2" sourcefilename="PerformanceMonitor.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/perf/MeasurementRecorder;JJ[Ljava/lang/Object;Z)V" line="125"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="128"><counter type="INSTRUCTION" missed="68" covered="56"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="68" covered="77"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/MeasurementAccumulator" sourcefilename="MeasurementAccumulator.java"><method name="getCompositeData" desc="()Ljavax/management/openmbean/CompositeDataSupport;" line="80"><counter type="INSTRUCTION" missed="24" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MeasurementStoreQuery.java"><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="1" cb="1"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="18" mb="0" cb="6"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="19" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="17" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="144"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MeasurementAccumulator.java"><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="1" cb="1"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeSeriesAggregatingIterator.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="102"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeSeriesRecord.java"><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="1" cb="1"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="4" cb="2"/><line nr="145" mi="0" ci="15" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="15" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="15" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="1" cb="1"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="3" cb="3"/><line nr="187" mi="0" ci="16" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="16" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="16" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="7" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="12" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="9" ci="0" mb="4" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="2" cb="0"/><line nr="224" mi="8" ci="0" mb="2" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="220"/><counter type="BRANCH" missed="20" covered="12"/><counter type="LINE" missed="36" covered="49"/><counter type="COMPLEXITY" missed="21" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ProcessVitals.java"><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PerformanceMonitor.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="9" ci="0" mb="0" cb="0"/><line nr="78" mi="31" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="2" cb="0"/><line nr="87" mi="5" ci="0" mb="2" cb="0"/><line nr="88" mi="9" ci="0" mb="0" cb="0"/><line nr="89" mi="17" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="17" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="20" ci="0" mb="0" cb="0"/><line nr="98" mi="19" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="31" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="1" cb="1"/><line nr="134" mi="0" ci="5" mb="1" cb="1"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="17" mb="0" cb="0"/><line nr="138" mi="9" ci="0" mb="0" cb="0"/><line nr="139" mi="17" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="20" ci="0" mb="0" cb="0"/><line nr="145" mi="19" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="260" covered="106"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="26" covered="14"/><counter type="COMPLEXITY" missed="13" covered="6"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="MeasurementsInfo.java"><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="578" covered="621"/><counter type="BRANCH" missed="35" covered="35"/><counter type="LINE" missed="98" covered="126"/><counter type="COMPLEXITY" missed="45" covered="45"/><counter type="METHOD" missed="18" covered="32"/><counter type="CLASS" missed="2" covered="8"/></package><package name="org/spf4j/reflect"><class name="org/spf4j/reflect/TypeMap" sourcefilename="TypeMap.java"><method name="get" desc="(Ljava/lang/reflect/Type;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="safePut" desc="(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lorg/spf4j/reflect/TypeMap;" line="111"><counter type="INSTRUCTION" missed="18" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/reflect/GraphTypeMap" sourcefilename="GraphTypeMap.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="60"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAll" desc="(Ljava/lang/reflect/Type;)Ljava/util/Set;" line="68"><counter type="INSTRUCTION" missed="16" covered="77"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfNotPresent" desc="(Ljava/lang/reflect/Type;Ljava/lang/Object;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/reflect/Type;)Z" line="117"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExact" desc="(Ljava/lang/reflect/Type;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="192"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="2" covered="43"/><counter type="COMPLEXITY" missed="2" covered="18"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/reflect/CachingTypeMapSupplierWrapper" sourcefilename="CachingTypeMapSupplierWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/cache/CacheBuilder;Lorg/spf4j/reflect/TypeMap;Ljava/lang/Class;)V" line="64"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/reflect/TypeMap;Ljava/lang/Class;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfNotPresent" desc="(Ljava/lang/reflect/Type;Lorg/spf4j/reflect/ByTypeSupplier;)Z" line="80"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="safePut" desc="(Ljava/lang/reflect/Type;Lorg/spf4j/reflect/ByTypeSupplier;)V" line="86"><counter type="INSTRUCTION" missed="18" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/reflect/Type;)Z" line="93"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearCache" desc="()V" line="105"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/reflect/Type;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="20" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="82"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="21" covered="22"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/reflect/CachingTypeMapWrapper$TypeMapedObjLoader" sourcefilename="CachingTypeMapWrapper.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/reflect/CachingTypeMapWrapper;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/reflect/Type;)Ljava/util/Set;" line="122"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/reflect/CachingTypeMapWrapper" sourcefilename="CachingTypeMapWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/cache/CacheBuilder;Lorg/spf4j/reflect/TypeMap;)V" line="57"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/reflect/TypeMap;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAll" desc="(Ljava/lang/reflect/Type;)Ljava/util/Set;" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfNotPresent" desc="(Ljava/lang/reflect/Type;Ljava/lang/Object;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/reflect/Type;)Z" line="85"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExact" desc="(Ljava/lang/reflect/Type;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Ljava/lang/reflect/Type;Ljava/util/function/Function;)V" line="104"><counter type="INSTRUCTION" missed="17" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearCache" desc="()V" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="101"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="17" covered="19"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/reflect/CachingTypeMapSupplierWrapper$TypeMapedObjLoader" sourcefilename="CachingTypeMapSupplierWrapper.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/reflect/CachingTypeMapSupplierWrapper;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/reflect/Type;)Ljava/util/Set;" line="137"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CachingTypeMapSupplierWrapper.java"><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="1" cb="1"/><line nr="87" mi="18" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="1" cb="1"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="20" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="2"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="127"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="21" covered="30"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TypeMap.java"><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="20" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="1" cb="1"/><line nr="112" mi="18" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphTypeMap.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="16" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="4"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="12" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="1" cb="1"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="17" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="192"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="2" covered="43"/><counter type="COMPLEXITY" missed="2" covered="18"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CachingTypeMapWrapper.java"><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="1" cb="3"/><line nr="107" mi="17" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="121"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="17" covered="22"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="226" covered="485"/><counter type="BRANCH" missed="10" covered="40"/><counter type="LINE" missed="41" covered="104"/><counter type="COMPLEXITY" missed="16" covered="39"/><counter type="METHOD" missed="8" covered="22"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/spf4j/avro/official"><class name="org/spf4j/avro/official/OriginUtilInterface" sourcefilename="OriginUtilInterface.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createField" desc="(Ljava/lang/String;Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/Object;ZZLorg/apache/avro/Schema$Field$Order;)Lorg/apache/avro/Schema$Field;" line="32"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createRecordSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Z)Lorg/apache/avro/Schema;" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createRecordSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Lorg/apache/avro/Schema;" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OriginUtilInterface.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/spf4j/failsafe"><class name="org/spf4j/failsafe/NotEnoughTimeToRetry" sourcefilename="NotEnoughTimeToRetry.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStackTrace" desc="([Ljava/lang/StackTraceElement;)V" line="47"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/TimeoutRetryPredicate" sourcefilename="TimeoutRetryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/RetryPredicate;J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="40"><counter type="INSTRUCTION" missed="17" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionDecision" desc="(Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="53"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="71"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/JitteredDelaySupplier" sourcefilename="JitteredDelaySupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/RetryDelaySupplier;D)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDelay" desc="()J" line="41"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/AsyncRetryExecutorImpl" sourcefilename="AsyncRetryExecutorImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/RetryPolicy;Lorg/spf4j/failsafe/HedgePolicy;Lorg/spf4j/failsafe/concurrent/FailSafeExecutor;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submit" desc="(Ljava/util/concurrent/Callable;JJ)Ljava/util/concurrent/Future;" line="69"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submitRx" desc="(Ljava/util/concurrent/Callable;JJLjava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;" line="84"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/util/concurrent/Callable;JJ)V" line="103"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;JJ)Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="55"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="19" covered="12"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/PartialTypedExceptionRetryPredicate" sourcefilename="PartialTypedExceptionRetryPredicate.java"><method name="apply" desc="(Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDecision$Type" sourcefilename="RetryDecision.java"><method name="&lt;clinit&gt;" desc="()V" line="222"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/FibonacciRetryDelaySupplier" sourcefilename="FibonacciRetryDelaySupplier.java"><method name="&lt;init&gt;" desc="(IJJ)V" line="36"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDelay" desc="()J" line="51"><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="64"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryPolicy$Builder" sourcefilename="RetryPolicy.java"><method name="&lt;init&gt;" desc="()V" line="151"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/RetryPolicy$Builder;)V" line="151"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withRetryLogger" desc="(Lorg/slf4j/Logger;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withoutRetryLogger" desc="()Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="193"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withDefaultThrowableRetryPredicate" desc="()Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="198"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withDefaultThrowableRetryPredicate" desc="(I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withRetryOnException" desc="(Ljava/lang/Class;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="207"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withRetryOnException" desc="(Ljava/lang/Class;I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="211"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withRetryOnException" desc="(Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="218"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExceptionPartialPredicate" desc="(Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="225"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExceptionPartialPredicate" desc="(Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withExceptionPartialPredicate" desc="(Ljava/lang/Class;Lorg/spf4j/failsafe/PartialTypedExceptionRetryPredicate;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withExceptionPartialPredicate" desc="(Ljava/lang/Class;Lorg/spf4j/failsafe/PartialTypedExceptionRetryPredicate;I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="250"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExceptionPartialPredicate" desc="(Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="261"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withExceptionPartialPredicateSupplier" desc="(Ljava/util/function/Supplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="270"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExceptionStatefulPartialPredicate" desc="(Ljava/util/function/Supplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="276"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExceptionPartialPredicateSupplier" desc="(Lorg/spf4j/failsafe/TimedSupplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="281"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withExceptionStatefulPartialPredicate" desc="(Lorg/spf4j/failsafe/TimedSupplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="288"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withRetryOnResult" desc="(Ljava/lang/Object;I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="293"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withResultPartialPredicate" desc="(Lorg/spf4j/failsafe/PartialResultRetryPredicate;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="301"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withResultPartialPredicate" desc="(Lorg/spf4j/failsafe/PartialResultRetryPredicate;I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="308"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withResultPartialPredicateSupplier" desc="(Ljava/util/function/Supplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withResultStatefulPartialPredicate" desc="(Ljava/util/function/Supplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="322"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withResultPartialPredicateSupplier" desc="(Lorg/spf4j/failsafe/TimedSupplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="327"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withResultStatefulPartialPredicate" desc="(Lorg/spf4j/failsafe/TimedSupplier;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="334"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withJitterFactor" desc="(D)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="338"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withInitialRetries" desc="(I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="350"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withInitialImmediateRetries" desc="(I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="355"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withInitialDelay" desc="(JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="360"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMaxDelay" desc="(JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="365"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMaxExceptionChain" desc="(I)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="370"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="376"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/spf4j/failsafe/RetryPolicy;" line="381"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildAsync" desc="()Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="392"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildAsync" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutor;)Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="397"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$16" desc="([Lorg/spf4j/failsafe/TimedSupplier;[Lorg/spf4j/failsafe/TimedSupplier;JJ)Lorg/spf4j/failsafe/RetryPredicate;" line="384"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$15" desc="()Ljava/lang/Object;" line="384"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$14" desc="(Ljava/lang/Class;)Lorg/spf4j/failsafe/RetryDelaySupplier;" line="385"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withResultPartialPredicateSupplier$13" desc="(Ljava/util/function/Supplier;JJ)Lorg/spf4j/failsafe/PartialResultRetryPredicate;" line="316"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withResultPartialPredicate$12" desc="(ILorg/spf4j/failsafe/PartialResultRetryPredicate;JJ)Lorg/spf4j/failsafe/PartialResultRetryPredicate;" line="309"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$11" desc="(Lorg/spf4j/failsafe/CountLimitedPartialRetryPredicate;Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="310"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withRetryOnResult$10" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="294"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withExceptionPartialPredicateSupplier$9" desc="(Ljava/util/function/Supplier;JJ)Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;" line="270"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withExceptionPartialPredicate$8" desc="(ILorg/spf4j/failsafe/PartialExceptionRetryPredicate;JJ)Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;" line="262"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$7" desc="(Lorg/spf4j/failsafe/CountLimitedPartialRetryPredicate;Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="264"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withExceptionPartialPredicate$6" desc="(Ljava/lang/Class;Lorg/spf4j/failsafe/PartialTypedExceptionRetryPredicate;Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="251"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withExceptionPartialPredicate$5" desc="(Ljava/lang/Class;Lorg/spf4j/failsafe/PartialTypedExceptionRetryPredicate;Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="241"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withExceptionPartialPredicate$4" desc="(JLjava/util/concurrent/TimeUnit;Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;JJ)Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;" line="227"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$3" desc="(Lorg/spf4j/failsafe/TimeLimitedPartialRetryPredicate;Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="229"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withRetryOnException$2" desc="(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="219"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withRetryOnException$1" desc="(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="212"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withDefaultThrowableRetryPredicate$0" desc="(Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="202"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="229" covered="249"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="49" covered="48"/><counter type="COMPLEXITY" missed="35" covered="26"/><counter type="METHOD" missed="28" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDelaySupplier" sourcefilename="RetryDelaySupplier.java"><method name="getAsLong" desc="()J" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/HedgePolicy$1" sourcefilename="HedgePolicy.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHedge" desc="(JJ)Lorg/spf4j/failsafe/Hedge;" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDecision$2" sourcefilename="RetryDecision.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecisionType" desc="()Lorg/spf4j/failsafe/RetryDecision$Type;" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelayNanos" desc="()J" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewCallable" desc="()Ljava/util/concurrent/Callable;" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Lorg/spf4j/base/Either;" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="12"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDecision$1" sourcefilename="RetryDecision.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecisionType" desc="()Lorg/spf4j/failsafe/RetryDecision$Type;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelayNanos" desc="()J" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Lorg/spf4j/base/Either;" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewCallable" desc="()Ljava/util/concurrent/Callable;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDecision$4" sourcefilename="RetryDecision.java"><method name="&lt;init&gt;" desc="(JLjava/util/concurrent/Callable;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecisionType" desc="()Lorg/spf4j/failsafe/RetryDecision$Type;" line="160"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelayNanos" desc="()J" line="165"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/spf4j/base/Either;" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewCallable" desc="()Ljava/util/concurrent/Callable;" line="175"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="180"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDecision$3" sourcefilename="RetryDecision.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDecisionType" desc="()Lorg/spf4j/failsafe/RetryDecision$Type;" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelayNanos" desc="()J" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Lorg/spf4j/base/Either;" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewCallable" desc="()Ljava/util/concurrent/Callable;" line="135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/RetryDecision$5" sourcefilename="RetryDecision.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecisionType" desc="()Lorg/spf4j/failsafe/RetryDecision$Type;" line="194"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelayNanos" desc="()J" line="199"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/spf4j/base/Either;" line="204"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewCallable" desc="()Ljava/util/concurrent/Callable;" line="209"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="13"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryPredicate$1" sourcefilename="RetryPredicate.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionDecision" desc="(Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RateLimiter" sourcefilename="RateLimiter.java"><method name="&lt;init&gt;" desc="(JLjava/time/Duration;JJLjava/util/concurrent/TimeUnit;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JLjava/time/Duration;J)V" line="126"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JLjava/time/Duration;JLjava/util/concurrent/ScheduledExecutorService;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JLjava/time/Duration;JLjava/util/concurrent/ScheduledExecutorService;Ljava/util/function/LongSupplier;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JLjava/time/Duration;JJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/function/LongSupplier;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JLjava/time/Duration;JJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/function/LongSupplier;I)V" line="175"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JLjava/time/Duration;JJJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/function/LongSupplier;I)V" line="198"><counter type="INSTRUCTION" missed="4" covered="82"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPermits" desc="(I)Z" line="227"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="()Z" line="236"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(I)Z" line="240"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrPermits" desc="()J" line="326"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJ)Z" line="332"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJLjava/util/concurrent/TimeUnit;)Z" line="349"><counter type="INSTRUCTION" missed="16" covered="42"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquireEx" desc="(IJLjava/util/concurrent/TimeUnit;)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="374"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquireEx" desc="(IJ)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="391"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquireGetDelayNanos" desc="(IJ)Lorg/spf4j/concurrent/PermitSupplier$Acquisition;" line="412"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceReserve" desc="(JI)Lorg/spf4j/failsafe/RateLimiter$ReservationHandler;" line="422"><counter type="INSTRUCTION" missed="12" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="434"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPermitsPerReplenishInterval" desc="()J" line="438"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPermitReplenishIntervalNanos" desc="()J" line="442"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastReplenishmentNanos" desc="()J" line="446"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="453"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$tryAcquire$2" desc="(JJ)J" line="241"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(JILjava/util/function/LongSupplier;)V" line="218"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(JJJ)J" line="214"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="360"/><counter type="BRANCH" missed="20" covered="20"/><counter type="LINE" missed="21" covered="77"/><counter type="COMPLEXITY" missed="19" covered="27"/><counter type="METHOD" missed="4" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/PartialExceptionRetryPredicate$1" sourcefilename="PartialExceptionRetryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/Callables$AdvancedRetryPredicate;)V" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExceptionDecision" desc="(Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="38"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/DefaultRetryPredicate" sourcefilename="DefaultRetryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/slf4j/Logger;JJLjava/util/function/Supplier;[Lorg/spf4j/failsafe/TimedSupplier;[Lorg/spf4j/failsafe/TimedSupplier;)V" line="60"><counter type="INSTRUCTION" missed="1" covered="79"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecision" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="87"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionDecision" desc="(Ljava/lang/Throwable;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="107"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="242"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="3" covered="44"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/CountLimitedPartialRetryPredicate" sourcefilename="CountLimitedPartialRetryPredicate.java"><method name="&lt;init&gt;" desc="(ILjava/util/function/BiFunction;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="43"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryDecision" sourcefilename="RetryDecision.java"><method name="abort" desc="()Lorg/spf4j/failsafe/RetryDecision;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abortThrow" desc="(Ljava/lang/Throwable;)Lorg/spf4j/failsafe/RetryDecision;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abortReturn" desc="(Ljava/lang/Object;)Lorg/spf4j/failsafe/RetryDecision;" line="117"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retry" desc="(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="151"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retry" desc="(JLjava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retryDefault" desc="(Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="23"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryPredicate" sourcefilename="RetryPredicate.java"><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/RetryPolicy" sourcefilename="RetryPolicy.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/TimedSupplier;I)V" line="87"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noRetryPolicy" desc="()Lorg/spf4j/failsafe/RetryPolicy;" line="93"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultPolicy" desc="()Lorg/spf4j/failsafe/RetryPolicy;" line="97"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;JJ)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="async" desc="(Lorg/spf4j/failsafe/concurrent/FailSafeExecutor;)Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="110"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="async" desc="(Lorg/spf4j/failsafe/HedgePolicy;Lorg/spf4j/failsafe/concurrent/FailSafeExecutor;)Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="114"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="async" desc="()Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRetryPredicate" desc="(JJ)Lorg/spf4j/failsafe/RetryPredicate;" line="123"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="411"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="(Lorg/spf4j/failsafe/RetryPolicy$Builder;)Lorg/spf4j/failsafe/RetryPolicy$Builder;" line="423"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="14" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="21"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/TimeLimitedPartialRetryPredicate" sourcefilename="TimeLimitedPartialRetryPredicate.java"><method name="&lt;init&gt;" desc="(JJJLjava/util/concurrent/TimeUnit;Ljava/util/function/BiFunction;)V" line="37"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="47"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/AsyncRetryExecutor" sourcefilename="AsyncRetryExecutor.java"><method name="submit" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submit" desc="(Ljava/util/concurrent/Callable;J)Ljava/util/concurrent/Future;" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submit" desc="(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submitRx" desc="(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submitRx" desc="(Ljava/util/concurrent/Callable;JJ)Ljava/util/concurrent/CompletableFuture;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/util/concurrent/Callable;)V" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)V" line="98"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultAsyncRetryExecutor" desc="()Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="104"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noRetryAsyncExecutor" desc="()Lorg/spf4j/failsafe/AsyncRetryExecutor;" line="108"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$submitRx$0" desc="()Lorg/spf4j/concurrent/InterruptibleCompletableFuture;" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="27"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/TimedSupplier$1" sourcefilename="TimedSupplier.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(JJ)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/SyncRetryExecutor" sourcefilename="SyncRetryExecutor.java"><method name="call" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;J)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;)V" line="80"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;J)V" line="88"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="(Ljava/util/concurrent/Callable;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)V" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/util/concurrent/Callable;Lorg/spf4j/failsafe/RetryPredicate;Ljava/lang/Class;I)Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="69" covered="138"/><counter type="BRANCH" missed="18" covered="26"/><counter type="LINE" missed="15" covered="49"/><counter type="COMPLEXITY" missed="14" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="119" covered="167"/><counter type="BRANCH" missed="22" covered="26"/><counter type="LINE" missed="25" covered="55"/><counter type="COMPLEXITY" missed="19" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/HedgePolicy" sourcefilename="HedgePolicy.java"><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/TimedSupplier" sourcefilename="TimedSupplier.java"><method name="constant" desc="(Ljava/lang/Object;)Lorg/spf4j/failsafe/TimedSupplier;" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromSupplier" desc="(Ljava/util/function/Supplier;)Lorg/spf4j/failsafe/TimedSupplier;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$fromSupplier$0" desc="(Ljava/util/function/Supplier;JJ)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/DefaultAsyncExecutor" sourcefilename="DefaultAsyncExecutor.java"><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/PartialResultRetryPredicate" sourcefilename="PartialResultRetryPredicate.java"><method name="apply" desc="(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Lorg/spf4j/failsafe/RetryDecision;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/PartialExceptionRetryPredicate" sourcefilename="PartialExceptionRetryPredicate.java"><method name="from" desc="(Lorg/spf4j/base/Callables$AdvancedRetryPredicate;)Lorg/spf4j/failsafe/PartialExceptionRetryPredicate;" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/LimitingExecutor$1" sourcefilename="LimitingExecutor.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reject" desc="(Lorg/spf4j/failsafe/LimitingExecutor;Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/LimitingExecutor" sourcefilename="LimitingExecutor.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/PermitSupplier;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Semaphore;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/LimitingExecutor$RejectedExecutionHandler;Lorg/spf4j/concurrent/Semaphore;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Runnable;)V" line="81"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLimitedCallable" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRejectHandler" desc="()Lorg/spf4j/failsafe/LimitingExecutor$RejectedExecutionHandler;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSemaphore" desc="()Lorg/spf4j/concurrent/Semaphore;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toLimitedCallable$0" desc="(Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/TimeoutRelativeHedge" sourcefilename="TimeoutRelativeHedge.java"><method name="&lt;init&gt;" desc="(IJJI)V" line="48"><counter type="INSTRUCTION" missed="16" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHedge" desc="(JJ)Lorg/spf4j/failsafe/Hedge;" line="63"><counter type="INSTRUCTION" missed="8" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="61"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/GuavaRateLimiter" sourcefilename="GuavaRateLimiter.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/util/concurrent/RateLimiter;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(IJ)Z" line="52"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(IJLjava/util/concurrent/TimeUnit;)Z" line="64"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLimiter" desc="()Lcom/google/common/util/concurrent/RateLimiter;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/failsafe/RateLimiter$ReservationHandler" sourcefilename="RateLimiter.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/failsafe/RateLimiter;JJ)V" line="259"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyAsLong" desc="(JJ)J" line="269"><counter type="INSTRUCTION" missed="22" covered="90"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNsUntilResourcesAvailable" desc="()J" line="305"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="310"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuccess" desc="()Z" line="316"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="permitAvailableEstimateInNanos" desc="()J" line="321"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="117"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="6" covered="30"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/Hedge" sourcefilename="Hedge.java"><method name="&lt;init&gt;" desc="(JI)V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHedgeDelayNanos" desc="()J" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHedgeCount" desc="()I" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="22"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/failsafe/TypeBasedRetryDelaySupplier" sourcefilename="TypeBasedRetryDelaySupplier.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Lorg/spf4j/failsafe/RetryDelaySupplier;" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$apply$0" desc="(Ljava/lang/Class;)Lorg/spf4j/failsafe/RetryDelaySupplier;" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RetryDecision.java"><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="13" ci="0" mb="0" cb="0"/><line nr="117" mi="11" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="12" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="15" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="17" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="12" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="113"/><counter type="LINE" missed="16" covered="19"/><counter type="COMPLEXITY" missed="17" covered="21"/><counter type="METHOD" missed="17" covered="21"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="PartialResultRetryPredicate.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HedgePolicy.java"><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RateLimiter.java"><line nr="85" mi="2" ci="5" mb="1" cb="1"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="4" ci="6" mb="2" cb="2"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="23" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="2" ci="6" mb="1" cb="1"/><line nr="217" mi="0" ci="14" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="10" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="9" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="2"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="1" cb="1"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="1" cb="1"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="2"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="11" mb="1" cb="1"/><line nr="290" mi="3" ci="4" mb="0" cb="0"/><line nr="291" mi="5" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="2"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="23" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="1" cb="1"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="1" cb="1"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="1" cb="1"/><line nr="350" mi="16" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="2"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="2"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="1" cb="1"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="2" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="7" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="2" cb="0"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="4" ci="0" mb="2" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="2" cb="0"/><line nr="393" mi="3" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="2" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="1" cb="1"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="1" cb="1"/><line nr="423" mi="12" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="9" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="8" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="477"/><counter type="BRANCH" missed="23" covered="27"/><counter type="LINE" missed="27" covered="107"/><counter type="COMPLEXITY" missed="24" covered="33"/><counter type="METHOD" missed="6" covered="26"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TypeBasedRetryDelaySupplier.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AsyncRetryExecutorImpl.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="2" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="10" ci="0" mb="0" cb="0"/><line nr="108" mi="12" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="104" covered="55"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="19" covered="12"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CountLimitedPartialRetryPredicate.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="1" cb="1"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimedSupplier.java"><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="12" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="14"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SyncRetryExecutor.java"><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="12" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="2"/><line nr="136" mi="0" ci="10" mb="0" cb="2"/><line nr="138" mi="0" ci="6" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="1" cb="1"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="1" cb="1"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="1" cb="1"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="2"/><line nr="173" mi="0" ci="3" mb="1" cb="1"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="12" ci="5" mb="6" cb="2"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="12" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="1" cb="1"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="1" cb="1"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="1" cb="1"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="167"/><counter type="BRANCH" missed="22" covered="26"/><counter type="LINE" missed="25" covered="55"/><counter type="COMPLEXITY" missed="19" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JitteredDelaySupplier.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeoutRetryPredicate.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="1" cb="1"/><line nr="44" mi="17" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="0" ci="15" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="71"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAsyncExecutor.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GuavaRateLimiter.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FibonacciRetryDelaySupplier.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="1" cb="1"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="64"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RetryDelaySupplier.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PartialTypedExceptionRetryPredicate.java"><line nr="36" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotEnoughTimeToRetry.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultRetryPredicate.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="1" ci="9" mb="1" cb="1"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="17" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="20" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="17" mb="0" cb="2"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="1" cb="1"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="15" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="13" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="242"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="3" covered="44"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LimitingExecutor.java"><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="8" covered="14"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TimeoutRelativeHedge.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="1" cb="1"/><line nr="50" mi="16" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="1" cb="1"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="61"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeLimitedPartialRetryPredicate.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="11" ci="0" mb="2" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PartialExceptionRetryPredicate.java"><line nr="35" mi="11" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="2" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="4" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="RetryPredicate.java"><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RetryPolicy.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="1" cb="1"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="131" mi="17" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="3" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="13" mb="0" cb="2"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="1" cb="1"/><line nr="213" mi="1" ci="2" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="7" ci="0" mb="2" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="9" ci="0" mb="0" cb="0"/><line nr="229" mi="8" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="1" cb="1"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="2" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="9" ci="0" mb="0" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="2" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="8" mb="0" cb="0"/><line nr="316" mi="9" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="10" ci="0" mb="4" cb="0"/><line nr="339" mi="12" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="3" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="5" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="9" mb="0" cb="0"/><line nr="382" mi="0" ci="9" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="0" ci="18" mb="0" cb="0"/><line nr="385" mi="0" ci="15" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="423" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="325"/><counter type="BRANCH" missed="13" covered="5"/><counter type="LINE" missed="55" covered="69"/><counter type="COMPLEXITY" missed="38" covered="36"/><counter type="METHOD" missed="30" covered="35"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Hedge.java"><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="22"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AsyncRetryExecutor.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="27"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1211" covered="1887"/><counter type="BRANCH" missed="87" covered="113"/><counter type="LINE" missed="219" covered="429"/><counter type="COMPLEXITY" missed="157" covered="174"/><counter type="METHOD" missed="96" covered="134"/><counter type="CLASS" missed="7" covered="32"/></package><package name="org/spf4j/log"><class name="org/spf4j/log/Level" sourcefilename="Level.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/logging/Level;Lorg/spf4j/base/avro/LogLevel;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntValue" desc="()I" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJulLevel" desc="()Ljava/util/logging/Level;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAvroLevel" desc="()Lorg/spf4j/base/avro/LogLevel;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromAvroLevel" desc="(Lorg/spf4j/base/avro/LogLevel;)Lorg/spf4j/log/Level;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromJulLevel" desc="(I)Lorg/spf4j/log/Level;" line="90"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="90"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="20" covered="12"/><counter type="COMPLEXITY" missed="14" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/SLF4JBridgeHandler" sourcefilename="SLF4JBridgeHandler.java"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="install" desc="()V" line="135"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootLogger" desc="()Ljava/util/logging/Logger;" line="139"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uninstall" desc="()V" line="149"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInstalled" desc="()Z" line="165"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeHandlersForRootLogger" desc="()V" line="179"><counter type="INSTRUCTION" missed="7" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="189"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="194"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSLF4JLogger" desc="(Ljava/util/logging/LogRecord;)Lorg/slf4j/Logger;" line="200"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callLocationAwareLogger" desc="(Lorg/slf4j/spi/LocationAwareLogger;Ljava/util/logging/LogRecord;)V" line="208"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="callPlainSLF4JLogger" desc="(Lorg/slf4j/Logger;Ljava/util/logging/LogRecord;)V" line="232"><counter type="INSTRUCTION" missed="110" covered="20"/><counter type="BRANCH" missed="16" covered="2"/><counter type="LINE" missed="23" covered="5"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logEfficient" desc="(Ljava/lang/String;Ljava/util/logging/LogRecord;Lorg/slf4j/Logger;)V" line="275"><counter type="INSTRUCTION" missed="75" covered="81"/><counter type="BRANCH" missed="18" covered="20"/><counter type="LINE" missed="18" covered="25"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceMethodInfo" desc="(Ljava/util/logging/LogRecord;)Lorg/spf4j/base/avro/Method;" line="349"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessageI18N" desc="(Ljava/util/logging/LogRecord;)Lorg/spf4j/base/Pair;" line="368"><counter type="INSTRUCTION" missed="82" covered="69"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="17" covered="17"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="publish" desc="(Ljava/util/logging/LogRecord;)V" line="425"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="408" covered="278"/><counter type="BRANCH" missed="67" covered="39"/><counter type="LINE" missed="94" covered="81"/><counter type="COMPLEXITY" missed="47" covered="22"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/SLF4JBridgeHandler$1" sourcefilename="SLF4JBridgeHandler.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/lang/ref/Reference;" line="87"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/AvroLogRecordImpl" sourcefilename="AvroLogRecordImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/avro/LogRecord;)V" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/avro/LogRecord;Z)V" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLogRecord" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/base/avro/LogRecord;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArguments" desc="()[Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtraArgumentsRaw" desc="()[Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtraArguments" desc="()[Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtraThrowable" desc="()Ljava/lang/Throwable;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLevel" desc="()Lorg/spf4j/log/Level;" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLoggerName" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMarker" desc="()Lorg/slf4j/Marker;" line="99"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessageFormat" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrMessageArguments" desc="()I" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreadName" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeStamp" desc="()J" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeStampInstant" desc="()Ljava/time/Instant;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLogged" desc="()Z" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIsLogged" desc="()V" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attach" desc="(Ljava/lang/Object;)V" line="145"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttachments" desc="()Ljava/util/Set;" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasAttachment" desc="(Ljava/lang/Object;)Z" line="154"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/log/SLF4JBridgeHandler$3" sourcefilename="SLF4JBridgeHandler.java"><method name="&lt;init&gt;" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/reflect/Field;" line="113"><counter type="INSTRUCTION" missed="8" covered="9"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/SLF4JBridgeHandler$2" sourcefilename="SLF4JBridgeHandler.java"><method name="&lt;init&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/String;)Lorg/spf4j/text/MessageFormat;" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/LogUtils" sourcefilename="LogUtils.java"><method name="logUpgrade" desc="(Lorg/slf4j/Logger;Lorg/slf4j/Marker;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="116" covered="29"/><counter type="BRANCH" missed="29" covered="5"/><counter type="LINE" missed="29" covered="9"/><counter type="COMPLEXITY" missed="19" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logUpgrade" desc="(Ljava/util/logging/Logger;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="125"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="148" covered="29"/><counter type="BRANCH" missed="33" covered="5"/><counter type="LINE" missed="39" covered="9"/><counter type="COMPLEXITY" missed="22" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/SLf4jXLogAdapter" sourcefilename="SLf4jXLogAdapter.java"><method name="&lt;init&gt;" desc="(Lorg/slf4j/Logger;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logUpgrade" desc="(Lorg/slf4j/Marker;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="log" desc="(Lorg/slf4j/Marker;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="71" covered="22"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="15" covered="8"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnabled" desc="(Lorg/spf4j/log/Level;Lorg/slf4j/Marker;)Z" line="100"><counter type="INSTRUCTION" missed="61" covered="11"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="14" covered="3"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapped" desc="()Lorg/slf4j/Logger;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="144" covered="50"/><counter type="BRANCH" missed="26" covered="6"/><counter type="LINE" missed="30" covered="17"/><counter type="COMPLEXITY" missed="20" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/LogAttribute" sourcefilename="LogAttribute.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/String;Ljava/lang/Object;)Lorg/spf4j/log/LogAttribute;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traceId" desc="(Ljava/lang/CharSequence;)Lorg/spf4j/log/LogAttribute;" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="profileSamples" desc="(Lorg/spf4j/base/StackSamples;)Lorg/spf4j/log/LogAttribute;" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="origLevel" desc="(Lorg/spf4j/log/Level;)Lorg/spf4j/log/LogAttribute;" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="origLoggerName" desc="(Ljava/lang/String;)Lorg/spf4j/log/LogAttribute;" line="91"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="origTimeStamp" desc="(Ljava/time/Instant;)Lorg/spf4j/log/LogAttribute;" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="origTimeStamp" desc="(J)Lorg/spf4j/log/LogAttribute;" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Lorg/spf4j/log/Slf4jLogRecord;)Lorg/spf4j/log/LogAttribute;" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execTimeMicros" desc="(JLjava/util/concurrent/TimeUnit;)Lorg/spf4j/log/LogAttribute;" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Ljava/lang/String;J)Lorg/spf4j/log/LogAttribute;" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeJsonTo" desc="(Ljava/lang/Appendable;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeJsonTo" desc="(Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromJson" desc="(Ljava/lang/CharSequence;)Lorg/spf4j/log/LogAttribute;" line="138"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMap" desc="(Ljava/util/Map;)Lorg/spf4j/log/LogAttribute;" line="148"><counter type="INSTRUCTION" missed="12" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/slf4j/Marker;)V" line="158"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lorg/slf4j/Marker;)Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasChildren" desc="()Z" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasReferences" desc="()Z" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lorg/slf4j/Marker;)Z" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/String;)Z" line="188"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeReplace" desc="()Ljava/lang/Object;" line="193"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="100"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="21" covered="26"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="16" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/Slf4jLogRecordImpl" sourcefilename="Slf4jLogRecordImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/spf4j/log/Level;Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLjava/lang/String;Lorg/spf4j/log/Level;Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLjava/lang/String;Lorg/spf4j/log/Level;Lorg/slf4j/Marker;JLjava/lang/String;[Ljava/lang/Object;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoggerName" desc="()Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLevel" desc="()Lorg/spf4j/log/Level;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeStamp" desc="()J" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarker" desc="()Lorg/slf4j/Marker;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessageFormat" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArguments" desc="()[Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrMessageArguments" desc="()I" line="130"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreadName" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="materializeMessage" desc="()V" line="147"><counter type="INSTRUCTION" missed="6" covered="43"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtraArgumentsRaw" desc="()[Ljava/lang/Object;" line="166"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtraArguments" desc="()[Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrExtraThrowables" desc="()I" line="199"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtraThrowable" desc="()Ljava/lang/Throwable;" line="213"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="234"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeJsonTo" desc="(Ljava/lang/Appendable;)V" line="245"><counter type="INSTRUCTION" missed="33" covered="59"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLogged" desc="()Z" line="276"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIsLogged" desc="()V" line="281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attach" desc="(Ljava/lang/Object;)V" line="286"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAttachment" desc="(Ljava/lang/Object;)Z" line="294"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAttachments" desc="()Ljava/util/Set;" line="299"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="341"/><counter type="BRANCH" missed="8" covered="26"/><counter type="LINE" missed="22" covered="89"/><counter type="COMPLEXITY" missed="11" covered="31"/><counter type="METHOD" missed="5" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/LogAttribute$AttrProxy" sourcefilename="LogAttribute.java"><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="203"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readResolve" desc="()Ljava/lang/Object;" line="208"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/log/Slf4jLogRecordImpl$Lazy" sourcefilename="Slf4jLogRecordImpl.java"><method name="&lt;clinit&gt;" desc="()V" line="304"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/LogPrinter$BufferedAppendable" sourcefilename="LogPrinter.java"><method name="from" desc="(Ljava/lang/StringBuilder;)Lorg/spf4j/log/LogPrinter$BufferedAppendable;" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/Slf4jLogRecord" sourcefilename="Slf4jLogRecord.java"><method name="getTimeStampInstant" desc="()Ljava/time/Instant;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareByTimestamp" desc="(Lorg/spf4j/log/Slf4jLogRecord;Lorg/spf4j/log/Slf4jLogRecord;)I" line="117"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLogRecord" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/base/avro/LogRecord;" line="129"><counter type="INSTRUCTION" missed="182" covered="0"/><counter type="BRANCH" missed="27" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="31" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/log/LogPrinter$BufferedAppendable$1" sourcefilename="LogPrinter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendable" desc="()Ljava/lang/Appendable;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonStringEscapingAppendable" desc="()Ljava/lang/Appendable;" line="92"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentPos" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetPos" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/LogPrinter" sourcefilename="LogPrinter.java"><method name="getAppenderSupplier" desc="()Lorg/spf4j/io/ConfigurableAppenderSupplier;" line="177"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="181"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="185"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/time/format/DateTimeFormatter;Ljava/nio/charset/Charset;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lorg/spf4j/log/Slf4jLogRecord;Ljava/io/OutputStream;Ljava/io/OutputStream;)Ljava/io/OutputStream;" line="197"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lorg/spf4j/log/Slf4jLogRecord;Ljava/io/OutputStream;)V" line="207"><counter type="INSTRUCTION" missed="6" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printToBytes" desc="(Lorg/spf4j/log/Slf4jLogRecord;)[B" line="228"><counter type="INSTRUCTION" missed="8" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lorg/spf4j/base/avro/LogRecord;Ljava/io/OutputStream;)V" line="249"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printTo" desc="(Ljava/lang/StringBuilder;Lorg/spf4j/log/Slf4jLogRecord;Ljava/lang/String;)V" line="255"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printTo" desc="(Ljava/io/OutputStream;Lorg/spf4j/base/avro/LogRecord;Ljava/lang/String;)V" line="262"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printTo" desc="(Ljava/io/PrintStream;Lorg/spf4j/log/Slf4jLogRecord;Ljava/lang/String;)V" line="275"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printMarker" desc="(Lorg/slf4j/Marker;Ljava/lang/Appendable;Ljava/lang/Appendable;)V" line="290"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lorg/spf4j/log/Slf4jLogRecord;Lorg/spf4j/log/LogPrinter$BufferedAppendable;Ljava/lang/String;)V" line="314"><counter type="INSTRUCTION" missed="5" covered="146"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lorg/spf4j/base/avro/LogRecord;Lorg/spf4j/log/LogPrinter$BufferedAppendable;Ljava/lang/String;)V" line="370"><counter type="INSTRUCTION" missed="172" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printJsonObject" desc="(Ljava/lang/Object;Lorg/spf4j/log/LogPrinter$BufferedAppendable;)V" line="431"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exHandle" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Ljava/lang/Throwable;)V" line="460"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="470"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Ljava/nio/charset/Charset;)Lorg/spf4j/recyclable/impl/ThreadLocalRecyclingSupplier;" line="192"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$0" desc="(Ljava/nio/charset/Charset;)Lorg/spf4j/log/LogPrinter$Buffer;" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="289" covered="446"/><counter type="BRANCH" missed="16" covered="32"/><counter type="LINE" missed="77" covered="124"/><counter type="COMPLEXITY" missed="16" covered="28"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/LogPrinter$Buffer" sourcefilename="LogPrinter.java"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="130"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendable" desc="()Ljava/lang/Appendable;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonStringEscapingAppendable" desc="()Ljava/lang/Appendable;" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="147"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytes" desc="()[B" line="154"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentPos" desc="()I" line="163"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetPos" desc="(I)V" line="170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="74"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/log/ExecContextLogger" sourcefilename="ExecContextLogger.java"><method name="from" desc="(Lorg/slf4j/Logger;)Lorg/spf4j/log/ExecContextLogger;" line="65"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/slf4j/Logger;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/log/XLog;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapped" desc="()Lorg/slf4j/Logger;" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnabled" desc="(Lorg/spf4j/log/Level;Lorg/slf4j/Marker;)Z" line="91"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/log/Level;Lorg/spf4j/base/avro/LogRecord;)V" line="108"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Lorg/slf4j/Marker;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="log" desc="(Lorg/spf4j/base/ExecutionContext;Lorg/slf4j/Marker;Lorg/spf4j/log/Level;Ljava/lang/String;[Ljava/lang/Object;)V" line="135"><counter type="INSTRUCTION" missed="13" covered="69"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTraceEnabled" desc="()Z" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Ljava/lang/String;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="172"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="177"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="182"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="187"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTraceEnabled" desc="(Lorg/slf4j/Marker;)Z" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Lorg/slf4j/Marker;Ljava/lang/String;)V" line="197"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V" line="202"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="207"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="212"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V" line="217"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDebugEnabled" desc="()Z" line="222"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Ljava/lang/String;)V" line="227"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="232"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="237"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="242"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="247"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDebugEnabled" desc="(Lorg/slf4j/Marker;)Z" line="252"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Lorg/slf4j/Marker;Ljava/lang/String;)V" line="257"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V" line="262"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="267"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="272"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V" line="277"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInfoEnabled" desc="()Z" line="282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Ljava/lang/String;)V" line="287"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="292"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="297"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="302"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="307"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInfoEnabled" desc="(Lorg/slf4j/Marker;)Z" line="312"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Lorg/slf4j/Marker;Ljava/lang/String;)V" line="317"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V" line="322"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="327"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="332"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V" line="337"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWarnEnabled" desc="()Z" line="342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Ljava/lang/String;)V" line="347"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="352"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="357"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="362"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="367"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWarnEnabled" desc="(Lorg/slf4j/Marker;)Z" line="372"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Lorg/slf4j/Marker;Ljava/lang/String;)V" line="377"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V" line="382"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="387"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="392"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V" line="397"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isErrorEnabled" desc="()Z" line="402"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;)V" line="407"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="412"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="417"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="422"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="427"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isErrorEnabled" desc="(Lorg/slf4j/Marker;)Z" line="432"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/slf4j/Marker;Ljava/lang/String;)V" line="437"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V" line="442"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="447"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V" line="452"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V" line="457"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="782" covered="104"/><counter type="BRANCH" missed="28" covered="6"/><counter type="LINE" missed="142" covered="23"/><counter type="COMPLEXITY" missed="80" covered="7"/><counter type="METHOD" missed="64" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AvroLogRecordImpl.java"><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LogUtils.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="5" cb="1"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="13" ci="0" mb="0" cb="0"/><line nr="118" mi="12" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="29"/><counter type="BRANCH" missed="33" covered="5"/><counter type="LINE" missed="39" covered="9"/><counter type="COMPLEXITY" missed="22" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SLF4JBridgeHandler.java"><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="5" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="8" ci="0" mb="2" cb="0"/><line nr="168" mi="5" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="2" ci="6" mb="1" cb="1"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="1" cb="1"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="2" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="2" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="2" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="2" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="2" cb="0"/><line nr="224" mi="15" ci="0" mb="0" cb="0"/><line nr="226" mi="13" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="2" cb="2"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="2" cb="0"/><line nr="242" mi="2" ci="0" mb="2" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="2" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="7" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="2" cb="0"/><line nr="259" mi="7" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="2" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="2" cb="0"/><line nr="263" mi="7" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="2" cb="0"/><line nr="265" mi="7" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="2"/><line nr="279" mi="0" ci="3" mb="1" cb="1"/><line nr="280" mi="2" ci="0" mb="2" cb="0"/><line nr="281" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="2"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="2" mb="1" cb="1"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="2" cb="0"/><line nr="298" mi="2" ci="0" mb="2" cb="0"/><line nr="299" mi="6" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="2" cb="0"/><line nr="305" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="1" cb="1"/><line nr="312" mi="2" ci="0" mb="2" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="2"/><line nr="318" mi="0" ci="2" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="2"/><line nr="324" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="1" cb="1"/><line nr="330" mi="2" ci="0" mb="2" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="1" cb="1"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="8" mb="2" cb="4"/><line nr="350" mi="0" ci="9" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="5" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="1" cb="1"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="1" cb="1"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="1" cb="1"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="1" cb="3"/><line nr="392" mi="0" ci="8" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="16" mb="0" cb="2"/><line nr="398" mi="0" ci="2" mb="1" cb="1"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="1" cb="1"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="10" ci="0" mb="2" cb="0"/><line nr="407" mi="4" ci="0" mb="2" cb="0"/><line nr="408" mi="7" ci="0" mb="0" cb="0"/><line nr="411" mi="5" ci="0" mb="0" cb="0"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="414" mi="18" ci="0" mb="0" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="1" cb="1"/><line nr="427" mi="5" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="1" ci="0" mb="0" cb="0"/><line nr="432" mi="6" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="416" covered="309"/><counter type="BRANCH" missed="67" covered="39"/><counter type="LINE" missed="98" covered="87"/><counter type="COMPLEXITY" missed="47" covered="28"/><counter type="METHOD" missed="4" covered="18"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="LogAttribute.java"><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="12" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="100"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="25" covered="26"/><counter type="COMPLEXITY" missed="19" covered="9"/><counter type="METHOD" missed="18" covered="9"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Slf4jLogRecord.java"><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="16" ci="0" mb="2" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="3" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="2" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="2" cb="0"/><line nr="166" mi="16" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="2" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="2" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="9" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="16" ci="0" mb="4" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="31" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level.java"><line nr="41" mi="0" ci="28" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="6" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="90"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="20" covered="12"/><counter type="COMPLEXITY" missed="14" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecContextLogger.java"><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="17" ci="0" mb="4" cb="0"/><line nr="100" mi="8" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="12" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="2" cb="0"/><line nr="115" mi="18" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="4" cb="0"/><line nr="120" mi="18" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="2" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="1" cb="1"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="1" cb="1"/><line nr="149" mi="0" ci="11" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="1" cb="1"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="15" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="11" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="15" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="11" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="11" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="15" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="11" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="11" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="15" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="11" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="7" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="11" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="15" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="6" ci="0" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="11" ci="0" mb="0" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="7" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="11" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="15" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="332" mi="6" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="11" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="7" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="11" ci="0" mb="0" cb="0"/><line nr="353" mi="1" ci="0" mb="0" cb="0"/><line nr="357" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="15" ci="0" mb="0" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="11" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="377" mi="7" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="11" ci="0" mb="0" cb="0"/><line nr="383" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="15" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="397" mi="11" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="5" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="408" mi="1" ci="0" mb="0" cb="0"/><line nr="412" mi="11" ci="0" mb="0" cb="0"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="15" ci="0" mb="0" cb="0"/><line nr="418" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="6" ci="0" mb="0" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="427" mi="11" ci="0" mb="0" cb="0"/><line nr="428" mi="1" ci="0" mb="0" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="437" mi="7" ci="0" mb="0" cb="0"/><line nr="438" mi="1" ci="0" mb="0" cb="0"/><line nr="442" mi="11" ci="0" mb="0" cb="0"/><line nr="443" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="15" ci="0" mb="0" cb="0"/><line nr="448" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="1" ci="0" mb="0" cb="0"/><line nr="457" mi="11" ci="0" mb="0" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="462" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="782" covered="104"/><counter type="BRANCH" missed="28" covered="6"/><counter type="LINE" missed="142" covered="23"/><counter type="COMPLEXITY" missed="80" covered="7"/><counter type="METHOD" missed="64" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Slf4jLogRecordImpl.java"><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="0" ci="13" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="2" cb="0"/><line nr="168" mi="9" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="2"/><line nr="181" mi="0" ci="9" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="10" mb="0" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="10" mb="0" cb="2"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="10" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="2" mb="1" cb="1"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="1" cb="1"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="16" ci="0" mb="2" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="1" cb="1"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="2"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="11" mb="0" cb="2"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="351"/><counter type="BRANCH" missed="8" covered="26"/><counter type="LINE" missed="22" covered="91"/><counter type="COMPLEXITY" missed="11" covered="32"/><counter type="METHOD" missed="5" covered="21"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LogPrinter.java"><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="11" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="2"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="1" cb="1"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="1" cb="1"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="7" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="1" cb="1"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="2"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="7" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="2"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="10" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="2"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="2"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="2"/><line nr="341" mi="0" ci="2" mb="1" cb="1"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="2"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="2"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="2"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="3" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="5" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="6" ci="0" mb="0" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="5" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="391" mi="6" ci="0" mb="2" cb="0"/><line nr="392" mi="2" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="11" ci="0" mb="2" cb="0"/><line nr="395" mi="2" ci="0" mb="2" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="9" ci="0" mb="2" cb="0"/><line nr="403" mi="2" ci="0" mb="2" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="2" cb="0"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="415" mi="7" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="2"/><line nr="432" mi="0" ci="6" mb="0" cb="0"/><line nr="434" mi="0" ci="7" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="2"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="7" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="7" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="306" covered="554"/><counter type="BRANCH" missed="16" covered="34"/><counter type="LINE" missed="83" covered="153"/><counter type="COMPLEXITY" missed="17" covered="44"/><counter type="METHOD" missed="7" covered="29"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="SLf4jXLogAdapter.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="4" cb="2"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="2" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="1" cb="1"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="5" cb="1"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="2" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="12" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="144" covered="50"/><counter type="BRANCH" missed="26" covered="6"/><counter type="LINE" missed="30" covered="17"/><counter type="COMPLEXITY" missed="20" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2360" covered="1587"/><counter type="BRANCH" missed="226" covered="117"/><counter type="LINE" missed="533" covered="418"/><counter type="COMPLEXITY" missed="271" covered="130"/><counter type="METHOD" missed="129" covered="92"/><counter type="CLASS" missed="3" covered="15"/></package><package name="org/spf4j/concurrent/jdbc"><class name="org/spf4j/concurrent/jdbc/JdbcHeartBeat" sourcefilename="JdbcHeartBeat.java"><method name="close" desc="()V" line="141"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;JID)V" line="170"><counter type="INSTRUCTION" missed="14" covered="210"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeatDurationNanos" desc="()J" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerJmx" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregisterJmx" desc="()V" line="218"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLyfecycleHook" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$LifecycleHook;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLifecycleHook" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$LifecycleHook;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createHeartbeatRow" desc="()V" line="231"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDeadHeartBeatRows" desc="(J)I" line="247"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeDeadHeartBeatRows" desc="(Ljava/sql/Connection;J)I" line="254"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeHeartBeatRow" desc="(I)V" line="262"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDeadHeartBeatRowsAsyncNoReturn" desc="(J)V" line="278"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeDeadHeartBeatRowsAsync" desc="(J)Ljava/util/concurrent/Future;" line="287"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeartBeatRunnable" desc="()Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$ScheduledHeartBeat;" line="291"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduleHeartbeat" desc="(Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;)V" line="298"><counter type="INSTRUCTION" missed="28" covered="60"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beat" desc="()V" line="342"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beat" desc="(Ljava/sql/Connection;J)V" line="350"><counter type="INSTRUCTION" missed="39" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryBeat" desc="(Ljava/sql/Connection;JJ)Z" line="371"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateLastRunNanos" desc="(J)V" line="380"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastRunDB" desc="()J" line="386"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntervalMillis" desc="()J" line="407"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastRunNanos" desc="()J" line="412"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastRunTimeStampString" desc="()Ljava/lang/String;" line="417"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeartBeatAndSubscribe" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$LifecycleHook;)Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;" line="432"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeartBeatAndSubscribe" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$LifecycleHook;II)Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;" line="441"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeartBeatAndSubscribe" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$LifecycleHook;IILcom/google/common/util/concurrent/ListeningScheduledExecutorService;)Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;" line="452"><counter type="INSTRUCTION" missed="12" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopHeartBeats" desc="()V" line="500"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHbTableDesc" desc="()Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;" line="511"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="516"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLastRunDB$5" desc="(Ljava/sql/Connection;J)Ljava/lang/Long;" line="387"><counter type="INSTRUCTION" missed="17" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$beat$4" desc="(Ljava/sql/Connection;J)Ljava/lang/Object;" line="343"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeDeadHeartBeatRowsAsync$3" desc="(J)Ljava/lang/Integer;" line="287"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$removeHeartBeatRow$2" desc="(Ljava/sql/Connection;J)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeDeadHeartBeatRows$1" desc="(Ljava/sql/Connection;J)Ljava/lang/Integer;" line="248"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createHeartbeatRow$0" desc="(Ljava/sql/Connection;J)Ljava/lang/Object;" line="233"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="214" covered="678"/><counter type="BRANCH" missed="12" covered="28"/><counter type="LINE" missed="24" covered="152"/><counter type="COMPLEXITY" missed="21" covered="35"/><counter type="METHOD" missed="9" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcHeartBeat$ScheduledHeartBeat" sourcefilename="JdbcHeartBeat.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;)V" line="520"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="524"><counter type="INSTRUCTION" missed="27" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleError" desc="(Lorg/spf4j/concurrent/jdbc/HeartBeatError;)V" line="546"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleError$0" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat$LifecycleHook;)V" line="551"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="33"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="18" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/ProcessLimitedJdbcSemaphore" sourcefilename="ProcessLimitedJdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;I)V" line="48"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="release" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAcquire" desc="(IJ)Z" line="62"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/jdbc/JdbcLock" sourcefilename="JdbcLock.java"><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/SemaphoreTablesDesc;Ljava/lang/String;I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()V" line="64"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lockInterruptibly" desc="()V" line="76"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryLock" desc="()Z" line="85"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryLock" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unlock" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCondition" desc="()Ljava/util/concurrent/locks/Condition;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="109"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="41"/><counter type="LINE" missed="18" covered="11"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Ljava/lang/String;I)V" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Ljava/lang/String;IZ)V" line="171"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/SemaphoreTablesDesc;Ljava/lang/String;IIZ)V" line="178"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/jdbc/SemaphoreTablesDesc;Ljava/lang/String;IIZI)V" line="186"><counter type="INSTRUCTION" missed="24" covered="641"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="45"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerJmx" desc="()V" line="318"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregisterJmx" desc="()V" line="322"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="()V" line="326"><counter type="INSTRUCTION" missed="14" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkClosed" desc="()V" line="332"><counter type="INSTRUCTION" missed="14" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLockRowIfNotPresent" desc="(ZI)V" line="339"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOwnerRowIfNotPresent" desc="()V" line="374"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryAcquire" desc="(IJ)Z" line="395"><counter type="INSTRUCTION" missed="57" covered="112"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="18" covered="29"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="(I)V" line="505"><counter type="INSTRUCTION" missed="18" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="releaseAll" desc="()V" line="539"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="releaseReservations" desc="(Ljava/sql/Connection;JI)V" line="547"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availablePermits" desc="()I" line="560"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="permitsOwned" desc="()I" line="581"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="totalPermits" desc="()I" line="603"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeadOwnerPermits" desc="(I)Ljava/util/List;" line="621"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeadOwnerPermits" desc="(Ljava/sql/Connection;JI)Ljava/util/List;" line="628"><counter type="INSTRUCTION" missed="24" covered="32"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="releaseDeadOwnerPermits" desc="(I)I" line="660"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updatePermits" desc="(I)V" line="684"><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reducePermits" desc="(I)V" line="709"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increasePermits" desc="(I)V" line="732"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDeadHeartBeatAndNotOwnerRows" desc="(J)I" line="753"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDeadHeartBeatAndNotOwnerRows" desc="(Ljava/sql/Connection;J)I" line="762"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDeadNotOwnedRowsOnly" desc="(Ljava/sql/Connection;J)I" line="771"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="780"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="786"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalize" desc="()V" line="798"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJdbcTimeoutSeconds" desc="()I" line="805"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIsHealthy" desc="()Z" line="810"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$releaseDeadOwnerPermits$8" desc="(ILjava/sql/Connection;J)Ljava/lang/Integer;" line="661"><counter type="INSTRUCTION" missed="54" covered="17"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="12" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDeadOwnerPermits$7" desc="(ILjava/sql/Connection;J)Ljava/util/List;" line="622"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$totalPermits$6" desc="(Ljava/sql/Connection;J)Ljava/lang/Integer;" line="604"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$permitsOwned$5" desc="(Ljava/sql/Connection;J)Ljava/lang/Integer;" line="582"><counter type="INSTRUCTION" missed="8" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$availablePermits$4" desc="(Ljava/sql/Connection;J)Ljava/lang/Integer;" line="561"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$tryAcquire$3" desc="()Ljava/lang/Integer;" line="460"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createOwnerRowIfNotPresent$2" desc="(Ljava/sql/Connection;J)Ljava/lang/Object;" line="376"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createLockRowIfNotPresent$1" desc="(IZLjava/sql/Connection;J)Ljava/lang/Object;" line="340"><counter type="INSTRUCTION" missed="49" covered="74"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="363" covered="1353"/><counter type="BRANCH" missed="24" covered="38"/><counter type="LINE" missed="69" covered="209"/><counter type="COMPLEXITY" missed="28" covered="44"/><counter type="METHOD" missed="6" covered="35"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$1" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Error;)V" line="200"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onClose" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="10"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$6" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;I)V" line="732"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/sql/Connection;J)Ljava/lang/Void;" line="735"><counter type="INSTRUCTION" missed="13" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$7" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;)V" line="753"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/sql/Connection;J)Ljava/lang/Integer;" line="756"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$4" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;I)V" line="687"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/sql/Connection;J)Ljava/lang/Void;" line="690"><counter type="INSTRUCTION" missed="13" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$5" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;I)V" line="709"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/sql/Connection;J)Ljava/lang/Void;" line="712"><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$2" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;ILorg/spf4j/base/MutableHolder;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/sql/Connection;J)Ljava/lang/Boolean;" line="408"><counter type="INSTRUCTION" missed="29" covered="113"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="125"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcSemaphore$3" sourcefilename="JdbcSemaphore.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcSemaphore;I)V" line="508"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/sql/Connection;J)Ljava/lang/Void;" line="511"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/HeartBeatError" sourcefilename="HeartBeatError.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/jdbc/OwnerPermits" sourcefilename="OwnerPermits.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOwner" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrPermits" desc="()I" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/jdbc/SemaphoreTablesDesc" sourcefilename="SemaphoreTablesDesc.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSemaphoreTableName" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSemNameColumn" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAvailablePermitsColumn" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTotalPermitsColumn" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastModifiedByColumn" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastModifiedAtColumn" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPermitsByOwnerTableName" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOwnerColumn" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOwnerPermitsColumn" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeartBeatTableDesc" desc="()Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withDbType" desc="(Lorg/spf4j/jdbc/DbType;)Lorg/spf4j/concurrent/jdbc/SemaphoreTablesDesc;" line="141"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="148"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="153"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="179" covered="113"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="30" covered="41"/><counter type="COMPLEXITY" missed="16" covered="12"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcHeartBeat$4" sourcefilename="JdbcHeartBeat.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;)V" line="474"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="477"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcHeartBeat$2" sourcefilename="JdbcHeartBeat.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;)V" line="315"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSuccess" desc="(Ljava/lang/Object;)V" line="318"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFailure" desc="(Ljava/lang/Throwable;)V" line="329"><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="40"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcHeartBeat$3" sourcefilename="JdbcHeartBeat.java"><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;)V" line="460"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Error;)V" line="464"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onClose" desc="()V" line="468"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/concurrent/jdbc/JdbcHeartBeat$1" sourcefilename="JdbcHeartBeat.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/jdbc/JdbcHeartBeat;ZJ)V" line="278"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="281"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/concurrent/jdbc/HeartBeatTableDesc" sourcefilename="HeartBeatTableDesc.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/spf4j/jdbc/DbType;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTableName" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOwnerColumn" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntervalColumn" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastHeartbeatColumn" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDbType" desc="()Lorg/spf4j/jdbc/DbType;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withDbType" desc="(Lorg/spf4j/jdbc/DbType;)Lorg/spf4j/concurrent/jdbc/HeartBeatTableDesc;" line="115"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="125"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="62"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="19" covered="22"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HeartBeatTableDesc.java"><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="13" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="2" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="9" ci="0" mb="2" cb="0"/><line nr="155" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="104" covered="62"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="19" covered="22"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JdbcHeartBeat.java"><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="1" cb="1"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="1" cb="1"/><line nr="172" mi="14" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="10" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="28" mb="0" cb="0"/><line nr="191" mi="0" ci="34" mb="0" cb="0"/><line nr="194" mi="0" ci="16" mb="0" cb="0"/><line nr="196" mi="0" ci="22" mb="0" cb="0"/><line nr="198" mi="0" ci="20" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="10" ci="0" mb="0" cb="0"/><line nr="248" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="7" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="1" cb="1"/><line nr="268" mi="16" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="18" ci="0" mb="0" cb="0"/><line nr="281" mi="6" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="11" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="2"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="1" cb="1"/><line nr="300" mi="12" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="11" mb="1" cb="1"/><line nr="307" mi="14" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="1" cb="1"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="17" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="1" cb="1"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="1" cb="1"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="1" cb="1"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="10" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="1" cb="1"/><line nr="352" mi="12" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="1" cb="1"/><line nr="360" mi="21" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="8" mb="0" cb="2"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="12" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="1" cb="1"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="1" cb="1"/><line nr="394" mi="12" ci="0" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="398" mi="5" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="5" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="9" mb="0" cb="0"/><line nr="441" mi="0" ci="7" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="1" cb="1"/><line nr="454" mi="12" ci="0" mb="0" cb="0"/><line nr="456" mi="0" ci="5" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="2"/><line nr="458" mi="0" ci="10" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="12" mb="0" cb="0"/><line nr="464" mi="1" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="11" mb="0" cb="0"/><line nr="477" mi="0" ci="4" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="2" mb="0" cb="2"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="1" cb="1"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="1" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="32" ci="0" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="4" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="1" cb="1"/><line nr="530" mi="14" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="2"/><line nr="537" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="1" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="12" ci="0" mb="2" cb="0"/><line nr="547" mi="3" ci="0" mb="0" cb="0"/><line nr="548" mi="1" ci="0" mb="0" cb="0"/><line nr="549" mi="6" ci="0" mb="0" cb="0"/><line nr="551" mi="2" ci="0" mb="0" cb="0"/><line nr="552" mi="1" ci="0" mb="0" cb="0"/><line nr="553" mi="5" ci="0" mb="0" cb="0"/><line nr="554" mi="1" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="556" mi="2" ci="0" mb="2" cb="0"/><line nr="557" mi="3" ci="0" mb="0" cb="0"/><line nr="559" mi="4" ci="0" mb="0" cb="0"/><line nr="560" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="313" covered="792"/><counter type="BRANCH" missed="20" covered="34"/><counter type="LINE" missed="48" covered="181"/><counter type="COMPLEXITY" missed="32" covered="45"/><counter type="METHOD" missed="14" covered="36"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="HeartBeatError.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SemaphoreTablesDesc.java"><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="24" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="2" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="2" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="2" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="2" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="2" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="52" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="179" covered="113"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="30" covered="41"/><counter type="COMPLEXITY" missed="16" covered="12"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JdbcSemaphore.java"><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="1" cb="1"/><line nr="188" mi="12" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="12" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="48" mb="0" cb="0"/><line nr="232" mi="0" ci="44" mb="0" cb="0"/><line nr="238" mi="0" ci="44" mb="0" cb="0"/><line nr="244" mi="0" ci="40" mb="0" cb="0"/><line nr="249" mi="0" ci="36" mb="0" cb="0"/><line nr="254" mi="0" ci="48" mb="0" cb="0"/><line nr="261" mi="0" ci="40" mb="0" cb="0"/><line nr="266" mi="0" ci="24" mb="0" cb="0"/><line nr="270" mi="0" ci="15" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="24" mb="0" cb="0"/><line nr="277" mi="0" ci="36" mb="0" cb="0"/><line nr="282" mi="0" ci="50" mb="0" cb="0"/><line nr="289" mi="0" ci="24" mb="0" cb="0"/><line nr="293" mi="0" ci="36" mb="0" cb="0"/><line nr="298" mi="0" ci="32" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="12" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="1" cb="1"/><line nr="327" mi="14" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="1" cb="1"/><line nr="333" mi="14" ci="0" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="12" mb="0" cb="0"/><line nr="340" mi="0" ci="7" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="2"/><line nr="345" mi="0" ci="7" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="2"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="1" cb="1"/><line nr="356" mi="23" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="1" cb="1"/><line nr="360" mi="13" ci="0" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="1" cb="1"/><line nr="363" mi="13" ci="0" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="10" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="1" cb="1"/><line nr="396" mi="12" ci="0" mb="0" cb="0"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="25" mb="0" cb="0"/><line nr="408" mi="0" ci="8" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="2"/><line nr="418" mi="0" ci="8" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="422" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="1" cb="1"/><line nr="426" mi="16" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="1" cb="1"/><line nr="432" mi="13" ci="0" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="9" mb="0" cb="2"/><line nr="439" mi="0" ci="11" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="5" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="0" ci="5" mb="0" cb="2"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="2"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="1" cb="1"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="0" ci="5" mb="1" cb="1"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="1" ci="0" mb="0" cb="0"/><line nr="465" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="469" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="1" ci="0" mb="0" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="475" mi="5" ci="0" mb="0" cb="0"/><line nr="476" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="0" ci="4" mb="1" cb="1"/><line nr="480" mi="0" ci="7" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="2"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="488" mi="1" ci="0" mb="0" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="6" mb="0" cb="4"/><line nr="494" mi="0" ci="2" mb="0" cb="2"/><line nr="495" mi="0" ci="6" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="22" mb="0" cb="0"/><line nr="511" mi="0" ci="7" mb="0" cb="0"/><line nr="512" mi="0" ci="8" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="514" mi="0" ci="4" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="7" mb="0" cb="0"/><line nr="518" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="2"/><line nr="521" mi="0" ci="12" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="1" ci="0" mb="0" cb="0"/><line nr="528" mi="5" ci="0" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="530" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="1" cb="1"/><line nr="532" mi="12" ci="0" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="543" mi="0" ci="1" mb="0" cb="0"/><line nr="547" mi="0" ci="7" mb="0" cb="0"/><line nr="548" mi="0" ci="7" mb="0" cb="0"/><line nr="550" mi="0" ci="4" mb="0" cb="0"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="0" cb="0"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="3" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="560" mi="0" ci="12" mb="0" cb="0"/><line nr="561" mi="0" ci="7" mb="0" cb="0"/><line nr="562" mi="0" ci="5" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="5" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="1" cb="1"/><line nr="566" mi="4" ci="0" mb="0" cb="0"/><line nr="568" mi="0" ci="4" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="1" cb="1"/><line nr="570" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="0" ci="5" mb="0" cb="0"/><line nr="581" mi="0" ci="12" mb="0" cb="0"/><line nr="582" mi="0" ci="7" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="0" cb="0"/><line nr="584" mi="0" ci="5" mb="0" cb="0"/><line nr="585" mi="0" ci="4" mb="0" cb="0"/><line nr="586" mi="0" ci="5" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="1" cb="1"/><line nr="588" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="1" cb="1"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="0" ci="5" mb="0" cb="0"/><line nr="603" mi="0" ci="12" mb="0" cb="0"/><line nr="604" mi="0" ci="7" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="0"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="0" ci="3" mb="1" cb="1"/><line nr="609" mi="4" ci="0" mb="0" cb="0"/><line nr="611" mi="0" ci="7" mb="0" cb="0"/><line nr="621" mi="12" ci="0" mb="0" cb="0"/><line nr="622" mi="6" ci="0" mb="0" cb="0"/><line nr="628" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="0" ci="7" mb="0" cb="0"/><line nr="630" mi="0" ci="5" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="632" mi="0" ci="5" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="1" cb="1"/><line nr="635" mi="10" ci="0" mb="0" cb="0"/><line nr="636" mi="4" ci="0" mb="0" cb="0"/><line nr="637" mi="5" ci="0" mb="0" cb="0"/><line nr="638" mi="3" ci="0" mb="2" cb="0"/><line nr="639" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="1" ci="0" mb="0" cb="0"/><line nr="644" mi="0" ci="2" mb="0" cb="0"/><line nr="660" mi="0" ci="13" mb="0" cb="0"/><line nr="661" mi="0" ci="6" mb="0" cb="0"/><line nr="662" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="4" ci="6" mb="1" cb="1"/><line nr="664" mi="7" ci="0" mb="0" cb="0"/><line nr="665" mi="3" ci="0" mb="0" cb="0"/><line nr="666" mi="4" ci="0" mb="0" cb="0"/><line nr="667" mi="5" ci="0" mb="0" cb="0"/><line nr="668" mi="3" ci="0" mb="0" cb="0"/><line nr="669" mi="4" ci="0" mb="0" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="671" mi="4" ci="0" mb="2" cb="0"/><line nr="672" mi="4" ci="0" mb="0" cb="0"/><line nr="673" mi="5" ci="0" mb="0" cb="0"/><line nr="674" mi="6" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="2" mb="1" cb="1"/><line nr="685" mi="12" ci="0" mb="0" cb="0"/><line nr="687" mi="0" ci="22" mb="0" cb="0"/><line nr="690" mi="0" ci="8" mb="0" cb="0"/><line nr="691" mi="0" ci="7" mb="0" cb="0"/><line nr="692" mi="0" ci="1" mb="0" cb="0"/><line nr="693" mi="0" ci="5" mb="0" cb="0"/><line nr="694" mi="0" ci="5" mb="0" cb="0"/><line nr="695" mi="0" ci="4" mb="0" cb="0"/><line nr="696" mi="0" ci="6" mb="0" cb="0"/><line nr="697" mi="0" ci="3" mb="0" cb="0"/><line nr="698" mi="0" ci="3" mb="1" cb="1"/><line nr="699" mi="13" ci="0" mb="0" cb="0"/><line nr="702" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="22" mb="0" cb="0"/><line nr="712" mi="0" ci="8" mb="0" cb="0"/><line nr="713" mi="0" ci="7" mb="0" cb="0"/><line nr="714" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="5" mb="0" cb="0"/><line nr="716" mi="0" ci="5" mb="0" cb="0"/><line nr="717" mi="0" ci="4" mb="0" cb="0"/><line nr="718" mi="0" ci="6" mb="0" cb="0"/><line nr="719" mi="0" ci="5" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="0"/><line nr="721" mi="0" ci="3" mb="1" cb="1"/><line nr="722" mi="13" ci="0" mb="0" cb="0"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="0" ci="1" mb="0" cb="0"/><line nr="732" mi="0" ci="22" mb="0" cb="0"/><line nr="735" mi="0" ci="8" mb="0" cb="0"/><line nr="736" mi="0" ci="7" mb="0" cb="0"/><line nr="737" mi="0" ci="1" mb="0" cb="0"/><line nr="738" mi="0" ci="5" mb="0" cb="0"/><line nr="739" mi="0" ci="5" mb="0" cb="0"/><line nr="740" mi="0" ci="4" mb="0" cb="0"/><line nr="741" mi="0" ci="6" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="1" cb="1"/><line nr="744" mi="13" ci="0" mb="0" cb="0"/><line nr="747" mi="0" ci="2" mb="0" cb="0"/><line nr="750" mi="0" ci="1" mb="0" cb="0"/><line nr="753" mi="0" ci="18" mb="0" cb="0"/><line nr="756" mi="0" ci="7" mb="0" cb="0"/><line nr="762" mi="0" ci="6" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="1" cb="1"/><line nr="764" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="0" ci="2" mb="0" cb="0"/><line nr="771" mi="7" ci="0" mb="0" cb="0"/><line nr="772" mi="5" ci="0" mb="0" cb="0"/><line nr="773" mi="4" ci="0" mb="0" cb="0"/><line nr="774" mi="5" ci="0" mb="0" cb="0"/><line nr="780" mi="22" ci="0" mb="0" cb="0"/><line nr="786" mi="0" ci="5" mb="0" cb="0"/><line nr="787" mi="0" ci="3" mb="0" cb="2"/><line nr="788" mi="0" ci="2" mb="0" cb="0"/><line nr="789" mi="0" ci="2" mb="0" cb="0"/><line nr="790" mi="0" ci="5" mb="0" cb="0"/><line nr="791" mi="0" ci="3" mb="0" cb="0"/><line nr="793" mi="0" ci="3" mb="0" cb="0"/><line nr="794" mi="0" ci="1" mb="0" cb="0"/><line nr="798" mi="0" ci="4" mb="0" cb="0"/><line nr="799" mi="0" ci="2" mb="0" cb="0"/><line nr="801" mi="0" ci="1" mb="0" cb="0"/><line nr="805" mi="3" ci="0" mb="0" cb="0"/><line nr="810" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="442" covered="1737"/><counter type="BRANCH" missed="29" covered="49"/><counter type="LINE" missed="77" covered="279"/><counter type="COMPLEXITY" missed="34" covered="61"/><counter type="METHOD" missed="7" covered="49"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="JdbcLock.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="41"/><counter type="LINE" missed="18" covered="11"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProcessLimitedJdbcSemaphore.java"><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="2" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OwnerPermits.java"><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1221" covered="2745"/><counter type="BRANCH" missed="93" covered="83"/><counter type="LINE" missed="224" covered="534"/><counter type="COMPLEXITY" missed="113" covered="129"/><counter type="METHOD" missed="46" covered="108"/><counter type="CLASS" missed="4" covered="16"/></package><package name="org/spf4j/text"><class name="org/spf4j/text/FormatInfo" sourcefilename="FormatInfo.java"><method name="&lt;init&gt;" desc="(Ljava/text/Format;II)V" line="51"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormat" desc="()Ljava/text/Format;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffset" desc="()I" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentNumber" desc="()I" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="72"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="81"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lorg/spf4j/text/FormatInfo;" line="107"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="21"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="17" covered="8"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/text/AttributedString$AttributedStringIterator" sourcefilename="AttributedString.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/text/AttributedString;II)V" line="729"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="744"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="759"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lorg/spf4j/text/AttributedString$AttributedStringIterator;" line="764"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="first" desc="()C" line="774"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="last" desc="()C" line="778"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()C" line="786"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()C" line="794"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="previous" desc="()C" line="803"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIndex" desc="(I)C" line="812"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBeginIndex" desc="()I" line="818"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEndIndex" desc="()I" line="822"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndex" desc="()I" line="826"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunStart" desc="()I" line="832"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunStart" desc="(Ljava/text/AttributedCharacterIterator$Attribute;)I" line="836"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunStart" desc="(Ljava/util/Set;)I" line="855"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunLimit" desc="()I" line="873"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunLimit" desc="(Ljava/text/AttributedCharacterIterator$Attribute;)I" line="877"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunLimit" desc="(Ljava/util/Set;)I" line="896"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributes" desc="()Ljava/util/Map;" line="915"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllAttributeKeys" desc="()Ljava/util/Set;" line="923"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttribute" desc="(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;" line="951"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="()Lorg/spf4j/text/AttributedString;" line="961"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="internalSetIndex" desc="(I)C" line="967"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateRunInfo" desc="()V" line="980"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="687" covered="0"/><counter type="BRANCH" missed="116" covered="0"/><counter type="LINE" missed="135" covered="0"/><counter type="COMPLEXITY" missed="83" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/text/MessageFormat" sourcefilename="MessageFormat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="453"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="453"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocale" desc="(Ljava/util/Locale;)V" line="512"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocale" desc="()Ljava/util/Locale;" line="521"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyPattern" desc="(Ljava/lang/String;)V" line="535"><counter type="INSTRUCTION" missed="74" covered="143"/><counter type="BRANCH" missed="19" covered="23"/><counter type="LINE" missed="16" covered="39"/><counter type="COMPLEXITY" missed="14" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPattern" desc="()Ljava/lang/String;" line="631"><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormatsByArgumentIndex" desc="([Ljava/text/Format;)V" line="707"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormats" desc="([Ljava/text/Format;)V" line="732"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormatByArgumentIndex" desc="(ILjava/text/Format;)V" line="757"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormat" desc="(ILjava/text/Format;)V" line="781"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormats" desc="()[Ljava/text/Format;" line="824"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/text/FieldPosition;)[Z" line="890"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="([Ljava/lang/Object;Ljava/lang/CharSequence;)[Z" line="894"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" line="912"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/text/FieldPosition;)[Z" line="933"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatToCharacterIterator" desc="(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;" line="968"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)[Ljava/lang/Object;" line="1013"><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)[Ljava/lang/Object;" line="1099"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseObject" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;" line="1128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lorg/spf4j/text/MessageFormat;" line="1137"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="1154"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="1173"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;" line="1184"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="syntethicFormat" desc="(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/text/FieldPosition;)[Z" line="1193"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subformat" desc="([Ljava/lang/Object;Ljava/lang/Appendable;Ljava/text/FieldPosition;Ljava/util/List;)[Z" line="1212"><counter type="INSTRUCTION" missed="140" covered="131"/><counter type="BRANCH" missed="24" covered="22"/><counter type="LINE" missed="36" covered="37"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Appendable;Ljava/text/CharacterIterator;)V" line="1322"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFormat" desc="(I[Ljava/lang/StringBuilder;)V" line="1335"><counter type="INSTRUCTION" missed="146" covered="114"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="32" covered="24"/><counter type="COMPLEXITY" missed="12" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findKeyword" desc="(Ljava/lang/String;[Ljava/lang/String;)I" line="1441"><counter type="INSTRUCTION" missed="16" covered="24"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAndFixQuotes" desc="(Ljava/lang/CharSequence;IILjava/lang/StringBuilder;)V" line="1461"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeObject" desc="(Ljava/io/ObjectOutputStream;)V" line="1489"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readObject" desc="(Ljava/io/ObjectInputStream;)V" line="1501"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAttributedCharacterIterator" desc="(Ljava/lang/String;)Ljava/text/AttributedCharacterIterator;" line="1530"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAttributedCharacterIterator" desc="(Ljava/lang/String;Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;" line="1546"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAttributedCharacterIterator" desc="(Ljava/text/AttributedCharacterIterator;Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;" line="1564"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="1572"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="393"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1416" covered="535"/><counter type="BRANCH" missed="197" covered="61"/><counter type="LINE" missed="306" covered="119"/><counter type="COMPLEXITY" missed="140" covered="30"/><counter type="METHOD" missed="28" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/text/AttributeEntry" sourcefilename="AttributedString.java"><method name="&lt;init&gt;" desc="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V" line="1069"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="1075"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/text/AttributedCharacterIterator$Attribute;" line="1083"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="1087"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="1091"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="1095"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="1099"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/text/AttributedString$AttributeMap" sourcefilename="AttributedString.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/text/AttributedString;III)V" line="1019"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="1026"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="1049"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/text/AttributedString" sourcefilename="AttributedString.java"><method name="&lt;init&gt;" desc="([Ljava/text/AttributedCharacterIterator;)V" line="98"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="145"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="161"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/text/AttributedCharacterIterator;)V" line="197"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/text/AttributedCharacterIterator;II)V" line="220"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/text/AttributedCharacterIterator;II[Ljava/text/AttributedCharacterIterator$Attribute;)V" line="249"><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAttribute" desc="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V" line="335"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAttribute" desc="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V" line="357"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAttributes" desc="(Ljava/util/Map;II)V" line="380"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAttributeImpl" desc="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V" line="410"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createRunAttributeDataVectors" desc="()V" line="423"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureRunBreak" desc="(I)I" line="440"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureRunBreak" desc="(IZ)I" line="455"><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAttributeRunData" desc="(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V" line="528"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIterator" desc="()Ljava/text/AttributedCharacterIterator;" line="558"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="()I" line="567"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="charAt" desc="(I)C" line="571"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttribute" desc="(Ljava/text/AttributedCharacterIterator$Attribute;I)Ljava/lang/Object;" line="576"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributeCheckRange" desc="(Ljava/text/AttributedCharacterIterator$Attribute;III)Ljava/lang/Object;" line="594"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attributeValuesMatch" desc="(Ljava/util/Set;II)Z" line="632"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesMatch" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="644"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendContents" desc="(Ljava/lang/StringBuilder;Ljava/text/CharacterIterator;)V" line="657"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAttributes" desc="(Ljava/util/Map;I)V" line="672"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapsDiffer" desc="(Ljava/util/Map;Ljava/util/Map;)Z" line="699"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="1055"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1152" covered="0"/><counter type="BRANCH" missed="166" covered="0"/><counter type="LINE" missed="265" covered="0"/><counter type="COMPLEXITY" missed="108" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AttributedString.java"><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="2" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="12" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="2" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="8" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="9" ci="0" mb="6" cb="0"/><line nr="254" mi="16" ci="0" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="11" ci="0" mb="2" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="2" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="2" cb="0"/><line nr="270" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="10" ci="0" mb="2" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="2" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="2" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="2" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="2" cb="0"/><line nr="296" mi="3" ci="0" mb="2" cb="0"/><line nr="297" mi="6" ci="0" mb="4" cb="0"/><line nr="298" mi="11" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="2" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="2" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="2" cb="0"/><line nr="310" mi="3" ci="0" mb="2" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="2" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="2" cb="0"/><line nr="315" mi="10" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="2" cb="0"/><line nr="337" mi="12" ci="0" mb="0" cb="0"/><line nr="340" mi="6" ci="0" mb="0" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="357" mi="9" ci="0" mb="6" cb="0"/><line nr="358" mi="16" ci="0" mb="0" cb="0"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="9" ci="0" mb="6" cb="0"/><line nr="381" mi="16" ci="0" mb="0" cb="0"/><line nr="383" mi="3" ci="0" mb="2" cb="0"/><line nr="384" mi="3" ci="0" mb="2" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="12" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="2" cb="0"/><line nr="391" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="2" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="9" ci="0" mb="0" cb="0"/><line nr="403" mi="1" ci="0" mb="0" cb="0"/><line nr="404" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="2" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="6" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="1" ci="0" mb="0" cb="0"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="2" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="0" cb="0"/><line nr="461" mi="10" ci="0" mb="4" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="466" mi="10" ci="0" mb="4" cb="0"/><line nr="467" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="5" ci="0" mb="2" cb="0"/><line nr="473" mi="5" ci="0" mb="0" cb="0"/><line nr="474" mi="3" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="8" ci="0" mb="2" cb="0"/><line nr="483" mi="7" ci="0" mb="0" cb="0"/><line nr="484" mi="7" ci="0" mb="0" cb="0"/><line nr="485" mi="7" ci="0" mb="0" cb="0"/><line nr="487" mi="3" ci="0" mb="0" cb="0"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="0" cb="0"/><line nr="490" mi="3" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="2" cb="0"/><line nr="499" mi="4" ci="0" mb="0" cb="0"/><line nr="500" mi="5" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="2" cb="0"/><line nr="502" mi="5" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="2" ci="0" mb="2" cb="0"/><line nr="506" mi="5" ci="0" mb="0" cb="0"/><line nr="511" mi="6" ci="0" mb="0" cb="0"/><line nr="512" mi="15" ci="0" mb="2" cb="0"/><line nr="513" mi="8" ci="0" mb="0" cb="0"/><line nr="514" mi="8" ci="0" mb="0" cb="0"/><line nr="515" mi="8" ci="0" mb="0" cb="0"/><line nr="517" mi="5" ci="0" mb="0" cb="0"/><line nr="518" mi="5" ci="0" mb="0" cb="0"/><line nr="519" mi="5" ci="0" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="7" ci="0" mb="2" cb="0"/><line nr="529" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="5" ci="0" mb="0" cb="0"/><line nr="531" mi="5" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="2" cb="0"/><line nr="533" mi="9" ci="0" mb="0" cb="0"/><line nr="534" mi="10" ci="0" mb="0" cb="0"/><line nr="537" mi="4" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="2" cb="0"/><line nr="542" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="5" ci="0" mb="0" cb="0"/><line nr="546" mi="5" ci="0" mb="0" cb="0"/><line nr="549" mi="1" ci="0" mb="0" cb="0"/><line nr="558" mi="8" ci="0" mb="0" cb="0"/><line nr="567" mi="4" ci="0" mb="0" cb="0"/><line nr="571" mi="5" ci="0" mb="0" cb="0"/><line nr="576" mi="5" ci="0" mb="0" cb="0"/><line nr="577" mi="5" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="2" cb="0"/><line nr="579" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="4" ci="0" mb="0" cb="0"/><line nr="582" mi="3" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="586" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="2" cb="0"/><line nr="597" mi="2" ci="0" mb="2" cb="0"/><line nr="598" mi="2" ci="0" mb="0" cb="0"/><line nr="599" mi="5" ci="0" mb="0" cb="0"/><line nr="600" mi="9" ci="0" mb="2" cb="0"/><line nr="601" mi="3" ci="0" mb="2" cb="0"/><line nr="602" mi="1" ci="0" mb="0" cb="0"/><line nr="603" mi="6" ci="0" mb="0" cb="0"/><line nr="605" mi="3" ci="0" mb="2" cb="0"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="3" ci="0" mb="2" cb="0"/><line nr="612" mi="2" ci="0" mb="0" cb="0"/><line nr="613" mi="15" ci="0" mb="2" cb="0"/><line nr="614" mi="9" ci="0" mb="2" cb="0"/><line nr="615" mi="3" ci="0" mb="2" cb="0"/><line nr="616" mi="1" ci="0" mb="0" cb="0"/><line nr="617" mi="16" ci="0" mb="2" cb="0"/><line nr="619" mi="3" ci="0" mb="2" cb="0"/><line nr="621" mi="2" ci="0" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="633" mi="3" ci="0" mb="2" cb="0"/><line nr="634" mi="4" ci="0" mb="0" cb="0"/><line nr="635" mi="10" ci="0" mb="2" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="644" mi="2" ci="0" mb="2" cb="0"/><line nr="645" mi="6" ci="0" mb="2" cb="0"/><line nr="647" mi="4" ci="0" mb="0" cb="0"/><line nr="657" mi="3" ci="0" mb="0" cb="0"/><line nr="658" mi="3" ci="0" mb="0" cb="0"/><line nr="660" mi="3" ci="0" mb="2" cb="0"/><line nr="661" mi="5" ci="0" mb="0" cb="0"/><line nr="662" mi="6" ci="0" mb="0" cb="0"/><line nr="664" mi="1" ci="0" mb="0" cb="0"/><line nr="672" mi="3" ci="0" mb="2" cb="0"/><line nr="673" mi="2" ci="0" mb="0" cb="0"/><line nr="676" mi="5" ci="0" mb="0" cb="0"/><line nr="679" mi="7" ci="0" mb="4" cb="0"/><line nr="680" mi="5" ci="0" mb="0" cb="0"/><line nr="681" mi="5" ci="0" mb="0" cb="0"/><line nr="682" mi="4" ci="0" mb="0" cb="0"/><line nr="684" mi="3" ci="0" mb="2" cb="0"/><line nr="685" mi="4" ci="0" mb="0" cb="0"/><line nr="687" mi="5" ci="0" mb="0" cb="0"/><line nr="688" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="1" ci="0" mb="0" cb="0"/><line nr="690" mi="5" ci="0" mb="0" cb="0"/><line nr="691" mi="5" ci="0" mb="0" cb="0"/><line nr="693" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="2" cb="0"/><line nr="700" mi="9" ci="0" mb="4" cb="0"/><line nr="702" mi="8" ci="0" mb="2" cb="0"/><line nr="729" mi="5" ci="0" mb="0" cb="0"/><line nr="731" mi="9" ci="0" mb="6" cb="0"/><line nr="732" mi="16" ci="0" mb="0" cb="0"/><line nr="735" mi="3" ci="0" mb="0" cb="0"/><line nr="736" mi="3" ci="0" mb="0" cb="0"/><line nr="737" mi="3" ci="0" mb="0" cb="0"/><line nr="738" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="1" ci="0" mb="0" cb="0"/><line nr="744" mi="3" ci="0" mb="2" cb="0"/><line nr="745" mi="2" ci="0" mb="0" cb="0"/><line nr="747" mi="3" ci="0" mb="2" cb="0"/><line nr="748" mi="2" ci="0" mb="0" cb="0"/><line nr="751" mi="3" ci="0" mb="0" cb="0"/><line nr="753" mi="5" ci="0" mb="2" cb="0"/><line nr="754" mi="2" ci="0" mb="0" cb="0"/><line nr="755" mi="19" ci="0" mb="6" cb="0"/><line nr="759" mi="14" ci="0" mb="0" cb="0"/><line nr="764" mi="4" ci="0" mb="0" cb="0"/><line nr="766" mi="1" ci="0" mb="0" cb="0"/><line nr="767" mi="5" ci="0" mb="0" cb="0"/><line nr="774" mi="5" ci="0" mb="0" cb="0"/><line nr="778" mi="5" ci="0" mb="2" cb="0"/><line nr="779" mi="5" ci="0" mb="0" cb="0"/><line nr="781" mi="7" ci="0" mb="0" cb="0"/><line nr="786" mi="5" ci="0" mb="2" cb="0"/><line nr="787" mi="2" ci="0" mb="0" cb="0"/><line nr="789" mi="6" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="2" cb="0"/><line nr="795" mi="7" ci="0" mb="0" cb="0"/><line nr="798" mi="2" ci="0" mb="0" cb="0"/><line nr="803" mi="5" ci="0" mb="2" cb="0"/><line nr="804" mi="7" ci="0" mb="0" cb="0"/><line nr="807" mi="2" ci="0" mb="0" cb="0"/><line nr="812" mi="8" ci="0" mb="4" cb="0"/><line nr="813" mi="12" ci="0" mb="0" cb="0"/><line nr="814" mi="4" ci="0" mb="0" cb="0"/><line nr="818" mi="3" ci="0" mb="0" cb="0"/><line nr="822" mi="3" ci="0" mb="0" cb="0"/><line nr="826" mi="3" ci="0" mb="0" cb="0"/><line nr="832" mi="3" ci="0" mb="0" cb="0"/><line nr="836" mi="9" ci="0" mb="4" cb="0"/><line nr="837" mi="3" ci="0" mb="0" cb="0"/><line nr="839" mi="4" ci="0" mb="0" cb="0"/><line nr="840" mi="3" ci="0" mb="0" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="842" mi="11" ci="0" mb="2" cb="0"/><line nr="843" mi="3" ci="0" mb="2" cb="0"/><line nr="844" mi="1" ci="0" mb="0" cb="0"/><line nr="845" mi="7" ci="0" mb="0" cb="0"/><line nr="847" mi="4" ci="0" mb="2" cb="0"/><line nr="848" mi="3" ci="0" mb="0" cb="0"/><line nr="850" mi="2" ci="0" mb="0" cb="0"/><line nr="855" mi="9" ci="0" mb="4" cb="0"/><line nr="856" mi="3" ci="0" mb="0" cb="0"/><line nr="858" mi="3" ci="0" mb="0" cb="0"/><line nr="859" mi="3" ci="0" mb="0" cb="0"/><line nr="860" mi="12" ci="0" mb="2" cb="0"/><line nr="861" mi="2" ci="0" mb="2" cb="0"/><line nr="862" mi="1" ci="0" mb="0" cb="0"/><line nr="863" mi="7" ci="0" mb="0" cb="0"/><line nr="865" mi="4" ci="0" mb="2" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="868" mi="2" ci="0" mb="0" cb="0"/><line nr="873" mi="3" ci="0" mb="0" cb="0"/><line nr="877" mi="9" ci="0" mb="4" cb="0"/><line nr="878" mi="3" ci="0" mb="0" cb="0"/><line nr="880" mi="4" ci="0" mb="0" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="882" mi="3" ci="0" mb="0" cb="0"/><line nr="883" mi="11" ci="0" mb="2" cb="0"/><line nr="884" mi="3" ci="0" mb="2" cb="0"/><line nr="885" mi="1" ci="0" mb="0" cb="0"/><line nr="886" mi="19" ci="0" mb="2" cb="0"/><line nr="888" mi="4" ci="0" mb="2" cb="0"/><line nr="889" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="2" ci="0" mb="0" cb="0"/><line nr="896" mi="9" ci="0" mb="4" cb="0"/><line nr="897" mi="3" ci="0" mb="0" cb="0"/><line nr="899" mi="3" ci="0" mb="0" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="901" mi="12" ci="0" mb="2" cb="0"/><line nr="902" mi="2" ci="0" mb="2" cb="0"/><line nr="903" mi="1" ci="0" mb="0" cb="0"/><line nr="904" mi="19" ci="0" mb="2" cb="0"/><line nr="906" mi="4" ci="0" mb="2" cb="0"/><line nr="907" mi="3" ci="0" mb="0" cb="0"/><line nr="909" mi="2" ci="0" mb="0" cb="0"/><line nr="915" mi="15" ci="0" mb="6" cb="0"/><line nr="916" mi="2" ci="0" mb="0" cb="0"/><line nr="918" mi="12" ci="0" mb="0" cb="0"/><line nr="923" mi="4" ci="0" mb="2" cb="0"/><line nr="926" mi="4" ci="0" mb="0" cb="0"/><line nr="928" mi="5" ci="0" mb="0" cb="0"/><line nr="931" mi="4" ci="0" mb="0" cb="0"/><line nr="932" mi="2" ci="0" mb="0" cb="0"/><line nr="933" mi="5" ci="0" mb="2" cb="0"/><line nr="934" mi="25" ci="0" mb="6" cb="0"/><line nr="935" mi="6" ci="0" mb="0" cb="0"/><line nr="936" mi="2" ci="0" mb="2" cb="0"/><line nr="937" mi="3" ci="0" mb="0" cb="0"/><line nr="938" mi="3" ci="0" mb="2" cb="0"/><line nr="939" mi="7" ci="0" mb="0" cb="0"/><line nr="943" mi="2" ci="0" mb="0" cb="0"/><line nr="945" mi="4" ci="0" mb="0" cb="0"/><line nr="951" mi="3" ci="0" mb="0" cb="0"/><line nr="952" mi="2" ci="0" mb="2" cb="0"/><line nr="953" mi="2" ci="0" mb="0" cb="0"/><line nr="955" mi="10" ci="0" mb="0" cb="0"/><line nr="961" mi="3" ci="0" mb="0" cb="0"/><line nr="967" mi="3" ci="0" mb="0" cb="0"/><line nr="968" mi="8" ci="0" mb="4" cb="0"/><line nr="969" mi="2" ci="0" mb="0" cb="0"/><line nr="971" mi="5" ci="0" mb="2" cb="0"/><line nr="972" mi="2" ci="0" mb="0" cb="0"/><line nr="974" mi="5" ci="0" mb="0" cb="0"/><line nr="980" mi="5" ci="0" mb="2" cb="0"/><line nr="981" mi="7" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="5" ci="0" mb="0" cb="0"/><line nr="985" mi="2" ci="0" mb="0" cb="0"/><line nr="986" mi="17" ci="0" mb="4" cb="0"/><line nr="987" mi="2" ci="0" mb="0" cb="0"/><line nr="988" mi="3" ci="0" mb="0" cb="0"/><line nr="989" mi="2" ci="0" mb="2" cb="0"/><line nr="990" mi="7" ci="0" mb="0" cb="0"/><line nr="991" mi="5" ci="0" mb="2" cb="0"/><line nr="992" mi="5" ci="0" mb="0" cb="0"/><line nr="995" mi="4" ci="0" mb="0" cb="0"/><line nr="997" mi="7" ci="0" mb="2" cb="0"/><line nr="998" mi="9" ci="0" mb="0" cb="0"/><line nr="999" mi="5" ci="0" mb="2" cb="0"/><line nr="1000" mi="5" ci="0" mb="0" cb="0"/><line nr="1003" mi="4" ci="0" mb="0" cb="0"/><line nr="1005" mi="3" ci="0" mb="0" cb="0"/><line nr="1007" mi="1" ci="0" mb="0" cb="0"/><line nr="1019" mi="5" ci="0" mb="0" cb="0"/><line nr="1020" mi="3" ci="0" mb="0" cb="0"/><line nr="1021" mi="3" ci="0" mb="0" cb="0"/><line nr="1022" mi="3" ci="0" mb="0" cb="0"/><line nr="1023" mi="1" ci="0" mb="0" cb="0"/><line nr="1026" mi="4" ci="0" mb="0" cb="0"/><line nr="1027" mi="5" ci="0" mb="0" cb="0"/><line nr="1028" mi="8" ci="0" mb="0" cb="0"/><line nr="1029" mi="7" ci="0" mb="2" cb="0"/><line nr="1030" mi="10" ci="0" mb="0" cb="0"/><line nr="1031" mi="9" ci="0" mb="0" cb="0"/><line nr="1032" mi="3" ci="0" mb="2" cb="0"/><line nr="1033" mi="11" ci="0" mb="0" cb="0"/><line nr="1035" mi="2" ci="0" mb="2" cb="0"/><line nr="1036" mi="1" ci="0" mb="0" cb="0"/><line nr="1040" mi="6" ci="0" mb="0" cb="0"/><line nr="1041" mi="4" ci="0" mb="0" cb="0"/><line nr="1043" mi="3" ci="0" mb="0" cb="0"/><line nr="1044" mi="2" ci="0" mb="0" cb="0"/><line nr="1049" mi="12" ci="0" mb="0" cb="0"/><line nr="1055" mi="23" ci="0" mb="0" cb="0"/><line nr="1056" mi="6" ci="0" mb="0" cb="0"/><line nr="1057" mi="11" ci="0" mb="0" cb="0"/><line nr="1069" mi="2" ci="0" mb="0" cb="0"/><line nr="1070" mi="3" ci="0" mb="0" cb="0"/><line nr="1071" mi="3" ci="0" mb="0" cb="0"/><line nr="1072" mi="1" ci="0" mb="0" cb="0"/><line nr="1075" mi="3" ci="0" mb="2" cb="0"/><line nr="1076" mi="2" ci="0" mb="0" cb="0"/><line nr="1078" mi="3" ci="0" mb="0" cb="0"/><line nr="1079" mi="16" ci="0" mb="4" cb="0"/><line nr="1083" mi="3" ci="0" mb="0" cb="0"/><line nr="1087" mi="3" ci="0" mb="0" cb="0"/><line nr="1091" mi="4" ci="0" mb="0" cb="0"/><line nr="1095" mi="13" ci="0" mb="2" cb="0"/><line nr="1099" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2011" covered="0"/><counter type="BRANCH" missed="296" covered="0"/><counter type="LINE" missed="433" covered="0"/><counter type="COMPLEXITY" missed="208" covered="0"/><counter type="METHOD" missed="60" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="FormatInfo.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="22" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="21"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="17" covered="8"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MessageFormat.java"><line nr="393" mi="0" ci="23" mb="0" cb="0"/><line nr="407" mi="0" ci="19" mb="0" cb="0"/><line nr="414" mi="0" ci="23" mb="0" cb="0"/><line nr="423" mi="0" ci="24" mb="0" cb="0"/><line nr="453" mi="4" ci="4" mb="0" cb="0"/><line nr="463" mi="3" ci="3" mb="0" cb="0"/><line nr="466" mi="3" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="1" ci="0" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="0" ci="3" mb="0" cb="0"/><line nr="539" mi="0" ci="7" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="7" mb="0" cb="2"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="2"/><line nr="549" mi="0" ci="3" mb="1" cb="1"/><line nr="550" mi="4" ci="0" mb="0" cb="0"/><line nr="551" mi="5" ci="0" mb="2" cb="0"/><line nr="552" mi="3" ci="0" mb="2" cb="0"/><line nr="553" mi="6" ci="0" mb="0" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="556" mi="6" ci="0" mb="2" cb="0"/><line nr="558" mi="1" ci="5" mb="1" cb="3"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="1" cb="1"/><line nr="561" mi="0" ci="7" mb="0" cb="0"/><line nr="564" mi="0" ci="7" mb="0" cb="0"/><line nr="566" mi="0" ci="2" mb="0" cb="2"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="2"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="2" cb="4"/><line nr="574" mi="0" ci="3" mb="0" cb="2"/><line nr="575" mi="0" ci="5" mb="1" cb="1"/><line nr="576" mi="0" ci="7" mb="0" cb="0"/><line nr="579" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="583" mi="1" ci="0" mb="0" cb="0"/><line nr="584" mi="6" ci="0" mb="0" cb="0"/><line nr="585" mi="1" ci="0" mb="0" cb="0"/><line nr="587" mi="0" ci="2" mb="1" cb="1"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="4" mb="0" cb="0"/><line nr="590" mi="0" ci="1" mb="0" cb="0"/><line nr="592" mi="0" ci="4" mb="0" cb="0"/><line nr="593" mi="0" ci="4" mb="0" cb="0"/><line nr="594" mi="0" ci="5" mb="0" cb="0"/><line nr="596" mi="1" ci="0" mb="0" cb="0"/><line nr="597" mi="6" ci="0" mb="0" cb="0"/><line nr="599" mi="1" ci="0" mb="0" cb="0"/><line nr="602" mi="8" ci="0" mb="4" cb="0"/><line nr="603" mi="7" ci="0" mb="0" cb="0"/><line nr="607" mi="0" ci="2" mb="0" cb="0"/><line nr="610" mi="0" ci="6" mb="0" cb="0"/><line nr="615" mi="0" ci="4" mb="2" cb="2"/><line nr="616" mi="3" ci="0" mb="0" cb="0"/><line nr="617" mi="12" ci="0" mb="0" cb="0"/><line nr="619" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="8" ci="0" mb="2" cb="0"/><line nr="634" mi="5" ci="0" mb="0" cb="0"/><line nr="635" mi="3" ci="0" mb="0" cb="0"/><line nr="636" mi="6" ci="0" mb="0" cb="0"/><line nr="637" mi="2" ci="0" mb="0" cb="0"/><line nr="638" mi="7" ci="0" mb="0" cb="0"/><line nr="639" mi="3" ci="0" mb="0" cb="0"/><line nr="640" mi="3" ci="0" mb="2" cb="0"/><line nr="641" mi="6" ci="0" mb="2" cb="0"/><line nr="642" mi="5" ci="0" mb="0" cb="0"/><line nr="643" mi="6" ci="0" mb="2" cb="0"/><line nr="644" mi="5" ci="0" mb="0" cb="0"/><line nr="645" mi="6" ci="0" mb="2" cb="0"/><line nr="646" mi="5" ci="0" mb="0" cb="0"/><line nr="647" mi="6" ci="0" mb="2" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="649" mi="3" ci="0" mb="2" cb="0"/><line nr="650" mi="9" ci="0" mb="0" cb="0"/><line nr="651" mi="3" ci="0" mb="2" cb="0"/><line nr="652" mi="9" ci="0" mb="0" cb="0"/><line nr="654" mi="12" ci="0" mb="0" cb="0"/><line nr="656" mi="3" ci="0" mb="2" cb="0"/><line nr="658" mi="8" ci="0" mb="2" cb="0"/><line nr="659" mi="7" ci="0" mb="0" cb="0"/><line nr="661" mi="4" ci="0" mb="2" cb="0"/><line nr="662" mi="4" ci="0" mb="0" cb="0"/><line nr="663" mi="1" ci="0" mb="0" cb="0"/><line nr="665" mi="7" ci="0" mb="0" cb="0"/><line nr="667" mi="4" ci="0" mb="2" cb="0"/><line nr="668" mi="4" ci="0" mb="0" cb="0"/><line nr="669" mi="1" ci="0" mb="0" cb="0"/><line nr="672" mi="4" ci="0" mb="2" cb="0"/><line nr="673" mi="3" ci="0" mb="2" cb="0"/><line nr="674" mi="9" ci="0" mb="0" cb="0"/><line nr="676" mi="12" ci="0" mb="0" cb="0"/><line nr="678" mi="2" ci="0" mb="2" cb="0"/><line nr="679" mi="8" ci="0" mb="0" cb="0"/><line nr="681" mi="3" ci="0" mb="2" cb="0"/><line nr="682" mi="12" ci="0" mb="0" cb="0"/><line nr="684" mi="4" ci="0" mb="0" cb="0"/><line nr="686" mi="8" ci="0" mb="0" cb="0"/><line nr="687" mi="3" ci="0" mb="0" cb="0"/><line nr="707" mi="8" ci="0" mb="2" cb="0"/><line nr="708" mi="5" ci="0" mb="0" cb="0"/><line nr="709" mi="3" ci="0" mb="0" cb="0"/><line nr="710" mi="4" ci="0" mb="2" cb="0"/><line nr="711" mi="13" ci="0" mb="0" cb="0"/><line nr="714" mi="1" ci="0" mb="0" cb="0"/><line nr="732" mi="3" ci="0" mb="0" cb="0"/><line nr="733" mi="6" ci="0" mb="2" cb="0"/><line nr="734" mi="5" ci="0" mb="0" cb="0"/><line nr="736" mi="7" ci="0" mb="2" cb="0"/><line nr="737" mi="5" ci="0" mb="0" cb="0"/><line nr="738" mi="14" ci="0" mb="0" cb="0"/><line nr="740" mi="1" ci="0" mb="0" cb="0"/><line nr="757" mi="8" ci="0" mb="2" cb="0"/><line nr="758" mi="5" ci="0" mb="0" cb="0"/><line nr="759" mi="3" ci="0" mb="0" cb="0"/><line nr="760" mi="3" ci="0" mb="2" cb="0"/><line nr="761" mi="11" ci="0" mb="0" cb="0"/><line nr="764" mi="1" ci="0" mb="0" cb="0"/><line nr="781" mi="5" ci="0" mb="0" cb="0"/><line nr="782" mi="12" ci="0" mb="0" cb="0"/><line nr="783" mi="1" ci="0" mb="0" cb="0"/><line nr="824" mi="6" ci="0" mb="0" cb="0"/><line nr="825" mi="10" ci="0" mb="0" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="890" mi="0" ci="8" mb="0" cb="0"/><line nr="894" mi="0" ci="6" mb="0" cb="0"/><line nr="912" mi="5" ci="0" mb="0" cb="0"/><line nr="913" mi="4" ci="0" mb="0" cb="0"/><line nr="933" mi="3" ci="0" mb="2" cb="0"/><line nr="934" mi="10" ci="0" mb="0" cb="0"/><line nr="936" mi="13" ci="0" mb="0" cb="0"/><line nr="968" mi="4" ci="0" mb="0" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="971" mi="9" ci="0" mb="0" cb="0"/><line nr="972" mi="1" ci="0" mb="0" cb="0"/><line nr="973" mi="5" ci="0" mb="0" cb="0"/><line nr="974" mi="1" ci="0" mb="0" cb="0"/><line nr="975" mi="3" ci="0" mb="2" cb="0"/><line nr="976" mi="3" ci="0" mb="0" cb="0"/><line nr="978" mi="5" ci="0" mb="0" cb="0"/><line nr="979" mi="3" ci="0" mb="0" cb="0"/><line nr="980" mi="3" ci="0" mb="0" cb="0"/><line nr="1013" mi="2" ci="0" mb="2" cb="0"/><line nr="1014" mi="2" ci="0" mb="0" cb="0"/><line nr="1017" mi="2" ci="0" mb="0" cb="0"/><line nr="1018" mi="8" ci="0" mb="2" cb="0"/><line nr="1019" mi="5" ci="0" mb="0" cb="0"/><line nr="1020" mi="3" ci="0" mb="0" cb="0"/><line nr="1021" mi="3" ci="0" mb="2" cb="0"/><line nr="1022" mi="2" ci="0" mb="0" cb="0"/><line nr="1025" mi="5" ci="0" mb="0" cb="0"/><line nr="1027" mi="2" ci="0" mb="0" cb="0"/><line nr="1028" mi="3" ci="0" mb="0" cb="0"/><line nr="1029" mi="5" ci="0" mb="0" cb="0"/><line nr="1030" mi="8" ci="0" mb="2" cb="0"/><line nr="1032" mi="5" ci="0" mb="0" cb="0"/><line nr="1033" mi="5" ci="0" mb="0" cb="0"/><line nr="1034" mi="10" ci="0" mb="4" cb="0"/><line nr="1035" mi="4" ci="0" mb="0" cb="0"/><line nr="1036" mi="5" ci="0" mb="0" cb="0"/><line nr="1038" mi="3" ci="0" mb="0" cb="0"/><line nr="1039" mi="2" ci="0" mb="0" cb="0"/><line nr="1043" mi="3" ci="0" mb="2" cb="0"/><line nr="1047" mi="16" ci="0" mb="2" cb="0"/><line nr="1050" mi="3" ci="0" mb="2" cb="0"/><line nr="1051" mi="4" ci="0" mb="0" cb="0"/><line nr="1053" mi="10" ci="0" mb="0" cb="0"/><line nr="1056" mi="2" ci="0" mb="2" cb="0"/><line nr="1057" mi="3" ci="0" mb="0" cb="0"/><line nr="1058" mi="2" ci="0" mb="0" cb="0"/><line nr="1060" mi="5" ci="0" mb="0" cb="0"/><line nr="1061" mi="3" ci="0" mb="0" cb="0"/><line nr="1062" mi="13" ci="0" mb="2" cb="0"/><line nr="1063" mi="7" ci="0" mb="0" cb="0"/><line nr="1065" mi="2" ci="0" mb="0" cb="0"/><line nr="1067" mi="1" ci="0" mb="0" cb="0"/><line nr="1068" mi="3" ci="0" mb="0" cb="0"/><line nr="1069" mi="9" ci="0" mb="0" cb="0"/><line nr="1070" mi="4" ci="0" mb="2" cb="0"/><line nr="1071" mi="3" ci="0" mb="0" cb="0"/><line nr="1072" mi="2" ci="0" mb="0" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1077" mi="6" ci="0" mb="0" cb="0"/><line nr="1078" mi="10" ci="0" mb="4" cb="0"/><line nr="1079" mi="6" ci="0" mb="0" cb="0"/><line nr="1081" mi="3" ci="0" mb="0" cb="0"/><line nr="1082" mi="2" ci="0" mb="0" cb="0"/><line nr="1084" mi="2" ci="0" mb="0" cb="0"/><line nr="1099" mi="5" ci="0" mb="0" cb="0"/><line nr="1100" mi="5" ci="0" mb="0" cb="0"/><line nr="1101" mi="3" ci="0" mb="2" cb="0"/><line nr="1103" mi="16" ci="0" mb="0" cb="0"/><line nr="1106" mi="2" ci="0" mb="0" cb="0"/><line nr="1128" mi="5" ci="0" mb="0" cb="0"/><line nr="1137" mi="4" ci="0" mb="0" cb="0"/><line nr="1140" mi="6" ci="0" mb="0" cb="0"/><line nr="1141" mi="9" ci="0" mb="2" cb="0"/><line nr="1142" mi="5" ci="0" mb="0" cb="0"/><line nr="1143" mi="2" ci="0" mb="2" cb="0"/><line nr="1144" mi="6" ci="0" mb="0" cb="0"/><line nr="1147" mi="2" ci="0" mb="0" cb="0"/><line nr="1154" mi="3" ci="0" mb="2" cb="0"/><line nr="1156" mi="2" ci="0" mb="0" cb="0"/><line nr="1158" mi="7" ci="0" mb="4" cb="0"/><line nr="1159" mi="2" ci="0" mb="0" cb="0"/><line nr="1161" mi="3" ci="0" mb="0" cb="0"/><line nr="1162" mi="10" ci="0" mb="2" cb="0"/><line nr="1163" mi="9" ci="0" mb="4" cb="0"/><line nr="1164" mi="12" ci="0" mb="6" cb="0"/><line nr="1166" mi="5" ci="0" mb="2" cb="0"/><line nr="1173" mi="3" ci="0" mb="0" cb="0"/><line nr="1174" mi="2" ci="0" mb="2" cb="0"/><line nr="1175" mi="4" ci="0" mb="0" cb="0"/><line nr="1176" mi="3" ci="0" mb="0" cb="0"/><line nr="1178" mi="2" ci="0" mb="0" cb="0"/><line nr="1184" mi="6" ci="0" mb="0" cb="0"/><line nr="1185" mi="2" ci="0" mb="0" cb="0"/><line nr="1186" mi="1" ci="0" mb="0" cb="0"/><line nr="1187" mi="5" ci="0" mb="0" cb="0"/><line nr="1193" mi="6" ci="0" mb="0" cb="0"/><line nr="1212" mi="0" ci="2" mb="0" cb="0"/><line nr="1213" mi="0" ci="4" mb="0" cb="0"/><line nr="1215" mi="0" ci="2" mb="0" cb="2"/><line nr="1216" mi="0" ci="3" mb="0" cb="0"/><line nr="1218" mi="0" ci="4" mb="0" cb="0"/><line nr="1220" mi="0" ci="8" mb="0" cb="2"/><line nr="1221" mi="0" ci="5" mb="0" cb="0"/><line nr="1222" mi="0" ci="3" mb="0" cb="0"/><line nr="1223" mi="0" ci="7" mb="0" cb="0"/><line nr="1224" mi="0" ci="2" mb="0" cb="0"/><line nr="1225" mi="0" ci="3" mb="0" cb="0"/><line nr="1226" mi="0" ci="6" mb="2" cb="2"/><line nr="1227" mi="9" ci="0" mb="0" cb="0"/><line nr="1228" mi="1" ci="0" mb="0" cb="0"/><line nr="1230" mi="0" ci="4" mb="0" cb="0"/><line nr="1231" mi="0" ci="4" mb="0" cb="0"/><line nr="1232" mi="0" ci="2" mb="0" cb="0"/><line nr="1233" mi="0" ci="2" mb="0" cb="0"/><line nr="1234" mi="0" ci="3" mb="0" cb="0"/><line nr="1235" mi="0" ci="2" mb="1" cb="1"/><line nr="1236" mi="3" ci="0" mb="0" cb="0"/><line nr="1237" mi="0" ci="2" mb="0" cb="2"/><line nr="1238" mi="0" ci="2" mb="0" cb="0"/><line nr="1239" mi="0" ci="3" mb="1" cb="1"/><line nr="1240" mi="4" ci="0" mb="0" cb="0"/><line nr="1241" mi="4" ci="0" mb="2" cb="0"/><line nr="1242" mi="7" ci="0" mb="0" cb="0"/><line nr="1243" mi="2" ci="0" mb="0" cb="0"/><line nr="1244" mi="3" ci="0" mb="0" cb="0"/><line nr="1247" mi="0" ci="3" mb="0" cb="2"/><line nr="1249" mi="0" ci="5" mb="0" cb="0"/><line nr="1250" mi="0" ci="3" mb="1" cb="1"/><line nr="1252" mi="7" ci="0" mb="0" cb="0"/><line nr="1254" mi="0" ci="3" mb="0" cb="2"/><line nr="1255" mi="0" ci="4" mb="0" cb="0"/><line nr="1258" mi="0" ci="3" mb="0" cb="0"/><line nr="1264" mi="0" ci="2" mb="1" cb="1"/><line nr="1267" mi="4" ci="0" mb="0" cb="0"/><line nr="1268" mi="3" ci="0" mb="2" cb="0"/><line nr="1269" mi="7" ci="0" mb="0" cb="0"/><line nr="1270" mi="3" ci="0" mb="0" cb="0"/><line nr="1271" mi="2" ci="0" mb="0" cb="0"/><line nr="1273" mi="2" ci="0" mb="2" cb="0"/><line nr="1274" mi="2" ci="0" mb="0" cb="0"/><line nr="1275" mi="2" ci="0" mb="0" cb="0"/><line nr="1277" mi="3" ci="0" mb="0" cb="0"/><line nr="1278" mi="4" ci="0" mb="0" cb="0"/><line nr="1279" mi="3" ci="0" mb="2" cb="0"/><line nr="1280" mi="7" ci="0" mb="0" cb="0"/><line nr="1281" mi="1" ci="0" mb="0" cb="0"/><line nr="1283" mi="1" ci="0" mb="0" cb="0"/><line nr="1284" mi="2" ci="0" mb="0" cb="0"/><line nr="1286" mi="2" ci="0" mb="0" cb="0"/><line nr="1288" mi="5" ci="0" mb="4" cb="0"/><line nr="1289" mi="4" ci="0" mb="0" cb="0"/><line nr="1290" mi="6" ci="0" mb="0" cb="0"/><line nr="1291" mi="1" ci="0" mb="0" cb="0"/><line nr="1293" mi="1" ci="0" mb="0" cb="0"/><line nr="1294" mi="4" ci="0" mb="0" cb="0"/><line nr="1296" mi="1" ci="0" mb="0" cb="0"/><line nr="1297" mi="0" ci="2" mb="0" cb="2"/><line nr="1298" mi="0" ci="4" mb="0" cb="0"/><line nr="1300" mi="0" ci="4" mb="0" cb="0"/><line nr="1301" mi="0" ci="4" mb="0" cb="0"/><line nr="1302" mi="4" ci="4" mb="3" cb="3"/><line nr="1303" mi="1" ci="0" mb="0" cb="0"/><line nr="1304" mi="3" ci="0" mb="0" cb="0"/><line nr="1305" mi="5" ci="0" mb="0" cb="0"/><line nr="1307" mi="0" ci="4" mb="0" cb="0"/><line nr="1311" mi="0" ci="9" mb="0" cb="0"/><line nr="1312" mi="5" ci="2" mb="3" cb="1"/><line nr="1313" mi="12" ci="0" mb="0" cb="0"/><line nr="1315" mi="0" ci="2" mb="0" cb="0"/><line nr="1322" mi="3" ci="0" mb="0" cb="0"/><line nr="1323" mi="3" ci="0" mb="2" cb="0"/><line nr="1324" mi="4" ci="0" mb="0" cb="0"/><line nr="1326" mi="6" ci="0" mb="2" cb="0"/><line nr="1327" mi="5" ci="0" mb="0" cb="0"/><line nr="1330" mi="1" ci="0" mb="0" cb="0"/><line nr="1335" mi="0" ci="4" mb="0" cb="0"/><line nr="1336" mi="0" ci="8" mb="0" cb="2"/><line nr="1337" mi="0" ci="4" mb="0" cb="0"/><line nr="1338" mi="0" ci="9" mb="0" cb="2"/><line nr="1344" mi="0" ci="5" mb="0" cb="0"/><line nr="1345" mi="1" ci="0" mb="0" cb="0"/><line nr="1346" mi="15" ci="0" mb="0" cb="0"/><line nr="1347" mi="0" ci="1" mb="0" cb="0"/><line nr="1348" mi="0" ci="2" mb="1" cb="1"/><line nr="1349" mi="12" ci="0" mb="0" cb="0"/><line nr="1353" mi="0" ci="5" mb="0" cb="2"/><line nr="1354" mi="0" ci="8" mb="0" cb="0"/><line nr="1355" mi="0" ci="3" mb="0" cb="0"/><line nr="1356" mi="0" ci="10" mb="0" cb="0"/><line nr="1357" mi="0" ci="3" mb="0" cb="0"/><line nr="1359" mi="0" ci="3" mb="0" cb="0"/><line nr="1360" mi="0" ci="3" mb="0" cb="0"/><line nr="1363" mi="0" ci="2" mb="0" cb="0"/><line nr="1364" mi="0" ci="5" mb="0" cb="2"/><line nr="1365" mi="0" ci="6" mb="0" cb="0"/><line nr="1366" mi="0" ci="2" mb="4" cb="1"/><line nr="1370" mi="1" ci="0" mb="0" cb="0"/><line nr="1373" mi="0" ci="6" mb="4" cb="1"/><line nr="1375" mi="4" ci="0" mb="0" cb="0"/><line nr="1376" mi="1" ci="0" mb="0" cb="0"/><line nr="1378" mi="4" ci="0" mb="0" cb="0"/><line nr="1379" mi="1" ci="0" mb="0" cb="0"/><line nr="1381" mi="4" ci="0" mb="0" cb="0"/><line nr="1382" mi="1" ci="0" mb="0" cb="0"/><line nr="1384" mi="4" ci="0" mb="0" cb="0"/><line nr="1385" mi="1" ci="0" mb="0" cb="0"/><line nr="1388" mi="0" ci="7" mb="0" cb="0"/><line nr="1389" mi="0" ci="3" mb="0" cb="0"/><line nr="1390" mi="1" ci="0" mb="0" cb="0"/><line nr="1391" mi="3" ci="0" mb="0" cb="0"/><line nr="1392" mi="2" ci="0" mb="0" cb="0"/><line nr="1393" mi="0" ci="1" mb="0" cb="0"/><line nr="1400" mi="6" ci="0" mb="0" cb="0"/><line nr="1401" mi="6" ci="0" mb="4" cb="0"/><line nr="1402" mi="3" ci="0" mb="2" cb="0"/><line nr="1403" mi="8" ci="0" mb="0" cb="0"/><line nr="1406" mi="8" ci="0" mb="0" cb="0"/><line nr="1412" mi="9" ci="0" mb="0" cb="0"/><line nr="1413" mi="1" ci="0" mb="0" cb="0"/><line nr="1414" mi="3" ci="0" mb="0" cb="0"/><line nr="1415" mi="2" ci="0" mb="0" cb="0"/><line nr="1416" mi="1" ci="0" mb="0" cb="0"/><line nr="1423" mi="7" ci="0" mb="0" cb="0"/><line nr="1424" mi="1" ci="0" mb="0" cb="0"/><line nr="1425" mi="3" ci="0" mb="0" cb="0"/><line nr="1426" mi="15" ci="0" mb="0" cb="0"/><line nr="1428" mi="1" ci="0" mb="0" cb="0"/><line nr="1432" mi="3" ci="0" mb="0" cb="0"/><line nr="1433" mi="14" ci="0" mb="0" cb="0"/><line nr="1436" mi="0" ci="13" mb="0" cb="0"/><line nr="1437" mi="0" ci="1" mb="0" cb="0"/><line nr="1441" mi="0" ci="8" mb="0" cb="2"/><line nr="1442" mi="0" ci="6" mb="0" cb="2"/><line nr="1443" mi="0" ci="2" mb="0" cb="0"/><line nr="1448" mi="0" ci="3" mb="0" cb="0"/><line nr="1449" mi="0" ci="3" mb="1" cb="1"/><line nr="1450" mi="8" ci="0" mb="2" cb="0"/><line nr="1451" mi="6" ci="0" mb="2" cb="0"/><line nr="1452" mi="2" ci="0" mb="0" cb="0"/><line nr="1456" mi="0" ci="2" mb="0" cb="0"/><line nr="1461" mi="2" ci="0" mb="0" cb="0"/><line nr="1463" mi="7" ci="0" mb="2" cb="0"/><line nr="1464" mi="4" ci="0" mb="0" cb="0"/><line nr="1465" mi="3" ci="0" mb="2" cb="0"/><line nr="1466" mi="2" ci="0" mb="2" cb="0"/><line nr="1467" mi="4" ci="0" mb="0" cb="0"/><line nr="1468" mi="2" ci="0" mb="0" cb="0"/><line nr="1470" mi="5" ci="0" mb="0" cb="0"/><line nr="1471" mi="3" ci="0" mb="2" cb="0"/><line nr="1472" mi="5" ci="0" mb="0" cb="0"/><line nr="1474" mi="2" ci="0" mb="2" cb="0"/><line nr="1475" mi="4" ci="0" mb="0" cb="0"/><line nr="1476" mi="2" ci="0" mb="0" cb="0"/><line nr="1478" mi="4" ci="0" mb="0" cb="0"/><line nr="1481" mi="2" ci="0" mb="2" cb="0"/><line nr="1482" mi="4" ci="0" mb="0" cb="0"/><line nr="1484" mi="1" ci="0" mb="0" cb="0"/><line nr="1489" mi="2" ci="0" mb="0" cb="0"/><line nr="1490" mi="5" ci="0" mb="0" cb="0"/><line nr="1491" mi="1" ci="0" mb="0" cb="0"/><line nr="1501" mi="2" ci="0" mb="0" cb="0"/><line nr="1502" mi="4" ci="0" mb="0" cb="0"/><line nr="1503" mi="14" ci="0" mb="4" cb="0"/><line nr="1505" mi="2" ci="0" mb="2" cb="0"/><line nr="1506" mi="6" ci="0" mb="0" cb="0"/><line nr="1507" mi="7" ci="0" mb="2" cb="0"/><line nr="1508" mi="5" ci="0" mb="0" cb="0"/><line nr="1509" mi="3" ci="0" mb="0" cb="0"/><line nr="1510" mi="5" ci="0" mb="4" cb="0"/><line nr="1511" mi="2" ci="0" mb="0" cb="0"/><line nr="1512" mi="1" ci="0" mb="0" cb="0"/><line nr="1514" mi="2" ci="0" mb="0" cb="0"/><line nr="1518" mi="2" ci="0" mb="2" cb="0"/><line nr="1519" mi="5" ci="0" mb="0" cb="0"/><line nr="1521" mi="1" ci="0" mb="0" cb="0"/><line nr="1530" mi="6" ci="0" mb="0" cb="0"/><line nr="1546" mi="5" ci="0" mb="0" cb="0"/><line nr="1548" mi="4" ci="0" mb="0" cb="0"/><line nr="1549" mi="3" ci="0" mb="0" cb="0"/><line nr="1564" mi="5" ci="0" mb="0" cb="0"/><line nr="1566" mi="4" ci="0" mb="0" cb="0"/><line nr="1567" mi="3" ci="0" mb="0" cb="0"/><line nr="1572" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1416" covered="535"/><counter type="BRANCH" missed="197" covered="61"/><counter type="LINE" missed="306" covered="119"/><counter type="COMPLEXITY" missed="140" covered="30"/><counter type="METHOD" missed="28" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3518" covered="556"/><counter type="BRANCH" missed="503" covered="61"/><counter type="LINE" missed="756" covered="127"/><counter type="COMPLEXITY" missed="357" covered="34"/><counter type="METHOD" missed="92" covered="12"/><counter type="CLASS" missed="4" covered="2"/></package><package name="org/spf4j/jdbc"><class name="org/spf4j/jdbc/JdbcTemplate$1" sourcefilename="JdbcTemplate.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/jdbc/JdbcTemplate;Lorg/spf4j/base/HandlerNano;Lorg/spf4j/base/ExecutionContext;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jdbc/DataSourceExImpl" sourcefilename="DataSourceExImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/concurrent/Semaphore;Ljavax/sql/DataSource;)V" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnection" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/sql/Connection;" line="64"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnection" desc="()Ljava/sql/Connection;" line="80"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnection" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLogWriter" desc="()Ljava/io/PrintWriter;" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLogWriter" desc="(Ljava/io/PrintWriter;)V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLoginTimeout" desc="(I)V" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLoginTimeout" desc="()I" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentLogger" desc="()Ljava/util/logging/Logger;" line="119"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unwrap" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWrapperFor" desc="(Ljava/lang/Class;)Z" line="129"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="145" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jdbc/DataSourceEx" sourcefilename="DataSourceEx.java"><method name="from" desc="(Ljavax/sql/DataSource;I)Lorg/spf4j/jdbc/DataSourceEx;" line="68"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljavax/sql/DataSource;Lorg/spf4j/concurrent/Semaphore;)Lorg/spf4j/jdbc/DataSourceEx;" line="80"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jdbc/SemaphoredConnectionInvocationHandler" sourcefilename="SemaphoredConnectionInvocationHandler.java"><method name="&lt;init&gt;" desc="(Ljava/sql/Connection;Lorg/spf4j/concurrent/Semaphore;)V" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/jdbc/JdbcTemplate" sourcefilename="JdbcTemplate.java"><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/sql/DataSource;Lorg/spf4j/failsafe/RetryPolicy;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkJdbcObjectName" desc="(Ljava/lang/CharSequence;)V" line="84"><counter type="INSTRUCTION" missed="12" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transactOnConnection" desc="(Lorg/spf4j/base/HandlerNano;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transactOnConnection" desc="(Lorg/spf4j/base/HandlerNano;J)Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transactOnConnectionNonInterrupt" desc="(Lorg/spf4j/base/HandlerNano;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeoutToDeadlineSeconds" desc="(J)I" line="147"><counter type="INSTRUCTION" missed="17" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeoutToDeadlineSecondsNoEx" desc="(J)I" line="163"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="176"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="109"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="10" covered="28"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/jdbc/DbType" sourcefilename="DbType.java"><method name="getCurrTSSqlFn" desc="(Lorg/spf4j/jdbc/DbType;)Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="20" covered="7"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrTSSqlFn" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="99"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DbType.java"><line nr="38" mi="0" ci="35" mb="0" cb="0"/><line nr="39" mi="0" ci="48" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="5" cb="1"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="12" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="99"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DataSourceExImpl.java"><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="2" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="15" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="15" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="145" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SemaphoredConnectionInvocationHandler.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DataSourceEx.java"><line nr="68" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JdbcTemplate.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="2" cb="2"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="26" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="1" cb="1"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="15" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="1" cb="1"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="1" cb="1"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="160"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="10" covered="40"/><counter type="COMPLEXITY" missed="8" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="296" covered="259"/><counter type="BRANCH" missed="20" covered="12"/><counter type="LINE" missed="64" covered="46"/><counter type="COMPLEXITY" missed="34" covered="16"/><counter type="METHOD" missed="18" covered="14"/><counter type="CLASS" missed="3" covered="3"/></package><package name="org/spf4j/recyclable/impl"><class name="org/spf4j/recyclable/impl/ScalableObjectPool$1" sourcefilename="ScalableObjectPool.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/ScalableObjectPool;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lorg/spf4j/recyclable/impl/LocalObjectPool;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ScalableObjectPool" sourcefilename="ScalableObjectPool.java"><method name="&lt;init&gt;" desc="(IILorg/spf4j/recyclable/RecyclingSupplier$Factory;Z)V" line="56"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGet" desc="(J)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryDispose" desc="(J)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scan" desc="(Lorg/spf4j/recyclable/Scanable$ScanHandler;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestReturnFromBorrowersIfNotInUse" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="63"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/LeaseImpl" sourcefilename="LeaseImpl.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier;)V" line="50"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/LocalObjectPool" sourcefilename="LocalObjectPool.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/SmartRecyclingSupplier;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGet" desc="(J)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryDispose" desc="(J)Z" line="129"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scan" desc="(Lorg/spf4j/recyclable/Scanable$ScanHandler;)Z" line="134"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRequestReturnObject" desc="()Lorg/spf4j/base/Either;" line="149"><counter type="INSTRUCTION" missed="4" covered="76"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryReturnObjectIfNotInUse" desc="()Lorg/spf4j/recyclable/impl/ObjectHolder;" line="189"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryReturnObjectsIfNotInUse" desc="()Ljava/util/Collection;" line="207"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryReturnObjectsIfNotNeededAnymore" desc="()Ljava/util/Collection;" line="227"><counter type="INSTRUCTION" missed="24" covered="19"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="247"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="253"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nevermind" desc="(Lorg/spf4j/recyclable/impl/ObjectHolder;)Z" line="258"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="357"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="9" covered="82"/><counter type="COMPLEXITY" missed="9" covered="24"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/RecyclingSupplierBuilder" sourcefilename="RecyclingSupplierBuilder.java"><method name="&lt;init&gt;" desc="(ILorg/spf4j/recyclable/RecyclingSupplier$Factory;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unfair" desc="()Lorg/spf4j/recyclable/impl/RecyclingSupplierBuilder;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withInitialSize" desc="(I)Lorg/spf4j/recyclable/impl/RecyclingSupplierBuilder;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withMaintenance" desc="(Ljava/util/concurrent/ScheduledExecutorService;JZ)Lorg/spf4j/recyclable/impl/RecyclingSupplierBuilder;" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withGetHook" desc="(Lorg/spf4j/base/Handler;)Lorg/spf4j/recyclable/impl/RecyclingSupplierBuilder;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withRecycleHook" desc="(Lorg/spf4j/base/Handler;)Lorg/spf4j/recyclable/impl/RecyclingSupplierBuilder;" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/spf4j/recyclable/RecyclingSupplier;" line="97"><counter type="INSTRUCTION" missed="10" covered="40"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="71"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="8" covered="18"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/SharingObjectPool" sourcefilename="SharingObjectPool.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier$Factory;II)V" line="121"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier$Factory;IIZ)V" line="126"><counter type="INSTRUCTION" missed="34" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGet" desc="(J)Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="15" covered="36"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createObject" desc="(I)Ljava/lang/Object;" line="170"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V" line="178"><counter type="INSTRUCTION" missed="18" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V" line="197"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnToQueue" desc="(Ljava/lang/Object;)V" line="219"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="230"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryDispose" desc="(J)Z" line="236"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="209" covered="147"/><counter type="BRANCH" missed="25" covered="11"/><counter type="LINE" missed="51" covered="43"/><counter type="COMPLEXITY" missed="19" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/SharingObjectPool$2" sourcefilename="SharingObjectPool.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/SharingObjectPool;ZLjava/lang/Object;Ljava/lang/Exception;)V" line="180"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRun" desc="()V" line="184"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/SharingObjectPool$1" sourcefilename="SharingObjectPool.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lorg/spf4j/recyclable/impl/SharingObjectPool$SharedObject;Lorg/spf4j/recyclable/impl/SharingObjectPool$SharedObject;)I" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/CollectableThreadLocalRecyclingSupplier" sourcefilename="CollectableThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/ReferenceType;Ljava/util/function/Supplier;)V" line="53"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Objects$1" sourcefilename="ArraySuppliers.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(I)[Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="([Ljava/lang/Object;)I" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/ObjectPoolWrapper" sourcefilename="ObjectPoolWrapper.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier;Lorg/spf4j/base/Handler;Lorg/spf4j/base/Handler;)V" line="62"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryGet" desc="(J)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recycle" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V" line="96"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryDispose" desc="(J)Z" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scan" desc="(Lorg/spf4j/recyclable/Scanable$ScanHandler;)Z" line="113"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Bytes$1" sourcefilename="ArraySuppliers.java"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(I)[B" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="([B)I" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Bytes$2" sourcefilename="ArraySuppliers.java"><method name="&lt;init&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)[B" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="([B)V" line="103"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/SizedThreadLocalRecyclingSupplier" sourcefilename="SizedThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/SizedRecyclingSupplier$Factory;Lorg/spf4j/base/ReferenceType;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="10" covered="93"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="6" covered="29"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="144"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="7" covered="42"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ThreadLocalRecyclingSupplier$1" sourcefilename="ThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/ThreadLocalRecyclingSupplier;Ljava/util/function/Supplier;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Chars" sourcefilename="ArraySuppliers.java"><method name="&lt;clinit&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/Powerof2SizedGlobalRecyclingSupplier" sourcefilename="Powerof2SizedGlobalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/SizedRecyclingSupplier$Factory;Lorg/spf4j/base/ReferenceType;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="80"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/CollectableThreadLocalRecyclingSupplier$1" sourcefilename="CollectableThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/CollectableThreadLocalRecyclingSupplier;Lorg/spf4j/base/ReferenceType;Ljava/util/function/Supplier;)V" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialValue" desc="()Ljava/lang/ref/Reference;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/RecyclingSupplierBuilder$MaintenanceRunner" sourcefilename="RecyclingSupplierBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/ScalableObjectPool;Z)V" line="118"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/RecyclingSupplierBuilder$MaintenanceRunner$1" sourcefilename="RecyclingSupplierBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/RecyclingSupplierBuilder$MaintenanceRunner;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Lorg/spf4j/recyclable/impl/ObjectHolder;)Z" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Objects" sourcefilename="ArraySuppliers.java"><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/recyclable/impl/SimpleSmartObjectPool" sourcefilename="SimpleSmartObjectPool.java"><method name="&lt;init&gt;" desc="(IILorg/spf4j/recyclable/RecyclingSupplier$Factory;Z)V" line="73"><counter type="INSTRUCTION" missed="12" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGet" desc="(Lorg/spf4j/recyclable/ObjectBorower;J)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="153" covered="226"/><counter type="BRANCH" missed="15" covered="37"/><counter type="LINE" missed="14" covered="55"/><counter type="COMPLEXITY" missed="13" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;Lorg/spf4j/recyclable/ObjectBorower;)V" line="200"><counter type="INSTRUCTION" missed="28" covered="60"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryDispose" desc="(J)Z" line="232"><counter type="INSTRUCTION" missed="44" covered="107"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="11" covered="23"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disposeReturnedObjects" desc="(Lorg/spf4j/recyclable/ObjectDisposeException;)Lorg/spf4j/recyclable/ObjectDisposeException;" line="279"><counter type="INSTRUCTION" missed="28" covered="23"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scan" desc="(Lorg/spf4j/recyclable/Scanable$ScanHandler;)Z" line="305"><counter type="INSTRUCTION" missed="53" covered="57"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="15" covered="15"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestReturnFromBorrowersIfNotInUse" desc="()V" line="352"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="373"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSample" desc="()Ljava/lang/Object;" line="385"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="318" covered="632"/><counter type="BRANCH" missed="43" covered="73"/><counter type="LINE" missed="55" covered="147"/><counter type="COMPLEXITY" missed="34" covered="33"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Bytes" sourcefilename="ArraySuppliers.java"><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/Powerof2ThreadLocalRecyclingSupplier" sourcefilename="Powerof2ThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/SizedRecyclingSupplier$Factory;Lorg/spf4j/base/ReferenceType;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="76"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ObjectHolderFactory" sourcefilename="ObjectHolderFactory.java"><method name="&lt;init&gt;" desc="(ILorg/spf4j/recyclable/RecyclingSupplier$Factory;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lorg/spf4j/recyclable/impl/ObjectHolder;" line="62"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="(Lorg/spf4j/recyclable/impl/ObjectHolder;)V" line="71"><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lorg/spf4j/recyclable/impl/ObjectHolder;Ljava/lang/Exception;)Z" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="63"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/Powerof2ThreadLocalRecyclingSupplier$1" sourcefilename="Powerof2ThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/Powerof2ThreadLocalRecyclingSupplier;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()[Ljava/util/Deque;" line="61"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ObjectHolder" sourcefilename="ObjectHolder.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier$Factory;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/RecyclingSupplier$Factory;Z)V" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/spf4j/recyclable/RecyclingSupplier$Factory;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObj" desc="()Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="borrowOrCreateObjectIfPossible" desc="()Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="borrowObjectIfAvailable" desc="()Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnObject" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V" line="104"><counter type="INSTRUCTION" missed="30" covered="50"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="12"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateObjectIfNotBorrowed" desc="()V" line="133"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disposeIfNotBorrowed" desc="()Z" line="153"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFactory" desc="()Lorg/spf4j/recyclable/RecyclingSupplier$Factory;" line="172"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="187"/><counter type="BRANCH" missed="11" covered="17"/><counter type="LINE" missed="16" covered="52"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Chars$2" sourcefilename="ArraySuppliers.java"><method name="&lt;init&gt;" desc="()V" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)[C" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recycle" desc="([C)V" line="146"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ArraySuppliers$Chars$1" sourcefilename="ArraySuppliers.java"><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(I)[C" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="([C)I" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/ThreadLocalRecyclingSupplier" sourcefilename="ThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recycle" desc="(Ljava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/SizedThreadLocalRecyclingSupplier$1" sourcefilename="SizedThreadLocalRecyclingSupplier.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/recyclable/impl/SizedThreadLocalRecyclingSupplier;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/util/NavigableMap;" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/recyclable/impl/SharingObjectPool$SharedObject" sourcefilename="SharingObjectPool.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;I)V" line="91"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="()Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inc" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dec" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrTimesShared" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="29"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ArraySuppliers.java"><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="70"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="ObjectHolder.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="1" cb="1"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="1" cb="1"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="4" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="2" cb="2"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="1" cb="1"/><line nr="119" mi="0" ci="18" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="1" cb="3"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="1" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="22" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="187"/><counter type="BRANCH" missed="11" covered="17"/><counter type="LINE" missed="16" covered="52"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SizedThreadLocalRecyclingSupplier.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="1" cb="1"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="1" cb="3"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="154"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="7" covered="43"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ThreadLocalRecyclingSupplier.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="16" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="1" cb="1"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ScalableObjectPool.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="76"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LocalObjectPool.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="14" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="11" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="1" cb="1"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="1" cb="1"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="2"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="2"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="4" mb="0" cb="2"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="1" cb="1"/><line nr="230" mi="0" ci="4" mb="1" cb="1"/><line nr="231" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="13" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="27" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="1" ci="11" mb="1" cb="1"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="357"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="9" covered="82"/><counter type="COMPLEXITY" missed="9" covered="24"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Powerof2ThreadLocalRecyclingSupplier.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="2"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="3" ci="2" mb="3" cb="1"/><line nr="84" mi="0" ci="2" mb="1" cb="1"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="101"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Powerof2SizedGlobalRecyclingSupplier.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="1" cb="1"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="18" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="80"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectHolderFactory.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="12" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="63"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectableThreadLocalRecyclingSupplier.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="20" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="SharingObjectPool.java"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="17" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="12" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="16" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="2" ci="5" mb="1" cb="1"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="1" cb="1"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="13" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="1" cb="1"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="23" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="2" cb="0"/><line nr="201" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="1" cb="1"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="2" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="2" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="4" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="2" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="2" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="252" covered="185"/><counter type="BRANCH" missed="25" covered="11"/><counter type="LINE" missed="56" covered="54"/><counter type="COMPLEXITY" missed="23" covered="17"/><counter type="METHOD" missed="7" covered="15"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="LeaseImpl.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RecyclingSupplierBuilder.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="2" cb="2"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="15" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="14" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="52" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="106"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="28"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ObjectPoolWrapper.java"><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="4" cb="0"/><line nr="67" mi="12" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="4" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="14" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="15" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SimpleSmartObjectPool.java"><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="1" cb="1"/><line nr="107" mi="17" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="1" cb="1"/><line nr="113" mi="17" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="1" cb="1"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="6" mb="1" cb="1"/><line nr="123" mi="12" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="1" cb="1"/><line nr="126" mi="17" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="12" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="1"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="2" cb="0"/><line nr="143" mi="17" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="2" cb="0"/><line nr="148" mi="17" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="1" cb="1"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="1" cb="1"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="2"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="1" cb="1"/><line nr="188" mi="17" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="12" mb="1" cb="1"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="1" cb="1"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="1" cb="1"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="1" cb="1"/><line nr="216" mi="14" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="1" cb="1"/><line nr="219" mi="12" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="13" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="2"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="10" mb="0" cb="2"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="1" cb="1"/><line nr="251" mi="12" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="1" cb="1"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="2" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="2" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="1" cb="1"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="10" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="2" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="2" cb="0"/><line nr="290" mi="6" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="12" mb="0" cb="2"/><line nr="310" mi="0" ci="4" mb="1" cb="1"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="2" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="3" ci="6" mb="1" cb="1"/><line nr="322" mi="6" ci="0" mb="2" cb="0"/><line nr="323" mi="12" ci="0" mb="0" cb="0"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="10" mb="0" cb="2"/><line nr="331" mi="0" ci="4" mb="1" cb="1"/><line nr="332" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="2" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="1" cb="1"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="12" mb="0" cb="2"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="9" mb="0" cb="2"/><line nr="358" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="10" mb="0" cb="2"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="7" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="29" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="318" covered="632"/><counter type="BRANCH" missed="43" covered="73"/><counter type="LINE" missed="55" covered="147"/><counter type="COMPLEXITY" missed="34" covered="33"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1167" covered="2054"/><counter type="BRANCH" missed="121" covered="169"/><counter type="LINE" missed="229" covered="507"/><counter type="COMPLEXITY" missed="134" covered="152"/><counter type="METHOD" missed="44" covered="97"/><counter type="CLASS" missed="7" covered="25"/></package><package name="org/spf4j/perf/impl/ms/graphite"><class name="org/spf4j/perf/impl/ms/graphite/GraphiteUdpStore" sourcefilename="GraphiteUdpStore.java"><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="137"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="146"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="150"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="159"><counter type="INSTRUCTION" missed="9" covered="17"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeMetric" desc="(Lorg/spf4j/perf/MeasurementsInfo;Ljava/lang/String;JJLjava/io/Writer;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="201"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="113"/><counter type="LINE" missed="10" covered="25"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/graphite/GraphiteTcpStore" sourcefilename="GraphiteTcpStore.java"><method name="query" desc="()Lorg/spf4j/perf/MeasurementStoreQuery;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="132"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="136"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="140"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjavax/net/SocketFactory;)V" line="144"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alocateMeasurements" desc="(Lorg/spf4j/perf/MeasurementsInfo;I)J" line="152"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveMeasurements" desc="(JJ[J)V" line="160"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="179"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="216"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ms/graphite/GraphiteUdpStore$HandlerImpl" sourcefilename="GraphiteUdpStore.java"><method name="&lt;init&gt;" desc="([JLorg/spf4j/perf/MeasurementsInfo;J)V" line="214"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljava/nio/channels/DatagramChannel;J)Ljava/lang/Void;" line="223"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/graphite/GraphiteUdpStore$DatagramChannelSupplierFactory" sourcefilename="GraphiteUdpStore.java"><method name="&lt;init&gt;" desc="(Ljava/net/InetSocketAddress;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Ljava/nio/channels/DatagramChannel;" line="95"><counter type="INSTRUCTION" missed="24" covered="10"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="(Ljava/nio/channels/DatagramChannel;)V" line="116"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/nio/channels/DatagramChannel;Ljava/lang/Exception;)Z" line="124"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/impl/ms/graphite/GraphiteTcpStore$WriterSupplierFactory" sourcefilename="GraphiteTcpStore.java"><method name="&lt;init&gt;" desc="(Ljavax/net/SocketFactory;Ljava/lang/String;I)V" line="88"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Ljava/io/Writer;" line="98"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dispose" desc="(Ljava/io/Writer;)V" line="118"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/io/Writer;Ljava/lang/Exception;)Z" line="126"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/perf/impl/ms/graphite/GraphiteTcpStore$HandlerImpl" sourcefilename="GraphiteTcpStore.java"><method name="&lt;init&gt;" desc="([JLorg/spf4j/perf/MeasurementsInfo;J)V" line="195"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/io/Writer;J)Ljava/lang/Void;" line="204"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="GraphiteTcpStore.java"><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="10" ci="0" mb="4" cb="0"/><line nr="132" mi="13" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="13" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="13" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="9" ci="0" mb="2" cb="0"/><line nr="205" mi="14" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="240" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="64" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GraphiteUdpStore.java"><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="10" ci="0" mb="4" cb="0"/><line nr="130" mi="0" ci="13" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="13" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="12" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="9" mb="0" cb="2"/><line nr="231" mi="0" ci="14" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="0" ci="8" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="229"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="25" covered="56"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="306" covered="229"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="89" covered="56"/><counter type="COMPLEXITY" missed="26" covered="14"/><counter type="METHOD" missed="20" covered="12"/><counter type="CLASS" missed="3" covered="3"/></package><package name="org/spf4j/io/csv"><class name="org/spf4j/io/csv/CharSeparatedValues$CsvWriterImpl" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CharSeparatedValues;Ljava/io/Writer;)V" line="636"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElement" desc="(Ljava/lang/CharSequence;)V" line="643"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addComma" desc="()V" line="648"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeEol" desc="()V" line="657"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="663"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startQuotedElement" desc="()Lorg/spf4j/io/csv/ElementAppendable;" line="669"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startRawElement" desc="()Ljava/lang/Appendable;" line="699"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CsvReader$TokenType" sourcefilename="CsvReader.java"><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$CsvRow2List" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="()V" line="617"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Ljava/lang/CharSequence;)V" line="623"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eof" desc="()Ljava/util/List;" line="628"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$ToListMapHandler" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="()V" line="412"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="row" desc="(Ljava/util/Map;)V" line="418"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eof" desc="()Ljava/util/List;" line="423"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/csv/CharSeparatedValues" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(C)V" line="76"><counter type="INSTRUCTION" missed="12" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(C[C)V" line="84"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeCsvRow" desc="(Ljava/lang/Appendable;[Ljava/lang/Object;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRowNoEOL" desc="(Ljava/lang/Appendable;[Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRow2" desc="(Ljava/lang/Appendable;Ljava/lang/Object;[Ljava/lang/Object;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRow" desc="(Ljava/lang/Appendable;[J)V" line="134"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRowNoEOL" desc="([JLjava/lang/Appendable;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvRow" desc="(Ljava/lang/Appendable;Ljava/lang/Iterable;)V" line="150"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeCsvRowNoEOL" desc="(Ljava/lang/Iterable;Ljava/lang/Appendable;)V" line="155"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/spf4j/io/csv/CsvMapHandler;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/spf4j/io/csv/CsvHandler;)Ljava/lang/Object;" line="180"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/Reader;)Ljava/util/List;" line="186"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/Reader;Lorg/spf4j/io/csv/CsvMapHandler;)Ljava/lang/Object;" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRow" desc="(Ljava/io/Reader;)Ljava/util/List;" line="195"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRow" desc="(Ljava/io/Reader;Lorg/spf4j/io/csv/CsvRowHandler;)Ljava/lang/Object;" line="199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/Reader;Lorg/spf4j/io/csv/CsvHandler;)Ljava/lang/Object;" line="204"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readNoBom" desc="(Lorg/spf4j/io/PushbackReader;Lorg/spf4j/io/csv/CsvHandler;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIterable" desc="(Ljava/io/Reader;)Ljava/lang/Iterable;" line="249"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reader" desc="(Ljava/io/Reader;)Lorg/spf4j/io/csv/CsvReader;" line="261"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readerILEL" desc="(Ljava/io/Reader;)Lorg/spf4j/io/csv/CsvReader;" line="278"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readerNoBOM" desc="(Lorg/spf4j/io/PushbackReader;)Lorg/spf4j/io/csv/CsvReader;" line="287"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readerNoBOMILEL" desc="(Lorg/spf4j/io/PushbackReader;)Lorg/spf4j/io/csv/CsvReader;" line="298"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writer" desc="(Ljava/io/Writer;)Lorg/spf4j/io/csv/CsvWriter;" line="302"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCsvElement" desc="(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V" line="306"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeQuotedCsvElement" desc="(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V" line="314"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeQuotedElementContent" desc="(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V" line="321"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeQuotedChar" desc="(CLjava/lang/Appendable;)V" line="328"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCsvElement" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="336"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCsvElement" desc="(Ljava/lang/String;)Ljava/lang/String;" line="350"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readCsvElement" desc="(Ljava/io/Reader;Ljava/lang/StringBuilder;J)I" line="374"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="409"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asIterable$0" desc="(Ljava/io/Reader;)Ljava/util/Iterator;" line="251"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="201" covered="493"/><counter type="BRANCH" missed="30" covered="54"/><counter type="LINE" missed="46" covered="110"/><counter type="COMPLEXITY" missed="28" covered="46"/><counter type="METHOD" missed="7" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CsvParseException" sourcefilename="CsvParseException.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/IterableCsvReader" sourcefilename="IterableCsvReader.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="48"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lorg/spf4j/io/csv/CsvReader$TokenType;" line="57"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()Lorg/spf4j/io/csv/CsvReader$TokenType;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Ljava/lang/CharSequence;" line="78"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="currentLineNumber" desc="()J" line="91"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/csv/CsvRuntimeException" sourcefilename="CsvRuntimeException.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$CsvReaderImpl" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CharSeparatedValues;Lorg/spf4j/io/PushbackReader;)V" line="481"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readNext" desc="()V" line="495"><counter type="INSTRUCTION" missed="38" covered="98"/><counter type="BRANCH" missed="4" covered="17"/><counter type="LINE" missed="5" covered="30"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lorg/spf4j/io/csv/CsvReader$TokenType;" line="556"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="current" desc="()Lorg/spf4j/io/csv/CsvReader$TokenType;" line="571"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElement" desc="()Ljava/lang/CharSequence;" line="576"><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentLineNumber" desc="()J" line="584"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="156"/><counter type="BRANCH" missed="5" covered="22"/><counter type="LINE" missed="6" covered="49"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/UncheckedCsvParseException" sourcefilename="UncheckedCsvParseException.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CsvReader" sourcefilename="CsvReader.java"><method name="skipRow" desc="()I" line="85"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRow" desc="(Ljava/util/function/Consumer;)V" line="102"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toReader" desc="(Ljava/util/Iterator;)Lorg/spf4j/io/csv/CsvReader;" line="118"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="33"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$CsvWriterImpl$1" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CharSeparatedValues$CsvWriterImpl;)V" line="671"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="674"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="680"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="686"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="692"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$CsvWriterImpl$2" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CharSeparatedValues$CsvWriterImpl;)V" line="700"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="703"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="712"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="721"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$OneRowHandler" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CsvRowHandler;)V" line="594"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startRow" desc="(J)V" line="600"><counter type="INSTRUCTION" missed="12" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Ljava/lang/CharSequence;)V" line="607"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eof" desc="()Ljava/lang/Object;" line="612"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CharSeparatedValues$CsvMapHandler2CsvHandler" sourcefilename="CharSeparatedValues.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CsvMapHandler;)V" line="430"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startRow" desc="(J)V" line="443"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Ljava/lang/CharSequence;)V" line="452"><counter type="INSTRUCTION" missed="18" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRow" desc="()V" line="465"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eof" desc="()Ljava/lang/Object;" line="474"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="86"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CsvReader2Iterator" sourcefilename="CsvReader2Iterator.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/io/csv/CsvReader;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRow" desc="()Lorg/spf4j/io/csv/CsvReader$TokenType;" line="56"><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="79"><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Iterable;" line="99"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="86"/><counter type="BRANCH" missed="3" covered="12"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/csv/CsvHandler" sourcefilename="CsvHandler.java"><method name="startRow" desc="(J)V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startRow" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRow" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CsvParseException.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsvHandler.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsvReader2Iterator.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="1" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="2" ci="5" mb="1" cb="1"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="86"/><counter type="BRANCH" missed="3" covered="12"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharSeparatedValues.java"><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="3" cb="3"/><line nr="78" mi="12" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="20" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="9" ci="0" mb="6" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="1" cb="1"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="1" cb="1"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="16" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="1" cb="1"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="2" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="15" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="15" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="9" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="1" cb="3"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="1" cb="1"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="1" cb="3"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="7" mb="0" cb="2"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="2"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="2" cb="0"/><line nr="337" mi="8" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="2" cb="0"/><line nr="351" mi="8" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="5" ci="0" mb="0" cb="0"/><line nr="356" mi="1" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="2"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="2"/><line nr="381" mi="0" ci="3" mb="0" cb="2"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="2"/><line nr="384" mi="0" ci="3" mb="0" cb="2"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="16" mb="0" cb="0"/><line nr="399" mi="0" ci="12" mb="0" cb="8"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="12" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="6" ci="0" mb="0" cb="0"/><line nr="418" mi="5" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="2"/><line nr="446" mi="0" ci="8" mb="0" cb="0"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="2"/><line nr="453" mi="0" ci="7" mb="0" cb="0"/><line nr="455" mi="0" ci="6" mb="1" cb="1"/><line nr="456" mi="18" ci="0" mb="0" cb="0"/><line nr="458" mi="0" ci="11" mb="0" cb="0"/><line nr="460" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="2"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="0" ci="6" mb="2" cb="2"/><line nr="497" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="2"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="10" mb="0" cb="0"/><line nr="512" mi="0" ci="3" mb="0" cb="0"/><line nr="513" mi="0" ci="2" mb="0" cb="3"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="2"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="1" cb="1"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="0"/><line nr="529" mi="0" ci="2" mb="0" cb="2"/><line nr="530" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="2"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="1" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="2"/><line nr="539" mi="0" ci="2" mb="1" cb="1"/><line nr="540" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="17" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="1" mb="0" cb="0"/><line nr="548" mi="13" ci="0" mb="0" cb="0"/><line nr="556" mi="0" ci="3" mb="0" cb="2"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="3" mb="0" cb="2"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="4" mb="1" cb="1"/><line nr="577" mi="13" ci="0" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="595" mi="0" ci="3" mb="0" cb="0"/><line nr="596" mi="0" ci="1" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="1" cb="1"/><line nr="601" mi="12" ci="0" mb="0" cb="0"/><line nr="603" mi="0" ci="1" mb="0" cb="0"/><line nr="607" mi="0" ci="4" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="612" mi="0" ci="4" mb="0" cb="0"/><line nr="617" mi="0" ci="2" mb="0" cb="0"/><line nr="619" mi="0" ci="6" mb="0" cb="0"/><line nr="623" mi="0" ci="6" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="628" mi="0" ci="3" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="2" mb="0" cb="0"/><line nr="644" mi="0" ci="6" mb="0" cb="0"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="3" mb="0" cb="2"/><line nr="649" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="7" mb="0" cb="0"/><line nr="653" mi="0" ci="1" mb="0" cb="0"/><line nr="657" mi="0" ci="5" mb="0" cb="0"/><line nr="658" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="1" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="1" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="671" mi="11" ci="0" mb="0" cb="0"/><line nr="674" mi="8" ci="0" mb="0" cb="0"/><line nr="675" mi="2" ci="0" mb="0" cb="0"/><line nr="680" mi="7" ci="0" mb="0" cb="0"/><line nr="681" mi="2" ci="0" mb="0" cb="0"/><line nr="686" mi="5" ci="0" mb="0" cb="0"/><line nr="687" mi="2" ci="0" mb="0" cb="0"/><line nr="692" mi="5" ci="0" mb="0" cb="0"/><line nr="693" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="0" cb="0"/><line nr="700" mi="11" ci="0" mb="0" cb="0"/><line nr="703" mi="7" ci="0" mb="2" cb="0"/><line nr="704" mi="12" ci="0" mb="0" cb="0"/><line nr="706" mi="6" ci="0" mb="0" cb="0"/><line nr="707" mi="2" ci="0" mb="0" cb="0"/><line nr="712" mi="9" ci="0" mb="2" cb="0"/><line nr="713" mi="12" ci="0" mb="0" cb="0"/><line nr="715" mi="8" ci="0" mb="0" cb="0"/><line nr="716" mi="2" ci="0" mb="0" cb="0"/><line nr="721" mi="7" ci="0" mb="2" cb="0"/><line nr="722" mi="12" ci="0" mb="0" cb="0"/><line nr="724" mi="6" ci="0" mb="0" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="450" covered="818"/><counter type="BRANCH" missed="43" covered="86"/><counter type="LINE" missed="86" covered="208"/><counter type="COMPLEXITY" missed="53" covered="82"/><counter type="METHOD" missed="22" covered="47"/><counter type="CLASS" missed="3" covered="6"/></sourcefile><sourcefile name="UncheckedCsvParseException.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsvRuntimeException.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IterableCsvReader.java"><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="2" cb="0"/><line nr="79" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="22" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CsvReader.java"><line nr="49" mi="0" ci="20" mb="0" cb="0"/><line nr="50" mi="0" ci="24" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="1" cb="3"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="9" ci="0" mb="4" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="77"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="668" covered="994"/><counter type="BRANCH" missed="62" covered="104"/><counter type="LINE" missed="142" covered="255"/><counter type="COMPLEXITY" missed="84" covered="100"/><counter type="METHOD" missed="41" covered="58"/><counter type="CLASS" missed="5" covered="12"/></package><package name="org/spf4j/perf/memory"><class name="org/spf4j/perf/memory/GCUsageSampler$1" sourcefilename="GCUsageSampler.java"><method name="&lt;init&gt;" desc="(Z)V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/memory/GCUsageSampler$2" sourcefilename="GCUsageSampler.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/perf/MeasurementRecorder;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/memory/MemoryUsageSampler" sourcefilename="MemoryUsageSampler.java"><method name="getHotspotMBean" desc="()Lcom/sun/management/HotSpotDiagnosticMXBean;" line="83"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(J)V" line="95"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(I)V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(II)V" line="105"><counter type="INSTRUCTION" missed="12" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStarted" desc="()Z" line="125"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dumpHeap" desc="(Ljava/lang/String;Z)V" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHotspotDiagnosticBean" desc="()Lcom/sun/management/HotSpotDiagnosticMXBean;" line="170"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="61"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/memory/MemoryUsageSampler$AccumulatorRunnable" sourcefilename="MemoryUsageSampler.java"><method name="&lt;init&gt;" desc="(I)V" line="135"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="148"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="158"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/memory/MemoryUsageSampler$1" sourcefilename="MemoryUsageSampler.java"><method name="&lt;init&gt;" desc="(Z)V" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/perf/memory/GCUsageSampler" sourcefilename="GCUsageSampler.java"><method name="getMBEANS" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(I)V" line="80"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGCTimeDiff" desc="(Ljava/lang/Iterable;Lgnu/trove/map/TObjectLongMap;)J" line="108"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGCTime" desc="(Ljava/lang/Iterable;)J" line="118"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGCTime" desc="()J" line="127"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStarted" desc="()Z" line="132"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="78"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MemoryUsageSampler.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="1" cb="1"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="12" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="2" ci="4" mb="1" cb="1"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="134"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="8" covered="39"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="GCUsageSampler.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="17" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="10" ci="0" mb="2" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="4" mb="1" cb="1"/><counter type="INSTRUCTION" missed="37" covered="111"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="72" covered="245"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="15" covered="69"/><counter type="COMPLEXITY" missed="10" covered="24"/><counter type="METHOD" missed="5" covered="21"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/spf4j/io/appenders/json"><class name="org/spf4j/io/appenders/json/SpecificRecordJsonAppender" sourcefilename="SpecificRecordJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/avro/specific/SpecificRecord;Ljava/lang/Appendable;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayDoubleJsonAppender" sourcefilename="ArrayDoubleJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([DLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="57"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([DLjava/lang/Appendable;)V" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/JsonEncoderFactory" sourcefilename="JsonEncoderFactory.java"><method name="getEncoder" desc="(Lorg/apache/avro/Schema;Ljava/io/OutputStream;)Lorg/apache/avro/io/Encoder;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoder" desc="(Lorg/apache/avro/Schema;Ljava/lang/Appendable;)Lorg/apache/avro/io/Encoder;" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayIntJsonAppender" sourcefilename="ArrayIntJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([ILjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="56"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([ILjava/lang/Appendable;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/GenericRecordJsonAppender" sourcefilename="GenericRecordJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/avro/generic/GenericRecord;Ljava/lang/Appendable;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/NumberJsonAppender" sourcefilename="NumberJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Number;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Number;Ljava/lang/Appendable;)V" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayLongJsonAppender" sourcefilename="ArrayLongJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([JLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="56"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([JLjava/lang/Appendable;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayFloatJsonAppender" sourcefilename="ArrayFloatJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([FLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="56"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([FLjava/lang/Appendable;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/JsonEncoderFactory$1" sourcefilename="JsonEncoderFactory.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoder" desc="(Lorg/apache/avro/Schema;Ljava/io/OutputStream;)Lorg/apache/avro/io/Encoder;" line="64"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoder" desc="(Lorg/apache/avro/Schema;Ljava/lang/Appendable;)Lorg/apache/avro/io/Encoder;" line="69"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/io/appenders/json/JsonEncoderFactory$2" sourcefilename="JsonEncoderFactory.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEncoder" desc="(Lorg/apache/avro/Schema;Ljava/io/OutputStream;)Lorg/apache/avro/io/Encoder;" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoder" desc="(Lorg/apache/avro/Schema;Ljava/lang/Appendable;)Lorg/apache/avro/io/Encoder;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ThrowableJsonAppender" sourcefilename="ThrowableJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="57"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;)V" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/SpecificRecordBaseJsonAppender" sourcefilename="SpecificRecordBaseJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/avro/specific/SpecificRecordBase;Ljava/lang/Appendable;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayBytesJsonAppender" sourcefilename="ArrayBytesJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([BLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="57"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([BLjava/lang/Appendable;)V" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="5"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/SampleNodeWriteableAppender" sourcefilename="SampleNodeWriteableAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/spf4j/stackmonitor/SampleNode;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/JsonWriteableAppender" sourcefilename="JsonWriteableAppender.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/spf4j/base/JsonWriteable;Ljava/lang/Appendable;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayObjectJsonAppender" sourcefilename="ArrayObjectJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="53"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([Ljava/lang/Object;Ljava/lang/Appendable;)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayCharsJsonAppender" sourcefilename="ArrayCharsJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([CLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="55"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([CLjava/lang/Appendable;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="5"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/MapJsonAppender" sourcefilename="MapJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Map;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendEntry" desc="(Ljava/util/Map$Entry;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="75"><counter type="INSTRUCTION" missed="20" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Map;Ljava/lang/Appendable;)V" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="87"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/CollectionJsonAppender" sourcefilename="CollectionJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Collection;Ljava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="41"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/util/Collection;Ljava/lang/Appendable;)V" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/appenders/json/ArrayBooleanJsonAppender" sourcefilename="ArrayBooleanJsonAppender.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAppendedType" desc="()Lorg/spf4j/base/CoreTextMediaType;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([ZLjava/lang/Appendable;Lorg/spf4j/io/ObjectAppenderSupplier;)V" line="57"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([ZLjava/lang/Appendable;)V" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ArrayBytesJsonAppender.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="5"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayIntJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayFloatJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapJsonAppender.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="87"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpecificRecordJsonAppender.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SampleNodeWriteableAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumberJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayBooleanJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayCharsJsonAppender.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="5"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpecificRecordBaseJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayDoubleJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericRecordJsonAppender.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonWriteableAppender.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayLongJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonEncoderFactory.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="ArrayObjectJsonAppender.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="2" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectionJsonAppender.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="1" cb="1"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="427" covered="302"/><counter type="BRANCH" missed="29" covered="9"/><counter type="LINE" missed="107" covered="99"/><counter type="COMPLEXITY" missed="43" covered="50"/><counter type="METHOD" missed="26" covered="48"/><counter type="CLASS" missed="1" covered="19"/></package><package name="org/spf4j/stackmonitor"><class name="org/spf4j/stackmonitor/SampleNode$1" sourcefilename="SampleNode.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/SampleNode$Invocation;Lorg/spf4j/base/avro/Method;Ljava/util/Deque;)V" line="436"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)Z" line="439"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;)V" line="102"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUp" desc="(I)I" line="116"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="137"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putKnownToFit" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfAbsent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="159"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doPut" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="194"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="206"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="213"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachKey" desc="(Lgnu/trove/procedure/TObjectProcedure;)Z" line="281"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachValue" desc="(Lgnu/trove/procedure/TObjectProcedure;)Z" line="293"><counter type="INSTRUCTION" missed="18" covered="14"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachEntry" desc="(Lgnu/trove/procedure/TObjectObjectProcedure;)Z" line="316"><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainEntries" desc="(Lgnu/trove/procedure/TObjectObjectProcedure;)Z" line="338"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformValues" desc="(Lgnu/trove/function/TObjectFunction;)V" line="359"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rehash" desc="(I)V" line="376"><counter type="INSTRUCTION" missed="15" covered="64"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="415"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="424"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="443"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAt" desc="(I)V" line="459"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/Collection;" line="470"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keySet" desc="()Ljava/util/Set;" line="480"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="490"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="501"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="533"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="543"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeExternal" desc="(Ljava/io/ObjectOutput;)V" line="855"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readExternal" desc="(Ljava/io/ObjectInput;)V" line="877"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="329" covered="304"/><counter type="BRANCH" missed="57" covered="31"/><counter type="LINE" missed="74" covered="78"/><counter type="COMPLEXITY" missed="47" covered="27"/><counter type="METHOD" missed="14" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$TObjectHashIterator" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/TObjectHash;)V" line="914"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objectAtIndex" desc="(I)Ljava/lang/Object;" line="921"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$Entry" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;Ljava/lang/Object;Ljava/lang/Object;I)V" line="800"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="808"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="813"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="818"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="831"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="842"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="848"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="21"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="7"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$EntryView" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;)V" line="592"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="610"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeElement" desc="(Ljava/util/Map$Entry;)Z" line="615"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsElement" desc="(Ljava/util/Map$Entry;)Z" line="644"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueForEntry" desc="(Ljava/util/Map$Entry;)Ljava/lang/Object;" line="652"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keyForEntry" desc="(Ljava/util/Map$Entry;)Ljava/lang/Object;" line="657"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="15"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="2"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/FastStackCollector" sourcefilename="FastStackCollector.java"><method name="&lt;init&gt;" desc="(Z[Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZZ[Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZZ[Ljava/lang/Thread;[Ljava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Predicate;I)V" line="74"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNameBasedFilter" desc="(ZZ[Ljava/lang/Thread;[Ljava/lang/String;)Ljava/util/function/Predicate;" line="109"><counter type="INSTRUCTION" missed="11" covered="43"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreads" desc="()[Ljava/lang/Thread;" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStackTraces" desc="([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;" line="138"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpToPrintStream" desc="(Ljava/io/PrintStream;)V" line="146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sample" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollectionsAndReset" desc="()Ljava/util/Map;" line="181"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollections" desc="()Ljava/util/Map;" line="187"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createNameBasedFilter$2" desc="(Ljava/lang/Thread;Ljava/lang/Thread;)Z" line="120"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createNameBasedFilter$1" desc="(Ljava/lang/Thread;Ljava/lang/Thread;)Z" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createNameBasedFilter$0" desc="(Ljava/lang/Thread;)Z" line="113"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="76" covered="216"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="14" covered="40"/><counter type="COMPLEXITY" missed="15" covered="15"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/FastStackCollector$ThreadNamesPredicate" sourcefilename="FastStackCollector.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="195"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Thread;)Z" line="201"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/StackTrace" sourcefilename="StackTrace.java"><method name="&lt;init&gt;" desc="([Ljava/lang/StackTraceElement;I)V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="([Ljava/lang/StackTraceElement;I)Lorg/spf4j/stackmonitor/StackTrace;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStackTrace" desc="()[Ljava/lang/StackTraceElement;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="67"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="73"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="47"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/SimpleStackCollector" sourcefilename="SimpleStackCollector.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Thread;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sample" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollectionsAndReset" desc="()Ljava/util/Map;" line="71"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollections" desc="()Ljava/util/Map;" line="77"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="81"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/Monitor$1" sourcefilename="Monitor.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/Sampler;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="114"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="6"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/SampleNode$TraversalData" sourcefilename="SampleNode.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)V" line="407"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/Monitor" sourcefilename="Monitor.java"><method name="main" desc="([Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="36" covered="108"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="9" covered="20"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$main$0" desc="(Ljava/lang/Thread;)Lorg/spf4j/stackmonitor/ISampler;" line="108"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="122"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$1" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;Ljava/lang/StringBuilder;)V" line="214"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="219"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/stackmonitor/THashMap$ValueView" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;)V" line="554"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="558"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsElement" desc="(Ljava/lang/Object;)Z" line="567"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeElement" desc="(Ljava/lang/Object;)Z" line="572"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="15"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/MethodMap" sourcefilename="MethodMap.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hash" desc="(Ljava/lang/Object;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="62"><counter type="INSTRUCTION" missed="6" covered="41"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="52"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$EntryView$EntryIterator" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap$EntryView;Lorg/spf4j/stackmonitor/THashMap;)V" line="596"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objectAtIndex" desc="(I)Lorg/spf4j/stackmonitor/THashMap$Entry;" line="603"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/ProfilingTLAttacher$1" sourcefilename="ProfilingTLAttacher.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/ProfilingTLAttacher;Lorg/spf4j/base/ThreadLocalContextAttacher$Attached;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detach" desc="()V" line="80"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTopOfStack" desc="()Z" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attachedThread" desc="()Ljava/lang/Thread;" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/MxStackCollector" sourcefilename="MxStackCollector.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Thread;)V" line="53"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sample" desc="()V" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recordStackDump" desc="([Ljava/lang/management/ThreadInfo;)V" line="65"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCollectionsAndReset" desc="()Ljava/util/Map;" line="76"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCollections" desc="()Ljava/util/Map;" line="82"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/stackmonitor/Sampler$1" sourcefilename="Sampler.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/Sampler;Ljava/lang/String;J)V" line="215"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doRun" desc="()V" line="221"><counter type="INSTRUCTION" missed="17" covered="111"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="121"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="7" covered="31"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/ProfilingTLAttacher" sourcefilename="ProfilingTLAttacher.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Thread;Ljava/lang/Thread;)I" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentThreads" desc="()Ljava/lang/Iterable;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentThreadContexts" desc="()Ljava/lang/Iterable;" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attach" desc="(Lorg/spf4j/base/ExecutionContext;)Lorg/spf4j/base/ThreadLocalContextAttacher$Attached;" line="74"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="53"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/ThreadStackSampler" sourcefilename="ThreadStackSampler.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/util/function/Supplier;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sample" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollectionsAndReset" desc="()Ljava/util/Map;" line="93"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollections" desc="()Ljava/util/Map;" line="99"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="115"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/ProfiledExecutionContext" sourcefilename="ProfiledExecutionContext.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)V" line="51"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAndClearStackSamples" desc="()Lorg/spf4j/stackmonitor/SampleNode;" line="59"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStackSamples" desc="()Lorg/spf4j/base/StackSamples;" line="69"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="([Ljava/lang/StackTraceElement;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/spf4j/base/StackSamples;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="101"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="4" covered="29"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/ThreadSpecificTracingExecutionContextHandler" sourcefilename="ThreadSpecificTracingExecutionContextHandler.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Ljava/util/function/Function;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/util/function/Supplier;Ljava/util/function/Function;)V" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareThreadsAndContexts" desc="(Ljava/lang/Iterable;)I" line="55"><counter type="INSTRUCTION" missed="1" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/Sampler" sourcefilename="Sampler.java"><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILorg/spf4j/stackmonitor/SamplerSupplier;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/SamplerSupplier;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="134"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILorg/spf4j/stackmonitor/SamplerSupplier;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILorg/spf4j/stackmonitor/SamplerSupplier;Ljava/lang/String;Ljava/lang/String;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILorg/spf4j/stackmonitor/SamplerSupplier;Ljava/io/File;Ljava/lang/String;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILorg/spf4j/stackmonitor/SamplerSupplier;Ljava/io/File;Ljava/lang/String;Z)V" line="97"><counter type="INSTRUCTION" missed="24" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSampler" desc="(IILjava/io/File;Ljava/lang/String;)Lorg/spf4j/stackmonitor/Sampler;" line="176"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSampler" desc="(IILorg/spf4j/stackmonitor/SamplerSupplier;Ljava/io/File;Ljava/lang/String;)Lorg/spf4j/stackmonitor/Sampler;" line="183"><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerJmx" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="()V" line="211"><counter type="INSTRUCTION" missed="12" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompressDumps" desc="()Z" line="276"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCompressDumps" desc="(Z)V" line="281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpToFile" desc="()Ljava/io/File;" line="288"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dumpToFile" desc="(Ljava/lang/String;)Ljava/io/File;" line="305"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dumpToFile" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;" line="327"><counter type="INSTRUCTION" missed="41" covered="87"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="9" covered="22"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="()V" line="375"><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSampleTimeMillis" desc="()I" line="396"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSampleTimeMillis" desc="(I)V" line="401"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStopped" desc="()Z" line="406"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="411"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStackCollectionsAndReset" desc="()Ljava/util/Map;" line="417"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStackCollections" desc="()Ljava/util/Map;" line="426"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="436"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDumpTimeMillis" desc="()I" line="442"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDumpTimeMillis" desc="(I)V" line="447"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFilePrefix" desc="()Ljava/lang/String;" line="452"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDumpFolder" desc="()Ljava/lang/String;" line="457"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastDumpTime" desc="()Ljava/util/Date;" line="463"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSampler$3" desc="(Ljava/lang/Thread;)Lorg/spf4j/stackmonitor/ISampler;" line="177"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Ljava/lang/Thread;)Lorg/spf4j/stackmonitor/ISampler;" line="134"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/lang/Thread;)Lorg/spf4j/stackmonitor/ISampler;" line="121"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Thread;)Lorg/spf4j/stackmonitor/ISampler;" line="117"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="230" covered="434"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="42" covered="104"/><counter type="COMPLEXITY" missed="23" covered="31"/><counter type="METHOD" missed="13" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/ProfiledExecutionContextFactory" sourcefilename="ProfiledExecutionContextFactory.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/spf4j/base/ExecutionContext;Lorg/spf4j/base/ExecutionContext$Relation;JJ)Lorg/spf4j/stackmonitor/ProfiledExecutionContext;" line="46"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/TObjectHash" sourcefilename="TObjectHash.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAt" desc="(I)V" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUp" desc="(I)I" line="100"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Lgnu/trove/procedure/TObjectProcedure;)Z" line="121"><counter type="INSTRUCTION" missed="18" covered="11"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="141"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="index" desc="(Ljava/lang/Object;)I" line="152"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexRehashed" desc="(Ljava/lang/Object;IILjava/lang/Object;)I" line="186"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexForNull" desc="()I" line="226"><counter type="INSTRUCTION" missed="16" covered="15"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertionIndex" desc="(Ljava/lang/Object;)I" line="250"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertKey" desc="(Ljava/lang/Object;)I" line="267"><counter type="INSTRUCTION" missed="3" covered="49"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertKeyRehash" desc="(Ljava/lang/Object;IILjava/lang/Object;)I" line="297"><counter type="INSTRUCTION" missed="32" covered="59"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertKeyForNull" desc="()I" line="360"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwObjectContractViolation" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="413"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwObjectContractViolation" desc="(Ljava/lang/Object;Ljava/lang/Object;II[Ljava/lang/Object;)V" line="432"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildObjectContractViolation" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;" line="451"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="462"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hash" desc="(Ljava/lang/Object;)I" line="469"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reportPotentialConcurrentMod" desc="(II)Ljava/lang/String;" line="475"><counter type="INSTRUCTION" missed="13" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dumpExtraInfo" desc="(Ljava/lang/Object;Ljava/lang/Object;II[Ljava/lang/Object;)Ljava/lang/String;" line="491"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detectKeyLoss" desc="([Ljava/lang/Object;I)Ljava/lang/String;" line="514"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeKeySet" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="526"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsSymmetryInfo" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;" line="537"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="objectInfo" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="558"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpKeyTypes" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;" line="563"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeExternal" desc="(Ljava/io/ObjectOutput;)V" line="589"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readExternal" desc="(Ljava/io/ObjectInput;)V" line="601"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="490" covered="289"/><counter type="BRANCH" missed="75" covered="39"/><counter type="LINE" missed="99" covered="76"/><counter type="COMPLEXITY" missed="59" covered="27"/><counter type="METHOD" missed="16" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/StackCollectorImpl" sourcefilename="StackCollectorImpl.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAndReset" desc="()Lorg/spf4j/stackmonitor/SampleNode;" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/spf4j/stackmonitor/SampleNode;" line="56"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="([Ljava/lang/StackTraceElement;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrNodes" desc="()I" line="78"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="43"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/Spf4jProfilerException" sourcefilename="Spf4jProfilerException.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/stackmonitor/THash" sourcefilename="THash.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="101"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="112"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="140"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAt" desc="(I)V" line="156"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="162"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUp" desc="(I)I" line="174"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxSize" desc="(I)V" line="203"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postInsertHook" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateGrownCapacity" desc="()I" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeExternal" desc="(Ljava/io/ObjectOutput;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readExternal" desc="(Ljava/io/ObjectInput;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="110"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="7" covered="26"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$HashProcedure" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;)V" line="236"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHashCode" desc="()I" line="240"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="244"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/stackmonitor/THashMap$ValueView$1" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap$ValueView;Lorg/spf4j/stackmonitor/TObjectHash;)V" line="558"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objectAtIndex" desc="(I)Ljava/lang/Object;" line="560"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/StackVisualizer" sourcefilename="StackVisualizer.java"><method name="generateHtmlTable" desc="(Ljava/io/Writer;Lorg/spf4j/base/avro/Method;Lorg/spf4j/base/StackSamples;II)V" line="62"><counter type="INSTRUCTION" missed="150" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateSvg" desc="(Ljava/io/Writer;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;IIIILjava/lang/String;)V" line="101"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateSubSvg" desc="(Ljava/io/Writer;Lorg/spf4j/base/avro/Method;Lorg/spf4j/base/StackSamples;IIIILjava/lang/String;)V" line="152"><counter type="INSTRUCTION" missed="195" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="575" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="59" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/stackmonitor/THashMap$MapBackedView" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;)V" line="661"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="675"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="682"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="689"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="694"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="699"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="704"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="715"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="735"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="740"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="746"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="758"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="151" covered="10"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="40" covered="2"/><counter type="COMPLEXITY" missed="19" covered="2"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/SampleNode" sourcefilename="SampleNode.java"><method name="&lt;init&gt;" desc="(II)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToCount" desc="(I)V" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSampleNode" desc="([Ljava/lang/StackTraceElement;)Lorg/spf4j/stackmonitor/SampleNode;" line="95"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToSampleNode" desc="(Lorg/spf4j/stackmonitor/SampleNode;[Ljava/lang/StackTraceElement;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubNodes" desc="()Lgnu/trove/map/TMap;" line="125"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="(Lorg/spf4j/stackmonitor/SampleNode;)Lorg/spf4j/stackmonitor/SampleNode;" line="141"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggregateNullable" desc="(Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/stackmonitor/SampleNode;)Lorg/spf4j/stackmonitor/SampleNode;" line="169"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/stackmonitor/SampleNode;)Lorg/spf4j/stackmonitor/SampleNode;" line="183"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggregateNullableUnsafe" desc="(Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/stackmonitor/SampleNode;)Lorg/spf4j/stackmonitor/SampleNode;" line="211"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/spf4j/stackmonitor/SampleNode;)V" line="232"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSampleCount" desc="()I" line="246"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="251"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="height" desc="()I" line="257"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNrNodes" desc="()I" line="277"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filteredBy" desc="(Ljava/util/function/Predicate;)Lorg/spf4j/stackmonitor/SampleNode;" line="295"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeJsonTo" desc="(Ljava/lang/Appendable;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Lorg/spf4j/base/avro/Method;Ljava/lang/Appendable;)V" line="328"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeD3JsonTo" desc="(Ljava/lang/Appendable;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeD3JsonFormatTo" desc="(Lorg/spf4j/base/avro/Method;Ljava/lang/Appendable;)V" line="373"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverse" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/stackmonitor/SampleNode$Invocation;)V" line="420"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverse" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/stackmonitor/SampleNode$Invocation;Z)V" line="425"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverse" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/stackmonitor/SampleNode$Invocation;Ljava/util/function/Function;)V" line="430"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/io/Reader;)Lorg/spf4j/base/Pair;" line="455"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lcom/fasterxml/jackson/core/JsonParser;Ljava/util/function/BiConsumer;)V" line="466"><counter type="INSTRUCTION" missed="13" covered="60"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseInto" desc="(Ljava/io/Reader;Lorg/spf4j/stackmonitor/SampleNode;)V" line="487"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseInto" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lorg/spf4j/stackmonitor/SampleNode;)V" line="496"><counter type="INSTRUCTION" missed="13" covered="65"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseD3Json" desc="(Ljava/io/Reader;)Lorg/spf4j/base/Pair;" line="523"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseD3Json" desc="(Lcom/fasterxml/jackson/core/JsonParser;Ljava/util/function/BiConsumer;)V" line="536"><counter type="INSTRUCTION" missed="38" covered="70"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consume" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;)V" line="578"><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="586"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="591"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeExternal" desc="(Ljava/io/ObjectOutput;)V" line="605"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readExternal" desc="(Ljava/io/ObjectInput;)V" line="614"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseD3Json$6" desc="(Lorg/spf4j/base/MutableHolder;Lorg/spf4j/base/MutableHolder;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)V" line="528"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$5" desc="(Lorg/spf4j/base/MutableHolder;Lorg/spf4j/base/MutableHolder;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)V" line="460"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$4" desc="(Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)Z" line="234"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$aggregate$3" desc="(Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)Z" line="190"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$aggregate$2" desc="(Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)Z" line="186"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$clone$1" desc="(Ljava/util/ArrayDeque;Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$clone$0" desc="(Ljava/util/ArrayDeque;Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)Z" line="147"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="248" covered="895"/><counter type="BRANCH" missed="40" covered="68"/><counter type="LINE" missed="55" covered="234"/><counter type="COMPLEXITY" missed="31" covered="66"/><counter type="METHOD" missed="5" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$EqProcedure" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;Ljava/util/Map;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="262"><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/TracingExecutionContexSampler" sourcefilename="TracingExecutionContexSampler.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Ljava/util/function/Function;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/util/function/Supplier;Ljava/util/function/Function;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sample" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareThreadsAndContexts" desc="(Ljava/lang/Iterable;)I" line="108"><counter type="INSTRUCTION" missed="27" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollectionsAndReset" desc="()Ljava/util/Map;" line="124"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCollections" desc="()Ljava/util/Map;" line="134"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCollections$2" desc="(Lgnu/trove/map/TMap;Ljava/lang/String;Lorg/spf4j/stackmonitor/StackCollector;)Z" line="136"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCollectionsAndReset$1" desc="(Lgnu/trove/map/TMap;Ljava/lang/String;Lorg/spf4j/stackmonitor/StackCollector;)Z" line="126"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sample$0" desc="(Ljava/lang/String;)Lorg/spf4j/stackmonitor/StackCollector;" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="129"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="11" covered="31"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$KeyView" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/THashMap;)V" line="775"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="779"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeElement" desc="(Ljava/lang/Object;)Z" line="784"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsElement" desc="(Ljava/lang/Object;)Z" line="789"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/SampleNode$Traverse" sourcefilename="SampleNode.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/SampleNode;Lorg/spf4j/base/avro/Method;Lorg/spf4j/stackmonitor/SampleNode;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/THashMap$THashIterator" sourcefilename="THashMap.java"><method name="&lt;init&gt;" desc="(Lorg/spf4j/stackmonitor/TObjectHash;)V" line="953"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="972"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="984"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="995"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveToNextIndex" desc="()V" line="1011"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextIndex" desc="()I" line="1028"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="68"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/stackmonitor/GCFakeStackUtil" sourcefilename="GCFakeStackUtil.java"><method name="createFakeGCSamples" desc="(JJJ)Lorg/spf4j/stackmonitor/SampleNode;" line="51"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/stackmonitor/Monitor$Options" sourcefilename="Monitor.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ProfiledExecutionContext.java"><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="101"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="4" covered="29"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Spf4jProfilerException.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GCFakeStackUtil.java"><line nr="44" mi="14" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="2" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="THashMap.java"><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="8" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="2"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="1" cb="1"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="1" cb="1"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="16" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="14" ci="0" mb="2" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="5" ci="2" mb="3" cb="1"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="10" mb="2" cb="2"/><line nr="268" mi="1" ci="4" mb="1" cb="1"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="1" cb="1"/><line nr="296" mi="14" ci="0" mb="4" cb="0"/><line nr="298" mi="2" ci="0" mb="2" cb="0"/><line nr="299" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="2"/><line nr="319" mi="0" ci="17" mb="1" cb="3"/><line nr="321" mi="0" ci="2" mb="1" cb="1"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="6" ci="0" mb="2" cb="0"/><line nr="342" mi="17" ci="0" mb="4" cb="0"/><line nr="344" mi="2" ci="0" mb="2" cb="0"/><line nr="345" mi="3" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="6" ci="0" mb="2" cb="0"/><line nr="362" mi="10" ci="0" mb="4" cb="0"/><line nr="363" mi="9" ci="0" mb="0" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="2"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="1" ci="6" mb="1" cb="3"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="1" cb="1"/><line nr="395" mi="14" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="7" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="9" mb="0" cb="2"/><line nr="424" mi="3" ci="0" mb="2" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="8" ci="0" mb="0" cb="0"/><line nr="431" mi="8" ci="0" mb="0" cb="0"/><line nr="432" mi="1" ci="0" mb="0" cb="0"/><line nr="443" mi="2" ci="0" mb="0" cb="0"/><line nr="444" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="2" cb="0"/><line nr="446" mi="5" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="5" ci="0" mb="0" cb="0"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="1" ci="0" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="2" cb="0"/><line nr="507" mi="6" ci="0" mb="2" cb="0"/><line nr="508" mi="15" ci="0" mb="6" cb="0"/><line nr="510" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="6" ci="0" mb="2" cb="0"/><line nr="515" mi="20" ci="0" mb="6" cb="0"/><line nr="516" mi="2" ci="0" mb="2" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="533" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="4" ci="0" mb="0" cb="0"/><line nr="545" mi="11" ci="0" mb="2" cb="0"/><line nr="546" mi="7" ci="0" mb="0" cb="0"/><line nr="547" mi="1" ci="0" mb="0" cb="0"/><line nr="548" mi="1" ci="0" mb="0" cb="0"/><line nr="554" mi="0" ci="8" mb="0" cb="0"/><line nr="558" mi="0" ci="14" mb="0" cb="0"/><line nr="560" mi="0" ci="7" mb="0" cb="0"/><line nr="567" mi="5" ci="0" mb="0" cb="0"/><line nr="572" mi="4" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="575" mi="6" ci="0" mb="2" cb="0"/><line nr="576" mi="26" ci="0" mb="8" cb="0"/><line nr="578" mi="2" ci="0" mb="2" cb="0"/><line nr="580" mi="4" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="585" mi="2" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="8" mb="0" cb="0"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="603" mi="0" ci="20" mb="0" cb="0"/><line nr="610" mi="0" ci="7" mb="0" cb="0"/><line nr="615" mi="4" ci="0" mb="2" cb="0"/><line nr="629" mi="4" ci="0" mb="0" cb="0"/><line nr="630" mi="5" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="2" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="18" ci="0" mb="4" cb="0"/><line nr="634" mi="2" ci="0" mb="2" cb="0"/><line nr="635" mi="4" ci="0" mb="0" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="644" mi="7" ci="0" mb="0" cb="0"/><line nr="645" mi="3" ci="0" mb="0" cb="0"/><line nr="646" mi="11" ci="0" mb="4" cb="0"/><line nr="647" mi="5" ci="0" mb="2" cb="0"/><line nr="652" mi="3" ci="0" mb="0" cb="0"/><line nr="657" mi="3" ci="0" mb="0" cb="0"/><line nr="661" mi="0" ci="6" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="682" mi="4" ci="0" mb="0" cb="0"/><line nr="683" mi="1" ci="0" mb="0" cb="0"/><line nr="684" mi="2" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="690" mi="1" ci="0" mb="0" cb="0"/><line nr="694" mi="4" ci="0" mb="0" cb="0"/><line nr="699" mi="4" ci="0" mb="0" cb="0"/><line nr="704" mi="4" ci="0" mb="0" cb="0"/><line nr="705" mi="3" ci="0" mb="0" cb="0"/><line nr="706" mi="7" ci="0" mb="2" cb="0"/><line nr="707" mi="5" ci="0" mb="0" cb="0"/><line nr="709" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="3" ci="0" mb="0" cb="0"/><line nr="716" mi="4" ci="0" mb="2" cb="0"/><line nr="717" mi="8" ci="0" mb="0" cb="0"/><line nr="720" mi="3" ci="0" mb="0" cb="0"/><line nr="721" mi="2" ci="0" mb="0" cb="0"/><line nr="722" mi="7" ci="0" mb="2" cb="0"/><line nr="723" mi="5" ci="0" mb="0" cb="0"/><line nr="726" mi="4" ci="0" mb="2" cb="0"/><line nr="727" mi="4" ci="0" mb="0" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="735" mi="0" ci="4" mb="0" cb="0"/><line nr="740" mi="4" ci="0" mb="0" cb="0"/><line nr="746" mi="2" ci="0" mb="0" cb="0"/><line nr="747" mi="3" ci="0" mb="0" cb="0"/><line nr="748" mi="3" ci="0" mb="2" cb="0"/><line nr="749" mi="5" ci="0" mb="2" cb="0"/><line nr="750" mi="2" ci="0" mb="0" cb="0"/><line nr="751" mi="3" ci="0" mb="0" cb="0"/><line nr="754" mi="2" ci="0" mb="0" cb="0"/><line nr="758" mi="3" ci="0" mb="0" cb="0"/><line nr="759" mi="5" ci="0" mb="2" cb="0"/><line nr="761" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="4" ci="0" mb="0" cb="0"/><line nr="764" mi="3" ci="0" mb="0" cb="0"/><line nr="765" mi="9" ci="0" mb="2" cb="0"/><line nr="766" mi="8" ci="0" mb="2" cb="0"/><line nr="767" mi="4" ci="0" mb="0" cb="0"/><line nr="768" mi="1" ci="0" mb="0" cb="0"/><line nr="775" mi="0" ci="8" mb="0" cb="0"/><line nr="779" mi="6" ci="0" mb="0" cb="0"/><line nr="784" mi="10" ci="0" mb="2" cb="0"/><line nr="789" mi="5" ci="0" mb="0" cb="0"/><line nr="800" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="0" ci="3" mb="0" cb="0"/><line nr="802" mi="0" ci="3" mb="0" cb="0"/><line nr="803" mi="0" ci="3" mb="0" cb="0"/><line nr="804" mi="0" ci="1" mb="0" cb="0"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="813" mi="0" ci="3" mb="0" cb="0"/><line nr="818" mi="9" ci="0" mb="2" cb="0"/><line nr="819" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="3" ci="0" mb="0" cb="0"/><line nr="824" mi="7" ci="0" mb="0" cb="0"/><line nr="825" mi="3" ci="0" mb="0" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="3" ci="0" mb="2" cb="0"/><line nr="832" mi="2" ci="0" mb="0" cb="0"/><line nr="833" mi="3" ci="0" mb="0" cb="0"/><line nr="834" mi="12" ci="0" mb="2" cb="0"/><line nr="835" mi="8" ci="0" mb="2" cb="0"/><line nr="837" mi="2" ci="0" mb="0" cb="0"/><line nr="842" mi="18" ci="0" mb="4" cb="0"/><line nr="848" mi="13" ci="0" mb="0" cb="0"/><line nr="855" mi="0" ci="3" mb="0" cb="0"/><line nr="858" mi="0" ci="3" mb="0" cb="0"/><line nr="861" mi="0" ci="4" mb="0" cb="0"/><line nr="864" mi="0" ci="7" mb="0" cb="2"/><line nr="865" mi="0" ci="12" mb="1" cb="3"/><line nr="866" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="0" ci="7" mb="0" cb="0"/><line nr="870" mi="0" ci="1" mb="0" cb="0"/><line nr="877" mi="0" ci="3" mb="0" cb="0"/><line nr="880" mi="0" ci="2" mb="1" cb="1"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="885" mi="0" ci="3" mb="0" cb="0"/><line nr="886" mi="0" ci="4" mb="0" cb="0"/><line nr="889" mi="0" ci="3" mb="0" cb="2"/><line nr="891" mi="0" ci="3" mb="0" cb="0"/><line nr="893" mi="0" ci="3" mb="0" cb="0"/><line nr="894" mi="0" ci="5" mb="0" cb="0"/><line nr="895" mi="0" ci="1" mb="0" cb="0"/><line nr="896" mi="0" ci="1" mb="0" cb="0"/><line nr="914" mi="0" ci="3" mb="0" cb="0"/><line nr="915" mi="0" ci="3" mb="0" cb="0"/><line nr="916" mi="0" ci="1" mb="0" cb="0"/><line nr="921" mi="6" ci="0" mb="0" cb="0"/><line nr="922" mi="6" ci="0" mb="4" cb="0"/><line nr="923" mi="2" ci="0" mb="0" cb="0"/><line nr="925" mi="2" ci="0" mb="0" cb="0"/><line nr="953" mi="0" ci="2" mb="0" cb="0"/><line nr="954" mi="0" ci="3" mb="0" cb="0"/><line nr="955" mi="0" ci="5" mb="0" cb="0"/><line nr="956" mi="0" ci="5" mb="0" cb="0"/><line nr="957" mi="0" ci="3" mb="0" cb="0"/><line nr="958" mi="0" ci="1" mb="0" cb="0"/><line nr="972" mi="0" ci="2" mb="0" cb="0"/><line nr="973" mi="0" ci="5" mb="0" cb="0"/><line nr="984" mi="0" ci="7" mb="0" cb="2"/><line nr="995" mi="6" ci="0" mb="2" cb="0"/><line nr="996" mi="4" ci="0" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="6" ci="0" mb="0" cb="0"/><line nr="1001" mi="1" ci="0" mb="0" cb="0"/><line nr="1011" mi="0" ci="6" mb="1" cb="1"/><line nr="1012" mi="4" ci="0" mb="0" cb="0"/><line nr="1014" mi="0" ci="1" mb="0" cb="0"/><line nr="1028" mi="0" ci="6" mb="1" cb="1"/><line nr="1029" mi="4" ci="0" mb="0" cb="0"/><line nr="1032" mi="0" ci="4" mb="0" cb="0"/><line nr="1033" mi="0" ci="3" mb="0" cb="0"/><line nr="1034" mi="1" ci="13" mb="1" cb="5"/><line nr="1037" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="848" covered="519"/><counter type="BRANCH" missed="136" covered="44"/><counter type="LINE" missed="181" covered="123"/><counter type="COMPLEXITY" missed="120" covered="52"/><counter type="METHOD" missed="44" covered="38"/><counter type="CLASS" missed="2" covered="11"/></sourcefile><sourcefile name="Monitor.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="1" cb="1"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="1" cb="1"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="14" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="16" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="20" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="146"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="13" covered="27"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ThreadStackSampler.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="2"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="1" cb="3"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="14" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="2" ci="8" mb="1" cb="1"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="105" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="115"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="THash.java"><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="2"/><line nr="142" mi="0" ci="17" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="9" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="110"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="7" covered="26"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StackVisualizer.java"><line nr="52" mi="56" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="4" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="71" mi="9" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="12" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="12" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="26" ci="0" mb="0" cb="0"/><line nr="106" mi="89" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="140" mi="13" ci="0" mb="0" cb="0"/><line nr="143" mi="13" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="15" ci="0" mb="0" cb="0"/><line nr="156" mi="14" ci="0" mb="0" cb="0"/><line nr="157" mi="29" ci="0" mb="0" cb="0"/><line nr="159" mi="25" ci="0" mb="0" cb="0"/><line nr="161" mi="11" ci="0" mb="0" cb="0"/><line nr="163" mi="19" ci="0" mb="0" cb="0"/><line nr="166" mi="12" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="4" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="2" cb="0"/><line nr="173" mi="13" ci="0" mb="0" cb="0"/><line nr="174" mi="19" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="575" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="59" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MethodMap.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="1" cb="1"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="4"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="52"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FastStackCollector.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="28" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="12" ci="0" mb="2" cb="0"/><line nr="115" mi="0" ci="16" mb="0" cb="2"/><line nr="116" mi="0" ci="12" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="1" cb="1"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="2" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="1" cb="3"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="228"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="14" covered="44"/><counter type="COMPLEXITY" missed="15" covered="17"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SimpleStackCollector.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="2" ci="6" mb="1" cb="1"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="2" ci="6" mb="1" cb="1"/><line nr="83" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="81"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sampler.java"><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="37" ci="0" mb="0" cb="0"/><line nr="117" mi="19" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="19" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="21" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="1" cb="1"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="1" cb="1"/><line nr="164" mi="12" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="14" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="1" cb="1"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="20" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="9" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="1" cb="1"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="1" cb="1"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="1" cb="1"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="7" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="12" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="22" mb="0" cb="2"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="2"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="2"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="1" cb="1"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="1" cb="1"/><line nr="345" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="2"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="1" cb="1"/><line nr="353" mi="0" ci="9" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="4" ci="0" mb="2" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="2" cb="0"/><line nr="365" mi="9" ci="0" mb="0" cb="0"/><line nr="367" mi="6" ci="0" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="2"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="2"/><line nr="384" mi="0" ci="8" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="401" mi="8" ci="0" mb="0" cb="0"/><line nr="402" mi="1" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="5" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="1" cb="1"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="1" cb="1"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="447" mi="6" ci="0" mb="0" cb="0"/><line nr="448" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="247" covered="555"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="49" covered="134"/><counter type="COMPLEXITY" missed="26" covered="35"/><counter type="METHOD" missed="13" covered="26"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="StackTrace.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="47"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TracingExecutionContexSampler.java"><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="2"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="2" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="4" ci="6" mb="1" cb="1"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="9" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="2" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="129"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="11" covered="31"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SampleNode.java"><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="13" mb="0" cb="0"/><line nr="155" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="1" cb="1"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="212" mi="2" ci="0" mb="2" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="2" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="2"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="2" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="11" ci="0" mb="2" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="2" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="2"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="11" mb="0" cb="2"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="11" ci="0" mb="2" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="2" cb="0"/><line nr="301" mi="6" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="2" cb="0"/><line nr="305" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="8" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="2" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="2" cb="0"/><line nr="315" mi="12" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="2"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="2"/><line nr="333" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="2"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="2"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="2"/><line nr="378" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="2"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="2"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="1" ci="8" mb="1" cb="1"/><line nr="426" mi="0" ci="1" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="0" ci="8" mb="0" cb="0"/><line nr="433" mi="0" ci="7" mb="0" cb="2"/><line nr="434" mi="0" ci="4" mb="0" cb="2"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="22" mb="0" cb="0"/><line nr="439" mi="0" ci="9" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="1" cb="1"/><line nr="441" mi="0" ci="8" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="1" cb="1"/><line nr="447" mi="1" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="462" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="2"/><line nr="472" mi="0" ci="9" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="1" cb="1"/><line nr="474" mi="0" ci="3" mb="0" cb="0"/><line nr="475" mi="0" ci="5" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="2"/><line nr="477" mi="0" ci="8" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="13" ci="0" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="487" mi="0" ci="4" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="5" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="2"/><line nr="504" mi="0" ci="5" mb="0" cb="0"/><line nr="505" mi="0" ci="6" mb="0" cb="0"/><line nr="507" mi="0" ci="6" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="2"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="1" cb="1"/><line nr="512" mi="0" ci="3" mb="0" cb="0"/><line nr="513" mi="0" ci="4" mb="0" cb="2"/><line nr="514" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="13" ci="0" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="523" mi="0" ci="4" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="4" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="530" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="2"/><line nr="541" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="8" mb="1" cb="3"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="1" mb="0" cb="0"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="0" cb="2"/><line nr="554" mi="0" ci="8" mb="0" cb="0"/><line nr="558" mi="13" ci="0" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="1" cb="1"/><line nr="561" mi="0" ci="2" mb="1" cb="1"/><line nr="562" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="1" cb="1"/><line nr="565" mi="6" ci="0" mb="0" cb="0"/><line nr="567" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="13" ci="0" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="1" cb="1"/><line nr="580" mi="13" ci="0" mb="0" cb="0"/><line nr="582" mi="0" ci="1" mb="0" cb="0"/><line nr="586" mi="8" ci="0" mb="0" cb="0"/><line nr="591" mi="0" ci="2" mb="1" cb="1"/><line nr="592" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="0" ci="5" mb="1" cb="1"/><line nr="595" mi="2" ci="0" mb="0" cb="0"/><line nr="597" mi="0" ci="6" mb="0" cb="2"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="4" mb="0" cb="0"/><line nr="609" mi="0" ci="1" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="617" mi="0" ci="4" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="248" covered="949"/><counter type="BRANCH" missed="41" covered="69"/><counter type="LINE" missed="55" covered="247"/><counter type="COMPLEXITY" missed="32" covered="70"/><counter type="METHOD" missed="5" covered="41"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="TObjectHash.java"><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="1" cb="1"/><line nr="123" mi="14" ci="0" mb="4" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="4"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="4"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="6" ci="11" mb="1" cb="1"/><line nr="228" mi="2" ci="0" mb="2" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="2" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="1" cb="1"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="2"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="1" cb="3"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="8" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="3" ci="3" mb="3" cb="1"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="2"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="2"/><line nr="322" mi="0" ci="3" mb="1" cb="1"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="8" mb="2" cb="2"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="1" cb="1"/><line nr="340" mi="3" ci="0" mb="2" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="17" ci="0" mb="2" cb="0"/><line nr="366" mi="6" ci="0" mb="4" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="2" cb="0"/><line nr="370" mi="3" ci="0" mb="2" cb="0"/><line nr="371" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="5" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="2" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="383" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="2" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="5" ci="0" mb="0" cb="0"/><line nr="413" mi="6" ci="0" mb="0" cb="0"/><line nr="432" mi="9" ci="0" mb="0" cb="0"/><line nr="435" mi="6" ci="0" mb="0" cb="0"/><line nr="451" mi="9" ci="0" mb="0" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="0" cb="0"/><line nr="462" mi="5" ci="0" mb="4" cb="0"/><line nr="463" mi="2" ci="0" mb="0" cb="0"/><line nr="465" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="1" cb="1"/><line nr="476" mi="13" ci="0" mb="0" cb="0"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="7" ci="0" mb="0" cb="0"/><line nr="495" mi="6" ci="0" mb="0" cb="0"/><line nr="496" mi="6" ci="0" mb="0" cb="0"/><line nr="499" mi="3" ci="0" mb="2" cb="0"/><line nr="500" mi="6" ci="0" mb="0" cb="0"/><line nr="503" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="4" ci="0" mb="0" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="2" cb="0"/><line nr="517" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="11" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="522" mi="3" ci="0" mb="0" cb="0"/><line nr="526" mi="4" ci="0" mb="0" cb="0"/><line nr="527" mi="16" ci="0" mb="2" cb="0"/><line nr="528" mi="6" ci="0" mb="4" cb="0"/><line nr="529" mi="4" ci="0" mb="0" cb="0"/><line nr="533" mi="2" ci="0" mb="0" cb="0"/><line nr="537" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="2" cb="0"/><line nr="539" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="5" ci="0" mb="2" cb="0"/><line nr="543" mi="12" ci="0" mb="0" cb="0"/><line nr="545" mi="4" ci="0" mb="0" cb="0"/><line nr="546" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="3" ci="0" mb="2" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="549" mi="6" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="558" mi="23" ci="0" mb="4" cb="0"/><line nr="559" mi="8" ci="0" mb="0" cb="0"/><line nr="563" mi="4" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="17" ci="0" mb="2" cb="0"/><line nr="566" mi="6" ci="0" mb="4" cb="0"/><line nr="567" mi="2" ci="0" mb="2" cb="0"/><line nr="568" mi="6" ci="0" mb="0" cb="0"/><line nr="570" mi="4" ci="0" mb="0" cb="0"/><line nr="574" mi="4" ci="0" mb="2" cb="0"/><line nr="575" mi="4" ci="0" mb="0" cb="0"/><line nr="578" mi="6" ci="0" mb="0" cb="0"/><line nr="579" mi="6" ci="0" mb="0" cb="0"/><line nr="582" mi="3" ci="0" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="3" mb="0" cb="0"/><line nr="593" mi="0" ci="1" mb="0" cb="0"/><line nr="601" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="3" mb="0" cb="0"/><line nr="605" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="490" covered="289"/><counter type="BRANCH" missed="75" covered="39"/><counter type="LINE" missed="99" covered="76"/><counter type="COMPLEXITY" missed="59" covered="27"/><counter type="METHOD" missed="16" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThreadSpecificTracingExecutionContextHandler.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="1" cb="1"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StackCollectorImpl.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="1" cb="1"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="43"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MxStackCollector.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="16" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="4" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="2" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="2" cb="0"/><line nr="88" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProfiledExecutionContextFactory.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProfilingTLAttacher.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="5" ci="6" mb="1" cb="1"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="2952" covered="3491"/><counter type="BRANCH" missed="337" covered="263"/><counter type="LINE" missed="559" covered="842"/><counter type="COMPLEXITY" missed="331" covered="279"/><counter type="METHOD" missed="127" covered="182"/><counter type="CLASS" missed="6" covered="35"/></package><package name="org/spf4j/io/compress"><class name="org/spf4j/io/compress/Compress" sourcefilename="Compress.java"><method name="zip" desc="(Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="87"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zip" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zip" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Predicate;)V" line="117"><counter type="INSTRUCTION" missed="12" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFileAtomic" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)V" line="166"><counter type="INSTRUCTION" missed="14" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip" desc="(Ljava/nio/file/Path;)Ljava/util/List;" line="193"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unzip" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/List;" line="209"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Predicate;)Ljava/util/List;" line="222"><counter type="INSTRUCTION" missed="40" covered="73"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip2" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/List;" line="279"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip2" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Predicate;)Ljava/util/List;" line="286"><counter type="INSTRUCTION" missed="16" covered="84"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$unzip2$3" desc="(Ljava/nio/file/Path;)Z" line="279"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$unzip$2" desc="(Ljava/nio/file/Path;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$zip$1" desc="(Ljava/util/function/Predicate;Ljava/nio/file/Path;Ljava/util/zip/ZipOutputStream;Ljava/nio/file/Path;)V" line="133"><counter type="INSTRUCTION" missed="15" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$zip$0" desc="(Ljava/nio/file/Path;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="132" covered="369"/><counter type="BRANCH" missed="14" covered="18"/><counter type="LINE" missed="21" covered="73"/><counter type="COMPLEXITY" missed="13" covered="16"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/io/compress/Compress$1" sourcefilename="Compress.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Predicate;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/List;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="241"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="256"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="66"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Compress.java"><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="12" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="1" cb="1"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="12" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="2"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="1" cb="1"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="13" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="14" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="1" cb="1"/><line nr="168" mi="14" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="14" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="14" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="1" cb="1"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="1" cb="1"/><line nr="226" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="12" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="0" cb="2"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="24" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="1" cb="1"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="9" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="2" cb="2"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="1" cb="1"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="10" ci="0" mb="2" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="13" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="1" cb="1"/><line nr="293" mi="16" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="7" mb="1" cb="1"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="2" cb="2"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="10" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="435"/><counter type="BRANCH" missed="18" covered="22"/><counter type="LINE" missed="23" covered="84"/><counter type="COMPLEXITY" missed="17" covered="19"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="136" covered="435"/><counter type="BRANCH" missed="18" covered="22"/><counter type="LINE" missed="23" covered="84"/><counter type="COMPLEXITY" missed="17" covered="19"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="45442" covered="47228"/><counter type="BRANCH" missed="4382" covered="3247"/><counter type="LINE" missed="9326" covered="10754"/><counter type="COMPLEXITY" missed="4814" covered="3503"/><counter type="METHOD" missed="2050" covered="2410"/><counter type="CLASS" missed="184" covered="516"/></group><counter type="INSTRUCTION" missed="45442" covered="47228"/><counter type="BRANCH" missed="4382" covered="3247"/><counter type="LINE" missed="9326" covered="10754"/><counter type="COMPLEXITY" missed="4814" covered="3503"/><counter type="METHOD" missed="2050" covered="2410"/><counter type="CLASS" missed="184" covered="516"/></report>